triggers {
  name: "Setup"
  events {
    ops {
      functionName: "On Map Setup"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Prop Visible"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "58b1e8596666641017006e5e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "58b1e8ae6666641017006e62"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Start"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Flicker"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "58b203d4666664b803006e70"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Flicker"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_Flicker"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 0
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  actions {
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            call_value {
              functionName: "Append (string)"
              args {
                call_value {
                  functionName: "Convert (int) to (string)"
                  args {
                    call_value {
                      functionName: "Random (int)"
                      args {
                        int_value: 1
                      }
                      args {
                        int_value: 6
                      }
                    }
                  }
                }
              }
              args {
                string_value: "TinyStar"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Flicker"
          }
        }
      }
      args {
        call_value {
          functionName: "Random (float)"
          args {
            call_value {
              functionName: "Get Variable (float)"
              args {
                string_value: "Float_FlickerDelayMin"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Variable (float)"
              args {
                string_value: "Float_FlickerDelayMax"
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "58b202a2666664b803006e6f"
  }
  elseActions {
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            call_value {
              functionName: "Append (string)"
              args {
                call_value {
                  functionName: "Convert (int) to (string)"
                  args {
                    call_value {
                      functionName: "Random (int)"
                      args {
                        int_value: 1
                      }
                      args {
                        int_value: 6
                      }
                    }
                  }
                }
              }
              args {
                string_value: "TinyStar"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Flicker"
          }
        }
      }
      args {
        call_value {
          functionName: "Random (float)"
          args {
            call_value {
              functionName: "Get Variable (float)"
              args {
                string_value: "Float_FlickerDelayMin"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Variable (float)"
              args {
                string_value: "Float_FlickerDelayMax"
              }
            }
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "Animate"
  events {
    ops {
      functionName: "On Curtains Up"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Select Item on Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Pi 1 Fichetti Security 500"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59628a003565642c15007335"
              }
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Play FX on Actor"
      args {
        string_value: "standing_idle_dancing"
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59628af63565642c1500733a"
              }
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Play FX on Actor"
      args {
        string_value: "General/standing_idle_dancing"
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59628b8d3565642c1500733c"
              }
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Play FX on Actor"
      args {
        string_value: "Berlin:General/standing_idle_dancing"
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59628b863565642c1500733b"
              }
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59628a003565642c15007335"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:Creature/Dog/downed_idle"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59628a3a3565642c15007336"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Interact_SceneTransition"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5987414d3565640450004aab"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Open Hiring Screen and Open Scene"
      args {
        call_value {
          functionName: "Get Map Item (Scene)"
          args {
            string_value: "test_combat"
          }
        }
      }
      args {
        string_value: "Are you ready to fight?"
      }
    }
  }
  isActive: true
  idRef {
    id: "598741973565640450004aad"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "DummyVars"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "58a09a016666641898001ad5"
          }
          args {
            string_value: "Global-TeamState_Desorn"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "58a09a016666641898001ad5"
          }
          args {
            string_value: "Global-TeamState_Kora"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "58a09a016666641898001ad5"
          }
          args {
            string_value: "Global-TeamState_Valiri"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "58a09a016666641898001ad5"
          }
          args {
            string_value: "CharacterScaleAmount"
          }
        }
      }
    }
  }
  actions {
  }
  isActive: false
  idRef {
    id: "59877a2a3565643028006e65"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "ConfigureDoggo"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Actor In Passive Mode"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5998913b3565640c240080cf"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "599892843565640c240080d7"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "GoodDoggo"
  events {
    ops {
      functionName: "On Actor Start Turn"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5998913b3565640c240080cf"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Tile Distance To Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5998913b3565640c240080cf"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 3
      }
    }
  }
  actions {
    ops {
      functionName: "Order Actor to Move To (Actor)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5998913b3565640c240080cf"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "599894083565640c240080d8"
  }
  elseActions {
  }
  is_oneshot: false
}
regions {
  name: "Camera"
  position {
    x: -6
    y: -4
    width: 15
    height: 14
  }
  enabledAtStart: true
  is_camera_region: true
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "596247c7356564cc3a00599f"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: -2
    y: 0
    z: 0
  }
  orientation: ORIENTATION_S
  idRef {
    id: "58a09a196666641898001ad6"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 0
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -25
    y: 0
    z: -15
  }
  orientation: ORIENTATION_S
  displayName: "Invisible Shadowrunner Camera"
  idRef {
    id: "58b1e8746666641017006e60"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/InvisibleActor"
    character_sheet_id: "Camera"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Shadowrunners"
    char_name: "Camera"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    unkillable: true
    hiring_type: HiringType_None
    karma: 2
    hiring_cost_override: 3000
    is_prop_character: true
    hide_floaties: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -2
    y: 0
    z: 1
  }
  orientation: ORIENTATION_S
  displayName: "Pupper"
  idRef {
    id: "5998913b3565640c240080cf"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Aztechnology/CreatureDogFriendly"
    character_sheet_id: "Adept_Lv1_HtH"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        armor: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        close_combat: 0
        dodge: 0
        chi_casting: 0
      }
      specializations {
        unarmed: 0
      }
      archetypeName: "Non-Combatant"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Dog 1"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    unkillable: true
    allow_enemy_free_move_interaction: true
    karma: 72
    hide_floaties: true
    has_fist: false
  }
}
variables {
  float_value: 0.5
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Float_FlickerDelayMin"
    typeName: "float"
  }
}
variables {
  float_value: 10
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Float_FlickerDelayMax"
    typeName: "float"
  }
}
mapEvents: "Event_Flicker"
worldMapLocation {
  filename: ""
  location {
    x: 0
    y: 0
  }
}
mapName: "test"
parentStory: ""
scene_title: "New Scene"
scene_subtitle: ""
scene_synopsis: ""
scene_image: ""
scene_continue_button_skip: false
scene_restore_runner_health: false
directional_light_dir {
  x: -0.5
  y: -1
  z: -0.75
}
directional_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
ambient_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
allow_drawn_weapons: false
team_affiliations {
  team_name: "Shadowrunners"
  affiliation: 0
  affiliation: 1
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "Gangers"
  affiliation: 1
  affiliation: 0
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "LoneStar"
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Civilians"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
scene_dimensions {
  dimension_name: "Default"
}
character_roster {
}
show_hiring_screen_on_scene_load: false
scene_hiring_prerequisites {
  prereq_description: ""
  prereq_conditions {
  }
}
hiring_slot_count: 0
hiring_minimum_karma: 0
hiring_maximum_karma: 0
roster_overrides {
}
use_hiring_cost_warning: false
hiring_average_cost: 99999
override_hiring_average_cost: true
show_equip_screen_on_scene_load: false
is_persistant: false
is_persistant_has_value: false
can_move_outside_camera_regions: false
can_start_before_triggers: false
can_use_team_advancement: false
