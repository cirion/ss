triggers {
  name: "Setup"
  events {
    ops {
      functionName: "On Map Setup"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Prop Visible"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "58b1e8596666641017006e5e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "58b1e8ae6666641017006e62"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Start"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Flicker"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "58b203d4666664b803006e70"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Flicker"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_Flicker"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 0
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  actions {
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            call_value {
              functionName: "Append (string)"
              args {
                call_value {
                  functionName: "Convert (int) to (string)"
                  args {
                    call_value {
                      functionName: "Random (int)"
                      args {
                        int_value: 1
                      }
                      args {
                        int_value: 6
                      }
                    }
                  }
                }
              }
              args {
                string_value: "TinyStar"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Flicker"
          }
        }
      }
      args {
        call_value {
          functionName: "Random (float)"
          args {
            call_value {
              functionName: "Get Variable (float)"
              args {
                string_value: "Float_FlickerDelayMin"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Variable (float)"
              args {
                string_value: "Float_FlickerDelayMax"
              }
            }
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "58b202a2666664b803006e6f"
  }
  elseActions {
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            call_value {
              functionName: "Append (string)"
              args {
                call_value {
                  functionName: "Convert (int) to (string)"
                  args {
                    call_value {
                      functionName: "Random (int)"
                      args {
                        int_value: 1
                      }
                      args {
                        int_value: 6
                      }
                    }
                  }
                }
              }
              args {
                string_value: "TinyStar"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Flicker"
          }
        }
      }
      args {
        call_value {
          functionName: "Random (float)"
          args {
            call_value {
              functionName: "Get Variable (float)"
              args {
                string_value: "Float_FlickerDelayMin"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Variable (float)"
              args {
                string_value: "Float_FlickerDelayMax"
              }
            }
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "Animate"
  events {
    ops {
      functionName: "On Curtains Up"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Select Item on Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Pi 1 Fichetti Security 500"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59628a003565642c15007335"
              }
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Play FX on Actor"
      args {
        string_value: "standing_idle_dancing"
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59628af63565642c1500733a"
              }
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Play FX on Actor"
      args {
        string_value: "General/standing_idle_dancing"
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59628b8d3565642c1500733c"
              }
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Play FX on Actor"
      args {
        string_value: "Berlin:General/standing_idle_dancing"
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59628b863565642c1500733b"
              }
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59628a003565642c15007335"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:Creature/Dog/downed_idle"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59628a3a3565642c15007336"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Interact_SceneTransition"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5987414d3565640450004aab"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Open Hiring Screen and Open Scene"
      args {
        call_value {
          functionName: "Get Map Item (Scene)"
          args {
            string_value: "test_combat"
          }
        }
      }
      args {
        string_value: "Are you ready to fight?"
      }
    }
  }
  isActive: true
  idRef {
    id: "598741973565640450004aad"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "DummyVars"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "58a09a016666641898001ad5"
          }
          args {
            string_value: "Global-TeamState_Desorn"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "58a09a016666641898001ad5"
          }
          args {
            string_value: "Global-TeamState_Kora"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "58a09a016666641898001ad5"
          }
          args {
            string_value: "Global-TeamState_Valiri"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "58a09a016666641898001ad5"
          }
          args {
            string_value: "CharacterScaleAmount"
          }
        }
      }
    }
  }
  actions {
  }
  isActive: false
  idRef {
    id: "59877a2a3565643028006e65"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Global_Dog_Passive"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Actor In Passive Mode"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5998913b3565640c240080cf"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "599892843565640c240080d7"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Global_Dog_Follows"
  events {
    ops {
      functionName: "On Actor Start Turn"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5998913b3565640c240080cf"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Tile Distance To Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5998913b3565640c240080cf"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 3
      }
    }
  }
  actions {
    ops {
      functionName: "Order Actor to Move To (Actor)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5998913b3565640c240080cf"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "599894083565640c240080d8"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Interact_AnimateDownedIdle"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "599b9a243565646c650033b8"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "599b99f53565646c650033b6"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:Creature/Dog/downed_idle"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "599b9a283565646c650033b9"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Interact_AnimateAttack"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "599b9a523565646c650033ba"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "599b99f53565646c650033b6"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:Creature/Dog/standing_attack"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "599b9a813565646c650033c1"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Interact_AnimateBarking"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "599b9a583565646c650033bc"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "599b99f53565646c650033b6"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:Creature/Dog/standing_barking"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "599b9a833565646c650033c2"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Interact_AnimateCast"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "599b9a5c3565646c650033be"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "599b99f53565646c650033b6"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:Creature/Dog/standing_cast"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "599b9a843565646c650033c3"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Interact_AnimateDeath"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "599b9a5a3565646c650033bd"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "599b99f53565646c650033b6"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:Creature/Dog/standing_death"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "599b9a853565646c650033c4"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Interact_AnimateHitreaction"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "599b9a5d3565646c650033bf"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "599b99f53565646c650033b6"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:Creature/Dog/standing_hitreaction_bigbehind"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "599b9a863565646c650033c5"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Interact_AnimateIdle"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "599b9b4e3565646c650033d5"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "599b99f53565646c650033b6"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:Creature/Dog/standing_idle"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "599b9a893565646c650033c6"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Interact_AnimateIdleLaying"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "599b9b503565646c650033d6"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "599b99f53565646c650033b6"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:Creature/Dog/standing_idle_laying"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "599b9a8b3565646c650033c7"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Interact_AnimateIdleSitting"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "599b9b503565646c650033d7"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "599b99f53565646c650033b6"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:Creature/Dog/standing_idle_sitting"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "599b9a8d3565646c650033c8"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Interact_AnimateIdleTailwag"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "599b9b493565646c650033ce"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "599b99f53565646c650033b6"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:Creature/Dog/standing_idle_tailwag"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "599b9a8e3565646c650033c9"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Interact_AnimatePlayful"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "599b9b4a3565646c650033cf"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "599b99f53565646c650033b6"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:Creature/Dog/standing_playful"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "599b9a903565646c650033ca"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Interact_AnimateRunning"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "599b9b4a3565646c650033d0"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "599b99f53565646c650033b6"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:Creature/Dog/standing_running"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "599b9a913565646c650033cb"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Interact_AnimateSprint"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "599b9b4b3565646c650033d1"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "599b99f53565646c650033b6"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:Creature/Dog/standing_running_sprint"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "599b9a923565646c650033cc"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Interact_AnimateSit"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "599b9b4b3565646c650033d2"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "599b99f53565646c650033b6"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:Creature/Dog/standing_sit"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "599b9a933565646c650033cd"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Interact_AnimateIdleCalm"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "599b9a5c3565646c650033be"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "599b99f53565646c650033b6"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:Creature/Dog/standing_idle_calm"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "599b9d333565646c650033e6"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Interact_ShootBurst_BROKEN"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "59c26afb356564c047005e17"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c26af5356564c047005e16"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_attack_rifle_burst"
          }
        }
      }
    }
    ops {
      functionName: "Play FX on Actor"
      args {
        string_value: "GunBurstFireAction"
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59c26af5356564c047005e16"
              }
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
      args {
        float_value: 0.5
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
    }
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59c26add356564c047005e15"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "59c26f60356564c047005e23"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Placeholder"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "59cc75fc3565649c3d00567c"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59c26e51356564c047005e1f"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Start_Anim"
  events {
    ops {
      functionName: "On Map Start"
    }
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "59c26b06356564c047005e18"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner By Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isVictim"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c26add356564c047005e15"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_idle_cower"
          }
        }
      }
    }
    ops {
      functionName: "Select Item on Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "AR 1 Semopal vz88v"
          }
        }
      }
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isGuard"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c277d53565648836003240"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_idle_rifle"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c30863356564285100260e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/kneeling_idle"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c309733565642851002613"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_idle_cower"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c309b43565642851002615"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_idle_clamoring"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c30882356564285100260f"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_idle_headCradle"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c30a563565642851002617"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_idle_injured"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c30a1a3565642851002616"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_idle_rocking"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c308e33565642851002611"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/rigging_dizzy_dumpshock"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c309293565642851002612"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/downed_idle"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c308ba3565642851002610"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_idle_cower"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59c26b1c356564c047005e1b"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Interact_ShootFullAuto"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "59c26f3a356564c047005e20"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Order Actor to Face Direction"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isGuardSync1"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
      args {
        float_value: 0.12
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Face Direction"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isGuardSync2"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c272ca356564883600323c"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_idle_rifle"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c272f5356564883600323d"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_idle_rifle"
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
      args {
        float_value: 0.12
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c26af5356564c047005e16"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_idle_rifle"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c2779f356564883600323f"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_idle_rifle"
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
      args {
        float_value: 0.4
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c272ca356564883600323c"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_attack_rifle_fullauto"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c272f5356564883600323d"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_attack_rifle_fullauto"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c277d53565648836003240"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_attack_rifle_fullauto"
          }
        }
      }
    }
    ops {
      functionName: "Play FX on Actor"
      args {
        string_value: "GunFullAutoFireAction"
      }
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isGuardSync1"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
      args {
        float_value: 0.1
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c2779f356564883600323f"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_attack_rifle_fullauto"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c26af5356564c047005e16"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_attack_rifle_fullauto"
          }
        }
      }
    }
    ops {
      functionName: "Play FX on Actor"
      args {
        string_value: "GunFullAutoFireAction"
      }
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isGuardSync2"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
      args {
        float_value: 0.4
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
    }
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59c26add356564c047005e15"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59c309b43565642851002615"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
      args {
        float_value: 0.1
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
    }
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59c30863356564285100260e"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59c30882356564285100260f"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c30a1a3565642851002616"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/downed_idle"
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
      args {
        float_value: 0.25
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
    }
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59c309733565642851002613"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59c308e33565642851002611"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59c309293565642851002612"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
      args {
        float_value: 0.25
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
    }
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59c308ba3565642851002610"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59c30a563565642851002617"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c272ca356564883600323c"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_idle"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c272f5356564883600323d"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_idle"
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
      args {
        float_value: 0.8
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c26af5356564c047005e16"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_idle"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c277d53565648836003240"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_idle"
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
      args {
        float_value: 0.6
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c2779f356564883600323f"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_idle"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59c26b6c356564c047005e1c"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Interact_FinishOff"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "59c311f8356564285100261a"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c2779f356564883600323f"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_idle_rifle"
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c2779f356564883600323f"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_aiming_rifle"
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
      args {
        float_value: 1.1
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c2779f356564883600323f"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_attack_rifle_fullauto"
          }
        }
      }
    }
    ops {
      functionName: "Play FX on Actor"
      args {
        string_value: "GunFullAutoFireAction"
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59c2779f356564883600323f"
              }
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
      args {
        float_value: 0.7
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
    }
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59c30a1a3565642851002616"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59c2779f356564883600323f"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_idle"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59c31358356564285100261c"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Interact_CastFire"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "59c66abf356564c45a000d0a"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play FX on Actor"
      args {
        string_value: "Berlin:CreatorTotemCastAction"
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59c66a9f356564c45a000d08"
              }
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:spellcasting"
          }
          args {
            string_value: "StandOnLeylineClose"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59c66ade356564c45a000d0c"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "BarrelDestroyed"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Count of Alive Actors"
          args {
            call_value {
              functionName: "Specific Actor"
              args {
                call_value {
                  functionName: "Get Map Item (Actor)"
                  args {
                    string_value: "59c66ad1356564c45a000d0b"
                  }
                }
              }
              args {
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  actions {
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Clear ThreatList"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59c66a9f356564c45a000d08"
              }
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Clear Actor Orders"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59c66a9f356564c45a000d08"
              }
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "End Current Team Round"
    }
  }
  isActive: true
  idRef {
    id: "59c66e30356564c45a000d10"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Interact_SpawnSpirit"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "59cc763a3565649c3d00567d"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59cc76843565649c3d005681"
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59cc75e83565649c3d00567b"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Add Camera Point of Interest (Point)"
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "59cc76843565649c3d005681"
              }
            }
          }
        }
      }
      args {
        float_value: 4
      }
    }
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59cc75e83565649c3d00567b"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
      args {
        float_value: 0.25
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor With Fade"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59cc75fc3565649c3d00567c"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "59cc76843565649c3d005681"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
    }
    ops {
      functionName: "Play FX at Point"
      args {
        string_value: "Berlin:ToxicBarrelDeathAction"
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "59cc76843565649c3d005681"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Set Actor Body Prefab"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59c66a9f356564c45a000d08"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "59cc75fc3565649c3d00567c"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59cc763e3565649c3d00567e"
  }
  elseActions {
  }
  is_oneshot: false
}
regions {
  name: "Camera"
  position {
    x: -6
    y: -4
    width: 14
    height: 18
  }
  enabledAtStart: true
  is_camera_region: true
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "596247c7356564cc3a00599f"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 2
    y: 0
    z: 0
  }
  orientation: ORIENTATION_S
  idRef {
    id: "58a09a196666641898001ad6"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 0
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -25
    y: 0
    z: -15
  }
  orientation: ORIENTATION_S
  displayName: "Invisible Shadowrunner Camera"
  idRef {
    id: "58b1e8746666641017006e60"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/InvisibleActor"
    character_sheet_id: "Camera"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      vulnerabilities {
      }
    }
    team_id: "Shadowrunners"
    char_name: "Camera"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    unkillable: true
    hiring_type: HiringType_None
    karma: 2
    hiring_cost_override: 3000
    is_prop_character: true
    hide_floaties: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -2
    y: 0
    z: 0
  }
  orientation: ORIENTATION_E
  idRef {
    id: "599b99f53565646c650033b6"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Creatures/HKPoliceDog"
    character_sheet_id: "Crew_Dog_Lv1"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "$(story.Global-DogName)"
    GeneralTags: "isDog"
    enabled_at_start: true
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    unkillable: true
    hiring_type: HiringType_None
    disable_pickups: true
    revivable_override: false
    allow_enemy_free_move_interaction: true
    portrait {
      filename: "npc_dog_dante_eye"
    }
    karma: 107
    hiring_cost_override: 1000
    hiring_tag: "Companion: Dog"
    hide_floaties: true
    has_fist: false
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 4
    y: 0
    z: 2
  }
  orientation: ORIENTATION_E
  GeneralTags: "isPassive"
  GeneralTags: "canExit"
  GeneralTags: "isHalferville"
  displayName: "Dorbi"
  idRef {
    id: "59c66a9f356564c45a000d08"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/DwarfFemale"
    character_sheet_id: "RedSamurai_Lv6_Mage"
    character_mod {
      stats {
        body: 2
        quickness: 0
        strength: 0
        charisma: 5
        intelligence: 4
        willpower: 2
        essence: 0
        magic: 0
        hp: 20
        ap: 1
        armor: -3
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: -3
        close_combat: 0
        throwing_weapons: -2
        spellcasting: 3
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 3
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: -1
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_Mage"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Dorbi Inferno Power"
    }
    equipment {
      prefab_name: "Dorbi Heat Wave"
    }
    equipment {
      prefab_name: "Spell Firebolt 4"
    }
    equipment {
      prefab_name: "Spell Fireball 3"
    }
    equipment {
      prefab_name: "Fire Barrier 5 Dorbi"
    }
    equipment {
      prefab_name: "Spell Flamethrower 4"
    }
    equipment {
      prefab_name: "Dorbi_Coat Lv3"
    }
    team_id: "Dorbi"
    char_name: "Dorbi"
    GeneralTags: "isPassive"
    GeneralTags: "canExit"
    GeneralTags: "isHalferville"
    pc_spawn_number: -1
    cyberware_left_arm: "(Arm) JoltAlert"
    portrait {
      filename: "pc_dwarffemale_06"
    }
    portrait_code_override: "s4h17c5b0c0t0"
    karma: 235
    cyberware_skin: "(Skin) Tailored Pheromones (Bioware)"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 4
    y: 0
    z: 6
  }
  orientation: ORIENTATION_S
  displayName: "Barrel"
  idRef {
    id: "59c66ad1356564c45a000d0b"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Objects/FireExplosiveBarrel"
    character_sheet_id: "Environment_Barrel_Explosive"
    equipment_sheet_id: "Environment_Barrel_Fire"
    character_mod {
      stats {
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      archetypeName: "Non-Combatant"
    }
    team_id: "Barrel"
    char_name: "Barrel"
    pc_spawn_number: -1
    ai_ignores: false
    portrait {
      filename: ""
    }
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 2
    y: 0
    z: 4
  }
  orientation: ORIENTATION_S
  displayName: "Outside_Rime"
  idRef {
    id: "59cc75e83565649c3d00567b"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    prerequisites {
      ops {
        functionName: "Evaluate Goal"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "Find Rime"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    conversationPoint {
      conversationID: "59cad27e643431150efbb978"
      turnToFace: true
    }
    interactionIcon: InteractionIcon_Conversation
    interaction_info_text: ""
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Homeless/HumanFemaleHomelessJacketBundle"
    character_sheet_id: "RedSamurai_Lv1_Mage"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_Mage"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
        magic: VulnerabilityLevel_Less
        poison: VulnerabilityLevel_Immune
        mental: VulnerabilityLevel_Immune
      }
    }
    equipment {
      prefab_name: "Spell Toxic Bolt 3"
    }
    equipment {
      prefab_name: "Spell Slow 2"
    }
    equipment {
      prefab_name: "Spell Nerve Bolt 1"
    }
    equipment {
      prefab_name: "Bound Toxic Spirit 5"
    }
    equipment {
      prefab_name: "Bound Abomination Spirit 5"
    }
    team_id: "Civilians"
    char_name: "Rime"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    cyberware_left_arm: "(Arm) JoltAlert"
    portrait {
      filename: "backer_elffemale_joshualawford_wren_greenish"
    }
    karma: 107
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 6
    y: 0
    z: 12
  }
  orientation: ORIENTATION_S
  displayName: "Spirit"
  idRef {
    id: "59cc75fc3565649c3d00567c"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Spirit/SpiritToxicOld"
    character_sheet_id: "UncontrolledSpirit_Lv1_Air"
    equipment_sheet_id: "Spirit Toxic F1 Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_Mage"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Free Toxic Spirit"
    GeneralTags: "Temple_Spirits"
    GeneralTags: "magic_user"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "Generic_Spirit_Air"
    }
    karma: 70
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
variables {
  float_value: 0.5
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Float_FlickerDelayMin"
    typeName: "float"
  }
}
variables {
  float_value: 10
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Float_FlickerDelayMax"
    typeName: "float"
  }
}
mapEvents: "Event_Flicker"
mapEvents: "Event_DoggoFaces"
mapEvents: "Event_Wait"
senseTags: "isValiri"
senseTags: "isDesorn"
senseTags: "isKora"
worldMapLocation {
  filename: ""
  location {
    x: 0
    y: 0
  }
}
mapName: "test"
parentStory: ""
scene_title: "New Scene"
scene_subtitle: ""
scene_synopsis: ""
scene_image: ""
scene_continue_button_skip: false
scene_restore_runner_health: false
directional_light_dir {
  x: -0.5
  y: -1
  z: -0.75
}
directional_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
ambient_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
allow_drawn_weapons: false
team_affiliations {
  team_name: "Shadowrunners"
  affiliation: 0
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Gangers"
  affiliation: 1
  affiliation: 0
  affiliation: 1
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "LoneStar"
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Civilians"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Dorbi"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Barrel"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
scene_dimensions {
  dimension_name: "Default"
}
character_roster {
}
show_hiring_screen_on_scene_load: false
scene_hiring_prerequisites {
  prereq_description: ""
  prereq_conditions {
  }
}
hiring_slot_count: 0
hiring_minimum_karma: 0
hiring_maximum_karma: 0
roster_overrides {
}
use_hiring_cost_warning: false
hiring_average_cost: 99999
override_hiring_average_cost: true
show_equip_screen_on_scene_load: false
is_persistant: false
is_persistant_has_value: false
can_move_outside_camera_regions: false
can_start_before_triggers: false
can_use_team_advancement: false
