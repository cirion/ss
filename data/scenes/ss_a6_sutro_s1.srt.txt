triggers {
  name: "MapSetup"
  events {
    ops {
      functionName: "On Map Setup"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Environmental Effect Amount"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "EnvironmentalEffects"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "RainIntensityPercent"
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isInitiallyInvisible"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "593781463565641040000267"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "MapStart"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
  }
  isActive: true
  idRef {
    id: "5937814f3565641040000268"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "DebugSetup"
  events {
    ops {
      functionName: "On Map Setup"
    }
  }
  conditions {
  }
  actions {
  }
  isActive: true
  idRef {
    id: "593781543565641040000269"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Outside_RainStart"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5956f8c9356564907e002593"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Environmental Effect Amount"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "EnvironmentalEffects"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "RainIntensityPercent"
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "55bd43d6306364d418008654"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5938c34835656410400002f4"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Inside_RainStop"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5956f8f3356564907e002595"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Environmental Effect Amount"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "EnvironmentalEffects"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "55bd43c6306364d418008653"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5938c39235656410400002f5"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Outside_TripwireDisturbCrows"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5956f364356564907e00257e"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play FX at Point"
      args {
        string_value: "EnvironmentCrowFlyAway"
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "59571cdd356564907e0025a5"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Delete Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59571cdd356564907e0025a5"
          }
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:ambient_graveyard"
          }
          args {
            string_value: "Raven"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5938cbd5356564c05a003c09"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Outside_WarpToInsideFade"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "59571d1b356564907e0025a7"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:props"
          }
          args {
            string_value: "LadderClimb"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Fade Camera Out"
      args {
        float_value: 0.75
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5938d12a356564c05a003c0e"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5938d0bd356564c05a003c0d"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Outside_WarpToInsideDo"
  events {
    ops {
      functionName: "On Camera Fade Out"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Random Point Within Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "59571e04356564907e0025aa"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Fade Camera In"
      args {
        float_value: 0.5
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: false
  idRef {
    id: "5938d12a356564c05a003c0e"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Inside_WarpToOutsideFade"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "59571d64356564907e0025a8"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:props"
          }
          args {
            string_value: "LadderClimb"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Fade Camera Out"
      args {
        float_value: 0.75
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "59571e2f356564907e0025ac"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59571e2f356564907e0025ab"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Inside_WarpToOutsideDo"
  events {
    ops {
      functionName: "On Camera Fade Out"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Random Point Within Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "59571e50356564907e0025ad"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Fade Camera In"
      args {
        float_value: 0.5
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: false
  idRef {
    id: "59571e2f356564907e0025ac"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Inside_TripwireEmbersStart"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59571f69356564907e0025b1"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Environmental Effect Amount"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "EnvironmentalEffects"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        int_value: 400
      }
    }
  }
  isActive: true
  idRef {
    id: "59571fa5356564907e0025b2"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Outside_LightningPreFlash"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_LightningPreFlash"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Directional Light Color"
      args {
        float_value: 1
      }
      args {
        float_value: 1
      }
      args {
        float_value: 1
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
      args {
        float_value: -1
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0.05
      }
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "5956f8c9356564907e002593"
          }
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:ambient_VicHarbor"
          }
          args {
            string_value: "thunder1"
          }
        }
      }
      args {
        float_value: 5
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_LightningFlash"
          }
        }
      }
      args {
        float_value: 0.1
      }
    }
  }
  isActive: false
  idRef {
    id: "54cabe6c306364848c001b9a"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Outside_LightningFlash"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_LightningFlash"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Directional Light Color"
      args {
        float_value: 1
      }
      args {
        float_value: 1
      }
      args {
        float_value: 1
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
      args {
        float_value: -1
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0.1
      }
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "5956f8c9356564907e002593"
          }
        }
      }
    }
    ops {
      functionName: "Set Ambient Light Color"
      args {
        float_value: 255
      }
      args {
        float_value: 255
      }
      args {
        float_value: 255
      }
      args {
        float_value: 255
      }
      args {
        float_value: 0.1
      }
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "5956f8c9356564907e002593"
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_LightningFade"
          }
        }
      }
      args {
        float_value: 0.5
      }
    }
  }
  isActive: false
  idRef {
    id: "54cabe97306364848c001b9b"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Outside_LightningFade"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_LightningFade"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Directional Light Color"
      args {
        float_value: 52
      }
      args {
        float_value: 24
      }
      args {
        float_value: 11
      }
      args {
        float_value: 255
      }
      args {
        float_value: -0.5
      }
      args {
        float_value: -1
      }
      args {
        float_value: -0.75
      }
      args {
        float_value: 0.5
      }
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "5956f8c9356564907e002593"
          }
        }
      }
    }
    ops {
      functionName: "Set Ambient Light Color"
      args {
        float_value: 104
      }
      args {
        float_value: 46
      }
      args {
        float_value: 22
      }
      args {
        float_value: 255
      }
      args {
        float_value: 0.25
      }
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "5956f8c9356564907e002593"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "global_ThunderTime"
          }
        }
      }
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 10
          }
          args {
            int_value: 60
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_LightningPreFlash"
          }
        }
      }
      args {
        call_value {
          functionName: "Convert (int) to (float)"
          args {
            call_value {
              functionName: "Get Variable (int)"
              args {
                string_value: "global_ThunderTime"
              }
            }
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "54cabea3306364848c001b9c"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Outside_DisableThunder"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_DisableThunder"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "54cabea3306364848c001b9c"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "54cabe97306364848c001b9b"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "54cabe6c306364848c001b9a"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "global_ThunderTime"
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "55bd43c6306364d418008653"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Outside_EnableThunder"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_EnableThunder"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "54cabea3306364848c001b9c"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "54cabe97306364848c001b9b"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "54cabe6c306364848c001b9a"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "global_ThunderTime"
          }
        }
      }
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 15
          }
          args {
            int_value: 60
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_LightningPreFlash"
          }
        }
      }
      args {
        call_value {
          functionName: "Convert (int) to (float)"
          args {
            call_value {
              functionName: "Get Variable (int)"
              args {
                string_value: "global_ThunderTime"
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "55bd43d6306364d418008654"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Debug_LightPuzzle"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light3_State"
          }
        }
      }
      args {
        int_value: 5
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light2_State"
          }
        }
      }
      args {
        int_value: 4
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5938c34835656410400002f4"
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "59cfd5b63565644c3d006fc5"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Wait for Rounds"
      args {
        int_value: 1
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5938c39235656410400002f5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "59cfefca3565644c3d006fce"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Inside_LightSound1"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_InsideUpdateLights"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:summoning"
          }
          args {
            string_value: "Shaman_CommandSpirit"
          }
        }
      }
      args {
        float_value: 0.5
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59cfd61c3565644c3d006fc6"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Inside_TouchedLight3"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "59cfd4613565644c3d006fc0"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light3_State"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_LightState_Max"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light3_State"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_InsideUpdateLights"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59cfd4b83565644c3d006fc3"
  }
  elseActions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light3_State"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_InsideUpdateLights"
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "Inside_Light3_State0_Dark"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_InsideUpdateLights"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light3_State"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  actions {
    ops {
      functionName: "Light Transition"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59cfd5b63565644c3d006fc5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Color_Dark"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59cfd5833565644c3d006fc4"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Inside_Light3_State1_Red"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_InsideUpdateLights"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light3_State"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Light Transition"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59cfd5b63565644c3d006fc5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Color_Red"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59cfeed83565644c3d006fc7"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Inside_Light3_State2_Orange"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_InsideUpdateLights"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light3_State"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  actions {
    ops {
      functionName: "Light Transition"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59cfd5b63565644c3d006fc5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Color_Orange"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59cfeed93565644c3d006fc8"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Inside_Light3_State3_Yellow"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_InsideUpdateLights"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light3_State"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 3
      }
    }
  }
  actions {
    ops {
      functionName: "Light Transition"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59cfd5b63565644c3d006fc5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Color_Yellow"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59cfeedb3565644c3d006fc9"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Inside_Light3_State4_Green"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_InsideUpdateLights"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light3_State"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 4
      }
    }
  }
  actions {
    ops {
      functionName: "Light Transition"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59cfd5b63565644c3d006fc5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Color_Green"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59cfeedc3565644c3d006fca"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Inside_Light3_State5_Blue"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_InsideUpdateLights"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light3_State"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 5
      }
    }
  }
  actions {
    ops {
      functionName: "Light Transition"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59cfd5b63565644c3d006fc5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Color_Blue"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59cfeede3565644c3d006fcb"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Inside_Light3_State6_Violet"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_InsideUpdateLights"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light3_State"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 6
      }
    }
  }
  actions {
    ops {
      functionName: "Light Transition"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59cfd5b63565644c3d006fc5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Color_Violet"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59cfeee03565644c3d006fcc"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Inside_TouchedLight2"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "59d02f213565644c3d006fdf"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light2_State"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_LightState_Max"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light2_State"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_InsideUpdateLights"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59d032c53565644c3d006fef"
  }
  elseActions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light2_State"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_InsideUpdateLights"
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "Inside_Light2_State0_Dark"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_InsideUpdateLights"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light2_State"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  actions {
    ops {
      functionName: "Light Transition"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59d02f393565644c3d006fe4"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Color_Dark"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59d032c53565644c3d006ff0"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Inside_Light2_State1_Red"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_InsideUpdateLights"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light2_State"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Light Transition"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59d02f393565644c3d006fe4"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Color_Red"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59d032c53565644c3d006ff1"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Inside_Light2_State2_Orange"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_InsideUpdateLights"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light2_State"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  actions {
    ops {
      functionName: "Light Transition"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59d02f393565644c3d006fe4"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Color_Orange"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59d032c53565644c3d006ff2"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Inside_Light2_State3_Yellow"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_InsideUpdateLights"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light2_State"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 3
      }
    }
  }
  actions {
    ops {
      functionName: "Light Transition"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59d02f393565644c3d006fe4"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Color_Yellow"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59d032c53565644c3d006ff3"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Inside_Light2_State4_Green"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_InsideUpdateLights"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light2_State"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 4
      }
    }
  }
  actions {
    ops {
      functionName: "Light Transition"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59d02f393565644c3d006fe4"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Color_Green"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59d032c53565644c3d006ff4"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Inside_Light2_State5_Blue"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_InsideUpdateLights"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light2_State"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 5
      }
    }
  }
  actions {
    ops {
      functionName: "Light Transition"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59d02f393565644c3d006fe4"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Color_Blue"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59d032c53565644c3d006ff5"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Inside_Light2_State6_Violet"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_InsideUpdateLights"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light2_State"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 6
      }
    }
  }
  actions {
    ops {
      functionName: "Light Transition"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59d02f393565644c3d006fe4"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Color_Violet"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59d032c53565644c3d006ff6"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Inside_TouchedLigh5"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "59d02ec73565644c3d006fda"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light5_State"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_LightState_Max"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light5_State"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_InsideUpdateLights"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59d034cf3565644c3d006ff8"
  }
  elseActions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light5_State"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_InsideUpdateLights"
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "Inside_Light5_State0_Dark"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_InsideUpdateLights"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light5_State"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  actions {
    ops {
      functionName: "Light Transition"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59d02ec03565644c3d006fd5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Color_Dark"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59d034cf3565644c3d006ff9"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Inside_Light5_State1_Red"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_InsideUpdateLights"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light5_State"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Light Transition"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59d02ec03565644c3d006fd5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Color_Red"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59d034cf3565644c3d006ffa"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Inside_Light5_State2_Orange"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_InsideUpdateLights"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light5_State"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  actions {
    ops {
      functionName: "Light Transition"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59d02ec03565644c3d006fd5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Color_Orange"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59d034cf3565644c3d006ffb"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Inside_Light5_State3_Yellow"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_InsideUpdateLights"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light5_State"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 3
      }
    }
  }
  actions {
    ops {
      functionName: "Light Transition"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59d02ec03565644c3d006fd5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Color_Yellow"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59d034cf3565644c3d006ffc"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Inside_Light5_State4_Green"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_InsideUpdateLights"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light5_State"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 4
      }
    }
  }
  actions {
    ops {
      functionName: "Light Transition"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59d02ec03565644c3d006fd5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Color_Green"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59d034cf3565644c3d006ffd"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Inside_Light5_State5_Blue"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_InsideUpdateLights"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light5_State"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 5
      }
    }
  }
  actions {
    ops {
      functionName: "Light Transition"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59d02ec03565644c3d006fd5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Color_Blue"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59d034cf3565644c3d006ffe"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Inside_Light5_State6_Violet"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_InsideUpdateLights"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light5_State"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 6
      }
    }
  }
  actions {
    ops {
      functionName: "Light Transition"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59d02ec03565644c3d006fd5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Color_Violet"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59d034cf3565644c3d006fff"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Inside_Lights_PuzzleSolved"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Event_InsideUpdateLights"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light2_State"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 4
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light3_State"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 5
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Inside_Light5_State"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Inside_SolvedPuzzle"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
      args {
        float_value: 2
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_Wait"
          }
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:props"
          }
          args {
            string_value: "qysummon"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Play FX at Point"
      args {
        string_value: "HongKong:EnvironmentLoopMagicalTrap"
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "59d0350e3565644c3d007001"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Delete Props by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isPuzzleBarrier"
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
    }
    ops {
      functionName: "Light Transition"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59d02f3e3565644c3d006fe5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Color_Violet"
          }
        }
      }
    }
    ops {
      functionName: "Light Transition"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59d02f393565644c3d006fe4"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Color_Violet"
          }
        }
      }
    }
    ops {
      functionName: "Light Transition"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59cfd5b63565644c3d006fc5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Color_Violet"
          }
        }
      }
    }
    ops {
      functionName: "Light Transition"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59d02ebc3565644c3d006fd1"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Color_Violet"
          }
        }
      }
    }
    ops {
      functionName: "Light Transition"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59d02ec03565644c3d006fd5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Color_Violet"
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_RemoveTrapFX"
          }
        }
      }
      args {
        float_value: 10
      }
    }
    ops {
      functionName: "Trigger: Wait for Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_RemoveTrapFX"
          }
        }
      }
    }
    ops {
      functionName: "Remove FX at Point"
      args {
        string_value: "HongKong:EnvironmentLoopMagicalTrap"
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "59d0350e3565644c3d007001"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Play FX at Point"
      args {
        string_value: "HongKong:EnvironmentReactorFireBurst"
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "59d0350e3565644c3d007001"
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59d035b93565644c3d007006"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Outside_SwapPuzzleProps"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5956f8c9356564907e002593"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Inside_SolvedPuzzle"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Delete Props by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isPuzzleProp"
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isPostPuzzleCave"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59d03a603565644c3d007009"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Inside_StartCandleQuest"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "59d04bc43565644c3d007019"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Light the Candle"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59d04bc73565644c3d00701a"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Inside_LightCandle"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "59d04c233565644c3d00701c"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Triggering Prop (Interactable)"
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Light the Candle"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Display Text over Prop"
      args {
        call_value {
          functionName: "Triggering Prop"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "The light passes. A tingle runs down your spine as a draft of cold air washes over you."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 5
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "ss_a6_sutro_s1-Candle"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isPoint1Closed"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isCandleProp"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Light Transition"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59d04c233565644c3d00701c"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Color_Candle"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "59d04d4b3565644c3d007022"
          }
        }
      }
    }
    ops {
      functionName: "Delete Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59cfd4423565644c3d006fbd"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59d04c4a3565644c3d00701f"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Inside_TripwirePoint1CrewReactions"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59d04d293565644c3d007021"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isIsas"
              }
            }
          }
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Um."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isArelia"
              }
            }
          }
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "That\342\200\231s weird\342\200\246"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "59d051f43565644c3d007024"
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "59d04d4b3565644c3d007022"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Inside_TripwireOpenPoint0"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59d051d93565644c3d007023"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isPoint0Closed"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isPoint0Open"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "59d052b33565644c3d007027"
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "59d051f43565644c3d007024"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Inside_TripwirePoint0CrewReactions"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59d04d293565644c3d007021"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isKora"
              }
            }
          }
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "\342\200\246"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isMasato"
              }
            }
          }
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "I\342\200\231m not imagining it, right? There was a wall here before?"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
    }
  }
  isActive: false
  idRef {
    id: "59d052b33565644c3d007027"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Inside_TripwireClosePoint0"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59d0525f3565644c3d007025"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isPoint0Closed"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isPoint0Open"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "59d053b13565644c3d00702c"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59d053233565644c3d007028"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Inside_TripwireOpenPoint4"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59d0536f3565644c3d00702b"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isPoint4Closed"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "59d0536b3565644c3d00702a"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Inside_TripwirePrepPoint4"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59d053453565644c3d007029"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "59d0536b3565644c3d00702a"
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "59d053b13565644c3d00702c"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Debug_Walls"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "59d035b93565644c3d007006"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "59d04aaf3565644c3d007014"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "59d04acb3565644c3d007015"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "59d04adc3565644c3d007016"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "59571d1b356564907e0025a7"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "ss_a6_sutro_s1-Candle"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59d053e63565644c3d00702d"
  }
  elseActions {
  }
  is_oneshot: true
}
regions {
  name: "New Region"
  position {
    x: -42
    y: -6
    width: 35
    height: 18
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: true
  idRef {
    id: "59547481356564907e0023aa"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: "SpeedyWaterFill"
}
regions {
  name: "New Region"
  position {
    x: -88
    y: 6
    width: 7
    height: 7
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: true
  idRef {
    id: "5956f16b356564907e002549"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: "DefaultWaterFill"
}
regions {
  name: "Outside_TripwireCrows"
  position {
    x: -39
    y: 17
    width: 5
    height: 5
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "5956f364356564907e00257e"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Camera_Outside"
  position {
    x: -40
    y: 2
    width: 33
    height: 40
  }
  enabledAtStart: true
  is_camera_region: true
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "5956f8c9356564907e002593"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.20392157
    g: 0.094117649
    b: 0.043137256
    a: 1
  }
  ambient_light_color {
    r: 0.40784314
    g: 0.18039216
    b: 0.086274512
    a: 1
  }
  ambience_template: "whistleblower"
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Camera_Inside"
  position {
    x: -127
    y: 1
    width: 52
    height: 42
  }
  enabledAtStart: true
  is_camera_region: true
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "5956f8f3356564907e002595"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -1
    y: -1
    z: -1
  }
  directional_light_color {
    r: 0.83529413
    g: 0.67450982
    b: 0.58431375
    a: 1
  }
  ambient_light_color {
    r: 0.72941178
    g: 0.44313726
    b: 0.27843139
    a: 1
  }
  ambience_template: "mummyrealm"
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Inside_Entry"
  position {
    x: -80
    y: 13
    width: 3
    height: 3
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "59571e04356564907e0025aa"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Outside_Exit"
  position {
    x: -39
    y: 24
    width: 3
    height: 3
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "59571e50356564907e0025ad"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Inside_StartEmbers"
  position {
    x: -109
    y: 16
    width: 9
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "59571f69356564907e0025b1"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "New Region"
  position {
    x: -143
    y: 16
    width: 16
    height: 27
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: true
  idRef {
    id: "59572c34356564907e00260c"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: "DefaultWaterFill"
}
regions {
  name: "New Region"
  position {
    x: -143
    y: -4
    width: 74
    height: 53
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: true
  idRef {
    id: "59572c54356564907e00260d"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: "AstralFogFill"
}
regions {
  name: "Inside_TripwirePoint1Reactions"
  position {
    x: -91
    y: 22
    width: 6
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "59d04d293565644c3d007021"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Inside_TripwireOpenPoint0"
  position {
    x: -86
    y: 37
    width: 1
    height: 7
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "59d051d93565644c3d007023"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Inside_TripwireClosePoint0"
  position {
    x: -109
    y: 7
    width: 10
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "59d0525f3565644c3d007025"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Inside_TripwirePoint0Reactions"
  position {
    x: -88
    y: 21
    width: 1
    height: 7
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "59d052823565644c3d007026"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Inside_TripwirePrepOpen4"
  position {
    x: -98
    y: 19
    width: 1
    height: 4
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "59d053453565644c3d007029"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Inside_TripwireOpen4"
  position {
    x: -113
    y: 4
    width: 15
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "59d0536f3565644c3d00702b"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: -11
    y: 0
    z: 8
  }
  orientation: ORIENTATION_N
  displayName: "PC0"
  idRef {
    id: "59550ac2356564907e002462"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "PC0"
    enabled_at_start: true
    pc_spawn_number: 0
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -13
    y: 0
    z: 9
  }
  orientation: ORIENTATION_S
  displayName: "Debug_Masato"
  idRef {
    id: "59d04aaf3565644c3d007014"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Story/HumanMaleRhombus"
    character_sheet_id: "crew_masato_lv1"
    equipment_sheet_id: "crew_masato_lv1"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Player"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Shadowrunners"
    char_name: "Masato"
    GeneralTags: "isCrew"
    GeneralTags: "isMasato"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    portrait {
      filename: "pc_humanmale_01hk_shaman"
    }
    description_bio: "Renegade rigger."
    portrait_code_override: "s4h11c3b0c0t0"
    karma: 75
    hiring_cost_override: 0
    hiring_tag: "Crew: Rigger"
    is_prop_character: false
    id: "crew_lv1_masato"
    cyberware_head: "(Head) Datajack"
    cyberware_weapon: "Weapon 2 Monofilament Whip"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -13
    y: 0
    z: 10
  }
  orientation: ORIENTATION_S
  displayName: "Debug_Arelia"
  idRef {
    id: "59d04acb3565644c3d007015"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/TrollFemale"
    character_sheet_id: "crew_arelia_lv1"
    equipment_sheet_id: "crew_arelia_lv1"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Player"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Shadowrunners"
    char_name: "Arelia"
    GeneralTags: "isCrew"
    GeneralTags: "isArelia"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    portrait {
      filename: "pc_trollfemale_09_blue"
    }
    description_bio: "A troll mage with hard skin and a soft heart. "
    portrait_code_override: "s10h8c8b0c0t10"
    karma: 77
    hiring_cost_override: 0
    hiring_tag: "Crew: Mage"
    id: "crew_lv1_arelia"
    crew_id: ""
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -14
    y: 0
    z: 9
  }
  orientation: ORIENTATION_S
  displayName: "Debug_Kora"
  idRef {
    id: "59d04adc3565644c3d007016"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/DwarfFemale"
    character_sheet_id: "crew_kora_lv1"
    equipment_sheet_id: "crew_kora_lv1"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Player"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Shadowrunners"
    char_name: "Kora"
    GeneralTags: "isKora"
    GeneralTags: "isCrew"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    cyberware_left_leg: "(Leg) Basic Cyberleg"
    cyberware_right_leg: "(Leg) Basic Cyberleg"
    portrait {
      filename: "pc_dwarffemale_05c_sexy"
    }
    description_bio: "The heart and CPU of the People\'s University."
    portrait_code_override: "s4h11c3b0c0t0"
    karma: 75
    hiring_cost_override: 0
    hiring_tag: "Crew: Decker"
    id: "crew_lv1_kora"
    cyberware_head: "(Head) Datajack"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -14
    y: 0
    z: 10
  }
  orientation: ORIENTATION_S
  displayName: "Debug_Isas"
  idRef {
    id: "59d04af23565644c3d007017"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/OrkMale"
    character_sheet_id: "crew_isas_lv1"
    equipment_sheet_id: "crew_isas_lv1"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Player"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Shadowrunners"
    char_name: "Isas"
    GeneralTags: "isIsas"
    GeneralTags: "isCrew"
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    portrait {
      filename: "pc_orkmale_excl_oni"
    }
    portrait_code_override: "s10h16c1b0c0t0"
    karma: 71
    hiring_cost_override: 0
    hiring_tag: "Crew: Street Samurai"
    id: "crew_lv1_isas"
  }
}
variables {
  int_value: 1000
  variableref_value {
    scope: TsVariableScope_Scene
    name: "RainIntensityPercent"
    typeName: "int"
  }
}
variables {
  float_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "global_ThunderTime"
    typeName: "float"
  }
}
variables {
  string_value: "3:ffff00"
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Color_Yellow"
    typeName: "string"
  }
}
variables {
  string_value: "3:00ff00"
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Color_Green"
    typeName: "string"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Inside_SolvedPuzzle"
    typeName: "bool"
  }
}
variables {
  int_value: 6
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Inside_LightState_Max"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Inside_Light2_State"
    typeName: "int"
  }
}
variables {
  string_value: "3:000000"
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Color_Dark"
    typeName: "string"
  }
}
variables {
  string_value: "3:ff0000"
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Color_Red"
    typeName: "string"
  }
}
variables {
  string_value: "3:ff6600"
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Color_Orange"
    typeName: "string"
  }
}
variables {
  string_value: "3:9900fa"
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Color_Violet"
    typeName: "string"
  }
}
variables {
  string_value: "3:0000ff"
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Color_Blue"
    typeName: "string"
  }
}
variables {
  string_value: "3:ffffff"
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Color_White"
    typeName: "string"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Inside_Light3_State"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Inside_Light5_State"
    typeName: "int"
  }
}
variables {
  string_value: "3:DD8D4B"
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Color_Candle"
    typeName: "string"
  }
}
mapEvents: "Event_DisableThunder"
mapEvents: "Event_EnableThunder"
mapEvents: "Event_LightningPreFlash"
mapEvents: "Event_LightningFlash"
mapEvents: "Event_LightningFade"
mapEvents: "Event_InsideUpdateLights"
mapEvents: "Event_Wait"
mapEvents: "Event_RemoveTrapFX"
senseTags: "isArelia"
senseTags: "isIsas"
senseTags: "isKora"
senseTags: "isMasato"
goals {
  name: "Light the Candle"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
worldMapLocation {
  filename: ""
  location {
    x: 0
    y: 0
  }
}
mapName: "ss_a6_sutro_s1"
parentStory: ""
scene_title: "New Scene"
scene_subtitle: ""
scene_synopsis: ""
scene_image: ""
scene_continue_button_skip: false
scene_restore_runner_health: false
directional_light_dir {
  x: -0.5
  y: -1
  z: -0.75
}
directional_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
ambient_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
allow_drawn_weapons: false
team_affiliations {
  team_name: "Shadowrunners"
  affiliation: 0
  affiliation: 1
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "Gangers"
  affiliation: 1
  affiliation: 0
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "LoneStar"
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Civilians"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
scene_dimensions {
  dimension_name: "Default"
}
character_roster {
}
show_hiring_screen_on_scene_load: false
scene_hiring_prerequisites {
  prereq_description: ""
  prereq_conditions {
  }
}
hiring_slot_count: 0
hiring_minimum_karma: 0
hiring_maximum_karma: 25
roster_overrides {
}
use_hiring_cost_warning: false
hiring_average_cost: 99999
override_hiring_average_cost: true
show_equip_screen_on_scene_load: false
is_persistant: false
is_persistant_has_value: false
can_move_outside_camera_regions: true
can_start_before_triggers: true
can_use_team_advancement: false
