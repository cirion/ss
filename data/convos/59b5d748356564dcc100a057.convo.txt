idRef {
  id: "59b5d748356564dcc100a057"
}
ui_name: "ss_a4_fuchi_s1-Upstairs_Brian"
nodes {
  idRef {
    id: "59b5d81e356564dcc100a065"
  }
  index: 0
  text: "{{GM}}His head whips around as you approach.{{/GM}}\n\nAha! Another employee, come crawling to beg me for some of my precious, precious paper?! Well, it can be yours - for a price! There is ALWAYS a price!"
  branches {
    nextNodeIndex: 1
    idRef {
      id: "59b5d748356564dcc100a057:59b5d81f356564dcc100a067"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5d81f356564dcc100a069"
  }
  index: 1
  text: "{{GM}}He rubs his hands together gleefully.{{/GM}}\n\nYour day has finally come, Brian Jenkins! Now YOU are the lord and master! All shall kneel before the God of Paper!"
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59b5d748356564dcc100a057:59b5d823356564dcc100a06d"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5d83d356564dcc100a072"
  }
  index: 2
  text: "The supplicant returns! Have you seen the light yet? Have you come to accept the primacy of paper?"
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59b5d748356564dcc100a057:59b5d860356564dcc100a082"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5d861356564dcc100a085"
  }
  index: 3
  text: ""
  branches {
    responseText: "What\342\200\231s all this about paper?"
    nextNodeIndex: 4
    onlyOnce: true
    idRef {
      id: "59b5d748356564dcc100a057:59b5d875356564dcc100a08a"
    }
  }
  branches {
    responseText: "Who are these people with you?"
    nextNodeIndex: 13
    onlyOnce: true
    idRef {
      id: "59b5d748356564dcc100a057:59b5d953356564dcc100a146"
    }
  }
  branches {
    responseText: "Why are you supporting Novatech?"
    nextNodeIndex: 18
    onlyOnce: true
    idRef {
      id: "59b5d748356564dcc100a057:59b5da6b356564dcc100a25b"
    }
  }
  branches {
    responseText: "Why should I help you?"
    nextNodeIndex: 24
    onlyOnce: true
    idRef {
      id: "59b5d748356564dcc100a057:59b5db6f356564dcc100a367"
    }
  }
  branches {
    responseText: "Can I do something to help you?"
    nextNodeIndex: 32
    onlyOnce: true
    idRef {
      id: "59b5d748356564dcc100a057:59b5f80d3565648cb300316d"
    }
  }
  branches {
    responseText: "I\'m interested in your filing system..."
    conditions {
      ops {
        functionName: "Evaluate Goal"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "Learn the File Sorting System"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 35
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "59b5d748356564dcc100a057:59b8a6003565640830002fe5"
    }
  }
  branches {
    responseText: "{{CC}}Item: Brian\'s Food{{/CC}} I found that stuff you wanted."
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "ss_a4_fuchi_s1-BrainFood"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Item from Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "ss_a4_fuchi_s1-BrainFood"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 40
    hideIfUnavailable: true
    idRef {
      id: "59b5d748356564dcc100a057:59b8a7eb3565640830003192"
    }
  }
  branches {
    responseText: "Please give me your half of the key to access the root trust certificate."
    conditions {
      ops {
        functionName: "Evaluate Goal"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "Obtain Brian\'s Key"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 44
    hideIfUnavailable: true
    idRef {
      id: "59b5d748356564dcc100a057:59b5f84e3565648cb30032ac"
    }
  }
  branches {
    responseText: "{{CC}}Item: Brian\'s Email{{/CC}} {{CC}}Item: Press Release{{/CC}} Do you have anything to say about these items?"
    conditions {
      ops {
        functionName: "Evaluate Goal"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "Obtain Brian\'s Key"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "Upstairs_IntimidatedBrian"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "ss_a4_fuchi_s1-AttackReport"
            }
          }
        }
      }
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "ss_a4_fuchi_s1-BrianEmail"
            }
          }
        }
      }
    }
    nextNodeIndex: 45
    hideIfUnavailable: true
    idRef {
      id: "59b5d748356564dcc100a057:59b6006f3565648cb3003ef3"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "{{CC}}Item: Sira\342\200\231s Key{{/CC}} Here\342\200\231s Sira\342\200\231s half of the key."
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "ss_a4_fuchi_s1-SiraKey"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Item from Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "ss_a4_fuchi_s1-SiraKey"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 65
    hideIfUnavailable: true
    idRef {
      id: "59b5d748356564dcc100a057:59b5fcbd3565648cb3003a00"
    }
  }
  branches {
    responseText: "I\'ve altered the root trust certificate."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "58a09a016666641898001ad5"
            }
            args {
              string_value: "a4_Fuchi_s1-GaveNovatechCert"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 65
    hideIfUnavailable: true
    idRef {
      id: "59b5d748356564dcc100a057:59b600383565648cb3003ecb"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "That does it! I\'m taking your key by force! {{GM}}Attack.{{/GM}}"
    conditions {
      ops {
        functionName: "Evaluate Goal"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "Obtain Brian\'s Key"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Enable/Disable Trigger"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Trigger)"
            args {
              string_value: "59b54afe3565647422002f39"
            }
          }
        }
      }
      ops {
        functionName: "Enable/Disable Trigger"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Trigger)"
            args {
              string_value: "59b8b5543565640830004440"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
    idRef {
      id: "59b5d748356564dcc100a057:59b8ab0335656408300036a0"
    }
  }
  branches {
    responseText: "Goodbye."
    nextNodeIndex: -1
    idRef {
      id: "59b5d748356564dcc100a057:59b6011a3565648cb3004008"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Root"
}
nodes {
  idRef {
    id: "59b5d878356564dcc100a08d"
  }
  index: 4
  text: "For years I\342\200\231ve INSISTED on keeping hard copy backups of everything. Every table cell in every spreadsheet, every field in each database, every automated meeting reminder."
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isKora"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "594703903565641042006055"
            }
          }
        }
      }
    }
    nextNodeIndex: 5
    idRef {
      id: "59b5d748356564dcc100a057:59b5d880356564dcc100a08f"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 6
    idRef {
      id: "59b5d748356564dcc100a057:59b5d881356564dcc100a091"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5d890356564dcc100a094"
  }
  index: 5
  text: "Holy crap."
  branches {
    responseText: ""
    nextNodeIndex: 6
    idRef {
      id: "59b5d748356564dcc100a057:59b5d893356564dcc100a096"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isKora"
}
nodes {
  idRef {
    id: "59b5d895356564dcc100a099"
  }
  index: 6
  text: "People HATED me! They said that I was stuck in the past, an embarrassment to Fuchi\342\200\231s futuristic image, that I caused unnecessary overhead."
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isMasato"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "594703903565641042006055"
            }
          }
        }
      }
    }
    nextNodeIndex: 7
    idRef {
      id: "59b5d748356564dcc100a057:59b5d8af356564dcc100a0b3"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 8
    idRef {
      id: "59b5d748356564dcc100a057:59b5d8b3356564dcc100a0bf"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5d8af356564dcc100a0b5"
  }
  index: 7
  text: "You sound very popular and fun to be around."
  branches {
    responseText: ""
    nextNodeIndex: 8
    idRef {
      id: "59b5d748356564dcc100a057:59b5d8af356564dcc100a0b7"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isMasato"
}
nodes {
  idRef {
    id: "59b5d8b8356564dcc100a0c2"
  }
  index: 8
  text: "Well, who\342\200\231s laughing now?! With the electricity out, with the bytes dead and frozen in the wires, we are now in my land. The land of paper! Everyone who wants any information will come begging to me.\n\n{{GM}}He clutches sheafs of dot-matrix printouts to his heart, protectively.{{/GM}}\n\nMine! All mine."
  branches {
    responseText: "If you say so."
    nextNodeIndex: 9
    idRef {
      id: "59b5d748356564dcc100a057:59b5d8e7356564dcc100a0c7"
    }
  }
  branches {
    responseText: "What happens when the power comes back on?"
    nextNodeIndex: 10
    idRef {
      id: "59b5d748356564dcc100a057:59b5d8f4356564dcc100a0f3"
    }
  }
  branches {
    responseText: "Believe me, nobody wants to steal your paper."
    nextNodeIndex: 12
    idRef {
      id: "59b5d748356564dcc100a057:59b5d8f6356564dcc100a0ff"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5d8ea356564dcc100a0ca"
  }
  index: 9
  text: "{{GM}}He nods, satisfied.{{/GM}}\n\nAnd so my dominion expands, one convert at a time."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59b5d748356564dcc100a057:59b5d8ec356564dcc100a0cc"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5d8f4356564dcc100a0f5"
  }
  index: 10
  text: "{{GM}}His eyes widen. It seems that he had not considered this possibility.{{/GM}}\n\nBut\342\200\246 it can\342\200\231t! It\342\200\231s finally my hour!"
  branches {
    responseText: ""
    nextNodeIndex: 11
    idRef {
      id: "59b5d748356564dcc100a057:59b5d8f4356564dcc100a0f7"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5d91f356564dcc100a107"
  }
  index: 11
  text: "Well.. now that everyone has seen the chaos that results in a power outage, surely they will be persuaded to my line of thinking.\n\nYeah\342\200\246 that\342\200\231s it! They definitely won\342\200\231t install another redundant power backup system, they\342\200\231ll order everyone to use carbon paper for everything. It\342\200\231s the only logical solution!"
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59b5d748356564dcc100a057:59b5d91f356564dcc100a109"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5d8f6356564dcc100a101"
  }
  index: 12
  text: "{{GM}}He looks at you through slitted eyes.{{/GM}}\n\nThat\342\200\231s EXACTLY what a paper-thief would say. I\'m watching you."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59b5d748356564dcc100a057:59b5d8f6356564dcc100a103"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5d963356564dcc100a173"
  }
  index: 13
  text: "Oh, these are my pals from Novatech. Say \342\200\234Hi,\342\200\235 friends!"
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isArelia"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "594703903565641042006055"
            }
          }
        }
      }
    }
    nextNodeIndex: 14
    idRef {
      id: "59b5d748356564dcc100a057:59b5d965356564dcc100a175"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 15
    idRef {
      id: "59b5d748356564dcc100a057:59b5d9f2356564dcc100a17d"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5d966356564dcc100a177"
  }
  index: 14
  text: "{{GM}}She waves shyly.{{/GM}}\n\nHello!"
  branches {
    responseText: ""
    nextNodeIndex: 15
    idRef {
      id: "59b5d748356564dcc100a057:59b5d966356564dcc100a179"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isArelia"
}
nodes {
  idRef {
    id: "59b5d9f4356564dcc100a180"
  }
  index: 15
  text: "{{GM}}They simply stare at you. Nobody says \342\200\234Hi.\342\200\235{{/GM}}"
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isIsas"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "594703903565641042006055"
            }
          }
        }
      }
    }
    nextNodeIndex: 16
    idRef {
      id: "59b5d748356564dcc100a057:59b5d9f7356564dcc100a182"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 17
    idRef {
      id: "59b5d748356564dcc100a057:59b5da39356564dcc100a1bf"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "59b543563565647422002f2a"
  }
}
nodes {
  idRef {
    id: "59b5da35356564dcc100a1bb"
  }
  index: 16
  text: "They much bravery must have, deep into the Protectorate to travel."
  branches {
    responseText: ""
    nextNodeIndex: 17
    idRef {
      id: "59b5d748356564dcc100a057:59b5da37356564dcc100a1bd"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isIsas"
}
nodes {
  idRef {
    id: "59b5da3b356564dcc100a1c2"
  }
  index: 17
  text: "My dear colleague Sira is trying to push through this disastrous Renraku merger. Richard sent along a couple of people to keep an eye on things and stop her from making a terrible mistake."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59b5d748356564dcc100a057:59b5da5a356564dcc100a1c7"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5da7b356564dcc100a25e"
  }
  index: 18
  text: "It isn\342\200\231t so much a matter of what *I* want, just recognizing what has happened. Novatech has bought out Fuchi\342\200\231s North American holdings. California is part of North America, or at least it was the last time I checked. Anyone who thinks we belong with Renraku is delusional."
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "59b5d748356564dcc100a057:59b5da7d356564dcc100a260"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5da90356564dcc100a263"
  }
  index: 19
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isMasato"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "594703903565641042006055"
            }
          }
        }
      }
    }
    nextNodeIndex: 20
    onlyOnce: true
    idRef {
      id: "59b5d748356564dcc100a057:59b5da93356564dcc100a265"
    }
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isIsas"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "594703903565641042006055"
            }
          }
        }
      }
    }
    nextNodeIndex: 21
    onlyOnce: true
    idRef {
      id: "59b5d748356564dcc100a057:59b5daba356564dcc100a279"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 22
    onlyOnce: true
    idRef {
      id: "59b5d748356564dcc100a057:59b5dabc356564dcc100a285"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Reactive companion loop"
}
nodes {
  idRef {
    id: "59b5daa0356564dcc100a26c"
  }
  index: 20
  text: "Every Japanese megacorp will tell you that the Pacific Rim belongs in their co-prosperity sphere. For what it\342\200\231s worth, though, I agree with your assessment."
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "59b5d748356564dcc100a057:59b5daa2356564dcc100a26e"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isMasato"
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5daba356564dcc100a27b"
  }
  index: 21
  text: "Saito these lands for Japan claims. Even if Japan these lands does not want. This much confusion causes."
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "59b5d748356564dcc100a057:59b5daba356564dcc100a27d"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isIsas"
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5dabc356564dcc100a287"
  }
  index: 22
  text: "It\342\200\231s also a smart play for Fuchi. We will BE Novatech California, and the head of our division will report directly to the CEO. That\342\200\231s a hugely exciting opportunity for us to chart new territory and act independently. Much better than subordinating ourselves, simply becoming a tiny cog in the existing Renraku machine."
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isMasato"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "594703903565641042006055"
            }
          }
        }
      }
    }
    nextNodeIndex: 23
    onlyOnce: true
    idRef {
      id: "59b5d748356564dcc100a057:59b5daf8356564dcc100a28d"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59b5d748356564dcc100a057:59b5db11356564dcc100a316"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5daf8356564dcc100a28f"
  }
  index: 23
  text: "And, of course, you will be the head of Novatech California. But surely that\342\200\231s just a coincidence, right? Heaven forbid you would actually be motivated by a desire for career advancement."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59b5d748356564dcc100a057:59b5daf8356564dcc100a291"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isMasato"
}
nodes {
  idRef {
    id: "59b5db7a356564dcc100a3b8"
  }
  index: 24
  text: "{{GM}}He hesitates.{{/GM}}\n\nWell\342\200\246 unlike Renraku, I\342\200\231m afraid I can\342\200\231t offer you much in the way of monetary compensation, at least not immediately. The bloc of Japanese megacorps has frozen all of Novatech\342\200\231s expansion efforts, including any credits they attempt to transfer."
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Compare Actor Race"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Race"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 25
    idRef {
      id: "59b5d748356564dcc100a057:59b5db7c356564dcc100a3ba"
    }
    comment: "PC0 is non-human"
  }
  branches {
    responseText: ""
    nextNodeIndex: 26
    idRef {
      id: "59b5d748356564dcc100a057:59b5db96356564dcc100a3c1"
    }
    comment: "PC0 is human"
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5db7f356564dcc100a3bd"
  }
  index: 25
  text: "But that by itself should be reason for you to help me. I mean, $(l.race_plural) like you aren\342\200\231t exactly welcomed with open arms in the California Protectorate. Unlike the San Francisco-based corps that are happy to promote Saito\342\200\231s human-centric ideology, Novatech is much more metahuman-friendly. We\342\200\231ll use our extraterritoriality to provide a safe haven, free from discriminatory cultural zones."
  branches {
    responseText: ""
    nextNodeIndex: 27
    idRef {
      id: "59b5d748356564dcc100a057:59b5db93356564dcc100a3bf"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5db96356564dcc100a3c3"
  }
  index: 26
  text: "But that by itself should be reason for you to help me. Even though you\342\200\231re a human, you obviously run with metas, and have seen that they aren\342\200\231t exactly welcomed with open arms in the California Protectorate.\n\nUnlike the San Francisco-based corps that are happy to promote Saito\342\200\231s human-centric ideology, Novatech is much more metahuman-friendly. We\342\200\231ll use our extraterritoriality to provide a safe haven, free from discriminatory cultural zones."
  branches {
    responseText: ""
    nextNodeIndex: 27
    idRef {
      id: "59b5d748356564dcc100a057:59b5db96356564dcc100a3c5"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5dbd2356564dcc100a3cb"
  }
  index: 27
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isArelia"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "594703903565641042006055"
            }
          }
        }
      }
    }
    nextNodeIndex: 28
    onlyOnce: true
    idRef {
      id: "59b5d748356564dcc100a057:59b5f78f3565648cb3002f6d"
    }
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isKora"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "594703903565641042006055"
            }
          }
        }
      }
    }
    nextNodeIndex: 29
    onlyOnce: true
    idRef {
      id: "59b5d748356564dcc100a057:59b5f7ba3565648cb3002fd8"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 30
    onlyOnce: true
    idRef {
      id: "59b5d748356564dcc100a057:59b5f7bc3565648cb3002fe4"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Reactive team loop"
}
nodes {
  idRef {
    id: "59b5f7913565648cb3002f70"
  }
  index: 28
  text: "That does sound nice. I don\342\200\231t think I\342\200\231ve ever heard of a corp around here that would hire a troll for something other than a security position."
  branches {
    responseText: ""
    nextNodeIndex: 27
    idRef {
      id: "59b5d748356564dcc100a057:59b5f7933565648cb3002f72"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isArelia"
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5f7ba3565648cb3002fda"
  }
  index: 29
  text: "All megacorps are inherently problematic, but Novatech has a much better reputation than most. Hopefully that actually reflects their true purposes, and not just their short tenure."
  branches {
    responseText: ""
    nextNodeIndex: 27
    idRef {
      id: "59b5d748356564dcc100a057:59b5f7ba3565648cb3002fdc"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isKora"
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5f7bc3565648cb3002fe6"
  }
  index: 30
  text: "But if you do want cold hard cash, we can probably scrounge some up for you. It just won\342\200\231t be in your pocket today. Once we\342\200\231re properly established in the Protectorate, we\342\200\231ll be able to provide favors for you."
  branches {
    responseText: ""
    nextNodeIndex: 31
    idRef {
      id: "59b5d748356564dcc100a057:59b5f7bc3565648cb3002fe8"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5f7df3565648cb3002fec"
  }
  index: 31
  text: "I mean, just think of how big a footprint Fuchi had. If you need someone to look the other way while you take a job, or slip you some useful intel\342\200\246 well, you\342\200\231ll probably be happy to have me as a contact."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59b5d748356564dcc100a057:59b5f7df3565648cb3002fee"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5f8193565648cb3003170"
  }
  index: 32
  text: "If you could possibly talk sense into Sira, it would mean the world to me! She\342\200\231s as difficult as fitting a legal pad into a three-hole binder.\n\n{{GM}}He chuckles at his\342\200\246 joke?{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 33
    idRef {
      id: "59b5d748356564dcc100a057:59b5f81b3565648cb3003172"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5f81b3565648cb3003174"
  }
  index: 33
  text: "Once I acquire her half of the access key, I\342\200\231ll be able to add Novatech\342\200\231s credentials to Fuchi California\342\200\231s root trust certificate. That will pave the way for them to start moving in their executives, personnel, materials, everything we need to finalize the acquisition."
  branches {
    responseText: ""
    nextNodeIndex: 34
    idRef {
      id: "59b5d748356564dcc100a057:59b5f81f3565648cb3003178"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5f81f3565648cb300317a"
  }
  index: 34
  text: "I\342\200\231d prefer that you get it from her peacefully, but I\342\200\231ll understand if she doesn\342\200\231t cooperate. This is a lot bigger than her, and one way or another, we need to resolve this impasse so the corporation can move on."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59b5d748356564dcc100a057:59b5f8213565648cb300317c"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "59b5f8803565648cb30033a6"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59b8a6243565640830002fe8"
  }
  index: 35
  text: "Of COURSE you are! It is the eighth marvel of the world! Renowned throughout all the lands for its brilliant structure, its subtle intricacies, the clarity of its truths!"
  branches {
    responseText: ""
    nextNodeIndex: 36
    idRef {
      id: "59b5d748356564dcc100a057:59b8a6533565640830002fea"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b8a6543565640830002fed"
  }
  index: 36
  text: "I would be pleased to explain its mysteries to a discerning acolyte such as yourself. First, you must know that... uh...\n\nThe thingies... go inside the... no, next to, the, um..."
  branches {
    responseText: ""
    nextNodeIndex: 37
    idRef {
      id: "59b5d748356564dcc100a057:59b8a67a3565640830002fef"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b8a67c3565640830002ff2"
  }
  index: 37
  text: "{{GM}}He passes a hand over his eyes and moans quietly.{{/GM}}\n\nI beg your pardon. I\'ve been stuck up here for over a day without anything to eat, and my mind is wandering."
  branches {
    responseText: ""
    nextNodeIndex: 38
    idRef {
      id: "59b5d748356564dcc100a057:59b8a6ad3565640830002ff4"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b8a6af3565640830002ff7"
  }
  index: 38
  text: "Say, can I beg another favor of you? Sira catered in a bunch of food for the office, but I just KNOW that she\'s using it as a lure to bring me downstairs so her Renraku associates can whack me. But you seem to be able to move about freely. It would mean the world to me if you could fetch me my Brian food.\n\nHeh... get it? Brian food? Like Brain food? For Brian?"
  branches {
    responseText: "Whatever."
    nextNodeIndex: 39
    idRef {
      id: "59b5d748356564dcc100a057:59b8a7053565640830002ff9"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "That\'s, uh... good..."
    nextNodeIndex: 39
    idRef {
      id: "59b5d748356564dcc100a057:59b8a7053565640830002ffb"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "A HA HA HA HA HA HA HA HA HA HA HA HA HA HA HA HA HA HA HA HA HA HA HA HA!"
    nextNodeIndex: 39
    idRef {
      id: "59b5d748356564dcc100a057:59b8a7053565640830002ffd"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b8a7223565640830003000"
  }
  index: 39
  text: "Anyways, if it isn\'t too picky, I\'m really hankering for some Marcona almonds (in the shell, of course!), olallieberries, and this great cheezy lunchable based off of my favorite cartoon character...\n\n{{GM}}He proceeds with a lengthy and increasingly bizarre description of the particular food items he wants. You didn\'t know that half of these existed.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59b5d748356564dcc100a057:59b8a7253565640830003002"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Fetch Food for Brian"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59b8a8103565640830003339"
  }
  index: 40
  text: "Without further ado, he tosses the whole collection into his mouth and chews blissfully. He looks like the world\'s happiest chipmunk."
  branches {
    responseText: ""
    nextNodeIndex: 41
    idRef {
      id: "59b5d748356564dcc100a057:59b8a86c356564083000333b"
    }
  }
  nodeType: ConversationNodeType_GM_Speaker_Voice
}
nodes {
  idRef {
    id: "59b8a86e356564083000333e"
  }
  index: 41
  text: "Vroom! That sure warmed up the brain farm.\n\nNow I can finally do justice to my unparalleled filing system. The key, you see, is the MIDDLE. You can\'t attack the problem from either end, you must cut to the heart of the matter, and from there branch out to..."
  branches {
    responseText: ""
    nextNodeIndex: 42
    idRef {
      id: "59b5d748356564dcc100a057:59b8a9be3565640830003340"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b8a9c13565640830003343"
  }
  index: 42
  text: "He continues in this vein for some time, growing increasingly animated as you grow increasingly horrified. It turns out that Brian\'s filing system revolves around alphabetizing its contents based on the subject\'s middle name, the single least important and least accessible element."
  branches {
    responseText: ""
    nextNodeIndex: 43
    idRef {
      id: "59b5d748356564dcc100a057:59b8a9c33565640830003345"
    }
  }
  nodeType: ConversationNodeType_GM_Speaker_Voice
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Learn the File Sorting System"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59b8aa233565640830003348"
  }
  index: 43
  text: "And that\'s the end of THAT chapter!\n\n{{GM}}He smiles smugly and tosses his tie over his shoulder.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59b5d748356564dcc100a057:59b8aa26356564083000334a"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5f91e3565648cb3003417"
  }
  index: 44
  text: "{{GM}}He makes a face.{{/GM}}\n\nWhat, so you can hand it over to Sira? I don\342\200\231t think so!"
  branches {
    responseText: "{{CC}}Item: Brian\'s Email{{/CC}} {{CC}}Item: Press Release{{/CC}} You should probably take a look at these."
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "ss_a4_fuchi_s1-AttackReport"
            }
          }
        }
      }
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "ss_a4_fuchi_s1-BrianEmail"
            }
          }
        }
      }
    }
    nextNodeIndex: 45
    hideIfUnavailable: true
    idRef {
      id: "59b5d748356564dcc100a057:59b5f9493565648cb30034a4"
    }
  }
  branches {
    responseText: "{{CC}}Etiquette: Shadowrunner{{/CC}} Sira will try and backstab you once you\342\200\231re distracted. Let me take care of the root certificate while you keep an eye on her."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 17
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 58
    idRef {
      id: "59b5d748356564dcc100a057:59b5fc063565648cb3003951"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "{{CC}}ESP Control: $(story.Global-Skillcheck_Easy){{/CC}} The root trust certificate must be guarded by some serious IC. You\342\200\231re more of a paper-meister. Let a digital jockey like me handle the electronics."
    conditions {
      ops {
        functionName: "Compare Actor Specialization"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSpecializations"
            }
            args {
              int_value: 6
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "58a09a016666641898001ad5"
            }
            args {
              string_value: "Global-Skillcheck_Easy"
            }
          }
        }
      }
    }
    nextNodeIndex: 58
    idRef {
      id: "59b5d748356564dcc100a057:59b5fc243565648cb3003953"
    }
  }
  branches {
    responseText: "Just let me hold it for a minute."
    nextNodeIndex: 62
    onlyOnce: true
    idRef {
      id: "59b5d748356564dcc100a057:59b5fcca3565648cb3003a02"
    }
  }
  branches {
    responseText: "You can trust me!"
    nextNodeIndex: 63
    onlyOnce: true
    idRef {
      id: "59b5d748356564dcc100a057:59b5fcd93565648cb3003b32"
    }
  }
  branches {
    responseText: "Never mind."
    nextNodeIndex: 64
    idRef {
      id: "59b5d748356564dcc100a057:59b5fcdb3565648cb3003b3e"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5fa553565648cb30035c1"
  }
  index: 45
  text: "You pass over the records. Taken together, the attack report proves that Shiawase was behind the assault on Fuchi, and the email proves that Brian was secretly collaborating with Shiawase."
  branches {
    responseText: ""
    nextNodeIndex: 46
    idRef {
      id: "59b5d748356564dcc100a057:59b5fa653565648cb30035c3"
    }
  }
  nodeType: ConversationNodeType_GM_Voice
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Upstairs_IntimidatedBrian"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5fa663565648cb30035c5"
  }
  index: 46
  text: "{{GM}}He blanches as he takes the data.{{/GM}}\n\nIs\342\200\246 is this what I think it is?"
  branches {
    responseText: ""
    nextNodeIndex: 47
    idRef {
      id: "59b5d748356564dcc100a057:59b5fa663565648cb30035c7"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5fa6b3565648cb30035cb"
  }
  index: 47
  text: "Something wrong, Brian?"
  branches {
    responseText: ""
    nextNodeIndex: 48
    idRef {
      id: "59b5d748356564dcc100a057:59b5fa6b3565648cb30035cd"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "59b543563565647422002f2a"
  }
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59b543563565647422002f2a"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59b4bfb4356564008b00b582"
              }
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5fa6d3565648cb30035cf"
  }
  index: 48
  text: "N\342\200\246 no! Nothing is wrong at all!\n\nOn a totally unrelated note, I would like to have a private conversation with my new friends here. If you could just give us a moment\342\200\246"
  branches {
    responseText: ""
    nextNodeIndex: 49
    idRef {
      id: "59b5d748356564dcc100a057:59b5fa6d3565648cb30035d1"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5fa6f3565648cb30035d3"
  }
  index: 49
  text: "{{GM}}He gestures you aside and hisses urgently.{{/GM}}\n\nOkay, fine! So I tried to sell out Fuchi to Shiawase. Big deal! Everyone has seen the writing on the wall for years now. Fuchi was going to implode, one way or another. Making a move before our parent company lost its AAA status would have been smart: maximizing our value and getting our choice of suitors."
  branches {
    responseText: "It still doesn\342\200\231t look good."
    nextNodeIndex: 50
    idRef {
      id: "59b5d748356564dcc100a057:59b5fa6f3565648cb30035d5"
    }
  }
  branches {
    responseText: "It would have kept this standoff from occurring."
    nextNodeIndex: 51
    idRef {
      id: "59b5d748356564dcc100a057:59b5fadb3565648cb3003656"
    }
  }
  branches {
    responseText: "And I\342\200\231m sure you told Novatech all about this failed takeover, right?"
    nextNodeIndex: 52
    idRef {
      id: "59b5d748356564dcc100a057:59b5fadd3565648cb300365f"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5fad73565648cb3003652"
  }
  index: 50
  text: "That\342\200\231s just PR, $(l.man)! The underlying fundamentals are what matter. Finding the best possible home for Fuchi California."
  branches {
    responseText: ""
    nextNodeIndex: 53
    idRef {
      id: "59b5d748356564dcc100a057:59b5fad93565648cb3003654"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5fadb3565648cb3003658"
  }
  index: 51
  text: "Exactly! See, I knew that you could follow this."
  branches {
    responseText: ""
    nextNodeIndex: 53
    idRef {
      id: "59b5d748356564dcc100a057:59b5fadb3565648cb300365a"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5fadd3565648cb3003661"
  }
  index: 52
  text: "Of course not! That would make me look like a devious, untrustworthy conniver! Not a principled and upstanding corporate representative!"
  branches {
    responseText: ""
    nextNodeIndex: 53
    idRef {
      id: "59b5d748356564dcc100a057:59b5fadd3565648cb3003663"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5fb0a3565648cb3003666"
  }
  index: 53
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isKora"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "594703903565641042006055"
            }
          }
        }
      }
    }
    nextNodeIndex: 54
    idRef {
      id: "59b5d748356564dcc100a057:59b5fb323565648cb30036f2"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 55
    idRef {
      id: "59b5d748356564dcc100a057:59b5fb463565648cb30036f9"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Kora present?"
}
nodes {
  idRef {
    id: "59b5fb363565648cb30036f5"
  }
  index: 54
  text: "{{GM}}She shudders in disgust.{{/GM}}\n\nShiawase has gotten up to some seriously shady shit. I\342\200\231m disappointed that you would want to work with them."
  branches {
    responseText: ""
    nextNodeIndex: 55
    idRef {
      id: "59b5d748356564dcc100a057:59b5fb423565648cb30036f7"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isKora"
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5fb463565648cb30036fb"
  }
  index: 55
  text: "It\342\200\231s all in the past, but if I\342\200\231m to have any hope of a future career - at Novatech, or Renraku, or the corner Stuffer Shack - then this little nugget of info will need to STAY in the past."
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate Goal"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "Obtain Brian\'s Key"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 56
    idRef {
      id: "59b5d748356564dcc100a057:59b5fb463565648cb30036fd"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 57
    idRef {
      id: "59b5d748356564dcc100a057:59b600ba3565648cb3003f3a"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5fb6b3565648cb3003708"
  }
  index: 56
  text: "{{GM}}He hands you his access key.{{/GM}}\n\nDo what you have to."
  branches {
    responseText: ""
    nextNodeIndex: 57
    idRef {
      id: "59b5d748356564dcc100a057:59b5fb6c3565648cb300370a"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "ss_a4_fuchi_s1-BrianKey"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Obtain Brian\'s Key"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Clear Waypoint from Actor"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5fb6c3565648cb300370c"
  }
  index: 57
  text: "But, when the time comes, I hope that you will still flip the switch for Novatech. Say what you will about me, but the corp can be a force for good. Little podunk go-gangs will never pose a serious threat to the California Protectorate. Opposing Saito will take lots of nuyen, organization, and technical savvy.\n\nBreaking up the monopoly of Japanese megacorps is the only way to create a better opportunity for the metahumans in California."
  branches {
    responseText: "I\342\200\231ll consider it."
    nextNodeIndex: -1
    idRef {
      id: "59b5d748356564dcc100a057:59b5fbb63565648cb30038b9"
    }
  }
  branches {
    responseText: "You make a strong point."
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Event_Influence_Isas_Forgiveness"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    idRef {
      id: "59b5d748356564dcc100a057:59b5fbb63565648cb30038bb"
    }
  }
  branches {
    responseText: "Oh sure, NOW you\342\200\231re all about preserving the dignity of metahumans. Duly noted."
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Event_Influence_Isas_Revenge"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    idRef {
      id: "59b5d748356564dcc100a057:59b5fbb63565648cb30038bd"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Modify the Root Trust Store"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59b5fc413565648cb3003956"
  }
  index: 58
  text: "That\342\200\231s true. And it WOULD let me continue to build my paper fort."
  branches {
    responseText: ""
    nextNodeIndex: 59
    idRef {
      id: "59b5d748356564dcc100a057:59b5fc543565648cb30039f1"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5fc563565648cb30039f4"
  }
  index: 59
  text: "{{GM}}The guard snickers, eyes forward.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 60
    idRef {
      id: "59b5d748356564dcc100a057:59b5fc563565648cb30039f6"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "59b543563565647422002f2a"
  }
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5fc563565648cb30039f8"
  }
  index: 60
  text: "All right, here\342\200\231s my access key. You\342\200\231ll still need to acquire Sira\342\200\231s half before you can do anything with it. Once you have both, you\342\200\231ll be able to access the central data store that houses our root trust certificate. Just reprogram it to accept Novatech\342\200\231s credentials and, um, that will be it."
  branches {
    responseText: ""
    nextNodeIndex: 61
    idRef {
      id: "59b5d748356564dcc100a057:59b5fc5d3565648cb30039fc"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "ss_a4_fuchi_s1-BrianKey"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Obtain Brian\'s Key"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5fc5d3565648cb30039fe"
  }
  index: 61
  text: "I won\342\200\231t be able to reward you today, but please come back after it\342\200\231s done, and I\342\200\231ll give you my contact info to repay you later. Good luck!"
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Modify the Root Trust Store"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59b5fcd03565648cb3003a05"
  }
  index: 62
  text: "Oh, that sounds fine\342\200\246 waaaaait a minute. I\342\200\231m not falling for that trick again!"
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59b5d748356564dcc100a057:59b5fcd23565648cb3003a07"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5fcd93565648cb3003b34"
  }
  index: 63
  text: "{{GM}}He stares at you for a moment.{{/GM}}\n\nYou do have trustworthy eyes. But can I trust the people who you\342\200\231re with? Or that Sira won\342\200\231t jump you as soon as you leave this room?\n\nNo. This key is a burden that I alone must bear, until the time comes when it is united with its twin."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59b5d748356564dcc100a057:59b5fcd93565648cb3003b36"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5fcdb3565648cb3003b40"
  }
  index: 64
  text: "Huh?"
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59b5d748356564dcc100a057:59b5fcdb3565648cb3003b42"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5fe173565648cb3003bf0"
  }
  index: 65
  text: "Excellent! Let me just verify that."
  branches {
    responseText: ""
    nextNodeIndex: 66
    idRef {
      id: "59b5d748356564dcc100a057:59b5fe3d3565648cb3003bf2"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_jackin_rigging"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59b5fe403565648cb3003bf5"
  }
  index: 66
  text: "Uh\342\200\246 this is a notebook.\n\nHeh, Ms. Novatech? Can you please check on the certificate status?"
  branches {
    responseText: ""
    nextNodeIndex: 67
    idRef {
      id: "59b5d748356564dcc100a057:59b5fe413565648cb3003bf7"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59b543493565647422002f27"
              }
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5fe413565648cb3003bf9"
  }
  index: 67
  text: "{{GM}}She rolls her eyes, but produces her commlink and twists a few dials. After several moments she nods affirmatively.{{/GM}}\n\nIt\342\200\231s done. We\342\200\231re in control."
  branches {
    responseText: ""
    nextNodeIndex: 68
    idRef {
      id: "59b5d748356564dcc100a057:59b5fe4e3565648cb3003bfd"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "59b543493565647422002f27"
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59b543493565647422002f27"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_jackout_rigging"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5fe4e3565648cb3003bff"
  }
  index: 68
  text: "Huzzah!\n\n{{GM}}He shakes your hand enthusiastically.{{/GM}}\n\nYou did it! You broke the impasse with Sira and ushered in a new age of the California economy. A new era of competition, a wave of innovation. A second age of paper!"
  branches {
    responseText: ""
    nextNodeIndex: 69
    idRef {
      id: "59b5d748356564dcc100a057:59b5fe503565648cb3003c01"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_interact"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59b5d748356564dcc100a057:59b5fe503565648cb3003c03"
  }
  index: 69
  text: "It will take some time, but over the coming weeks and months we\342\200\231ll take control of old Fuchi installations and infrastructure. They have a significant footprint in California, so if you or your friends ever find yourself in need of a helping hand, just give me a ring. I\342\200\231ll help clear the way for you."
  branches {
    responseText: "Quid pro quo. I can work with that."
    nextNodeIndex: 70
    idRef {
      id: "59b5d748356564dcc100a057:59b5ff393565648cb3003cb7"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "I look forward to our upcoming joint ventures."
    nextNodeIndex: 70
    idRef {
      id: "59b5d748356564dcc100a057:59b5ff393565648cb3003cb9"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Okay, but get ready for a lot of \342\200\234u up\342\200\235 messages."
    nextNodeIndex: 70
    idRef {
      id: "59b5d748356564dcc100a057:59b5ff393565648cb3003cbb"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "ss_a4_fuchi_s1-BrianContact"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59b5ff5b3565648cb3003cbe"
  }
  index: 70
  text: "Now, if you\342\200\231ll excuse me, I have a lot of data to transcribe. Toodles!"
  branches {
    responseText: ""
    nextNodeIndex: 71
    idRef {
      id: "59b5d748356564dcc100a057:59b5ff623565648cb3003cc5"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5ff643565648cb3003cc8"
  }
  index: 71
  text: "Bah! I\342\200\231m out of ink!!"
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "59b5ff8f3565648cb3003d83"
          }
        }
      }
    }
  }
}
roots {
  nextNodeIndex: 0
  onlyOnce: true
  idRef {
    id: "59b5d748356564dcc100a057:59b5d748356564dcc100a05b"
  }
}
roots {
  responseText: ""
  nextNodeIndex: 2
  idRef {
    id: "59b5d748356564dcc100a057:59b5d825356564dcc100a06f"
  }
}
