idRef {
  id: "59e2d40d356564905f001a55"
}
ui_name: "ss_banter-20_Masato_PC0"
nodes {
  idRef {
    id: "59e2d424356564905f001a61"
  }
  index: 0
  text: "Heh\342\200\246 hey, $(l.name)! Would you like to take my drone for a spin?"
  branches {
    responseText: "That doesn\342\200\231t seem very useful."
    nextNodeIndex: 1
    idRef {
      id: "59e2d40d356564905f001a55:59e2d427356564905f001a63"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "That sounds fun!"
    nextNodeIndex: 1
    idRef {
      id: "59e2d40d356564905f001a55:59e2d427356564905f001a65"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Gotta warn you, I fully intend to crash and burn it."
    nextNodeIndex: 1
    idRef {
      id: "59e2d40d356564905f001a55:59e2d427356564905f001a67"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59e2d461356564905f001a6a"
  }
  index: 1
  text: "I\342\200\231m not too precious about my gear. Go on, give it a try!"
  branches {
    responseText: "{{CC}}Drone Control: $(story.Global-Skillcheck_Hard){{/CC}} Move over, I\342\200\231ll show you how it\342\200\231s done."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 10
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "58a09a016666641898001ad5"
            }
            args {
              string_value: "Global-Skillcheck_Hard"
            }
          }
        }
      }
    }
    nextNodeIndex: 2
    idRef {
      id: "59e2d40d356564905f001a55:59e2d47e356564905f001a71"
    }
  }
  branches {
    responseText: "{{CC}}Drone Control: 1{{/CC}} I\342\200\231ll take a shot."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 10
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 5
    idRef {
      id: "59e2d40d356564905f001a55:59e2d550356564905f001aea"
    }
  }
  branches {
    responseText: "{{CC}}Item: Datajack{{/CC}} I\342\200\231ll try\342\200\246"
    conditions {
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "OR"
            args {
              call_value {
                functionName: "Evaluate If Actor Has Item"
                args {
                  call_value {
                    functionName: "Specific Actor"
                    args {
                      call_value {
                        functionName: "Triggering Actor"
                      }
                    }
                    args {
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "HasOrHasNot"
                    }
                    args {
                      int_value: 1
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Map Item (Item)"
                    args {
                      string_value: "(Arm) Induction Datajack"
                    }
                  }
                }
              }
            }
            args {
              call_value {
                functionName: "Evaluate If Actor Has Item"
                args {
                  call_value {
                    functionName: "Specific Actor"
                    args {
                      call_value {
                        functionName: "Triggering Actor"
                      }
                    }
                    args {
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "HasOrHasNot"
                    }
                    args {
                      int_value: 1
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Map Item (Item)"
                    args {
                      string_value: "(Eyes) Eye Datajack"
                    }
                  }
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Evaluate If Actor Has Item"
            args {
              call_value {
                functionName: "Specific Actor"
                args {
                  call_value {
                    functionName: "Triggering Actor"
                  }
                }
                args {
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "HasOrHasNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (Item)"
                args {
                  string_value: "(Head) Datajack"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 10
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 6
    hideIfUnavailable: true
    idRef {
      id: "59e2d40d356564905f001a55:59e2d587356564905f001b14"
    }
  }
  branches {
    responseText: "{{CC}}No Datajack{{/CC}} You\342\200\231re forgetting something\342\200\246"
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "(Head) Datajack"
            }
          }
        }
      }
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "(Arm) Induction Datajack"
            }
          }
        }
      }
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "(Eyes) Eye Datajack"
            }
          }
        }
      }
    }
    nextNodeIndex: 7
    idRef {
      id: "59e2d40d356564905f001a55:59e2d69d356564905f001b98"
    }
  }
  branches {
    responseText: "I\342\200\231d rather not."
    nextNodeIndex: 8
    idRef {
      id: "59e2d40d356564905f001a55:59e2d6eb356564905f001bf2"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "I\342\200\231ll leave it to the expert."
    nextNodeIndex: 8
    idRef {
      id: "59e2d40d356564905f001a55:59e2d6eb356564905f001bf4"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "I don\342\200\231t want to put you out of a job."
    nextNodeIndex: 8
    idRef {
      id: "59e2d40d356564905f001a55:59e2d6ec356564905f001bf6"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59e2d480356564905f001a74"
  }
  index: 2
  text: "You jack in to Masato\342\200\231s console and instantly seize control of the drone. After scanning through the diagnostics, you spot the opportunity for a couple of performance optimizations and deploy an on-the-fly patch."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59e2d40d356564905f001a55:59e2d482356564905f001a76"
    }
  }
  nodeType: ConversationNodeType_GM_Voice
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:rigger"
          }
          args {
            string_value: "RigJackIn"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_jackin_rigging"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59e2d40d356564905f001a55:59e2d490356564905f001a86"
  }
  index: 3
  text: "Settling in, you take the drone through its paces. Masato does an excellent job at maintaining the vehicle: it is fast and responsive, immediately fulfilling your manual commands, and sensibly extrapolating routes from high-level objectives you send it."
  branches {
    responseText: ""
    nextNodeIndex: 4
    idRef {
      id: "59e2d40d356564905f001a55:59e2d490356564905f001a88"
    }
  }
  nodeType: ConversationNodeType_GM_Voice
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:rigger"
          }
          args {
            string_value: "DroneRotors"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59e2d40d356564905f001a55:59e2d493356564905f001a8c"
  }
  index: 4
  text: "He leans over your shoulder and fiddles with the console. Your vision is suddenly augmented with wireframes depicting you, all of your companions, and the drones. Symbols and status bars and numbers float above their virtual avatars."
  branches {
    responseText: ""
    nextNodeIndex: 11
    idRef {
      id: "59e2d40d356564905f001a55:59e2d493356564905f001a8e"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_GM_Speaker_Voice
  sourceWithTagInScene: "isMasato"
}
nodes {
  idRef {
    id: "59e2d552356564905f001aed"
  }
  index: 5
  text: "You jack into Masato\342\200\231s console. It takes a few moments to find his drone, and several more to open a reliable channel with it.\n\nOnce you\342\200\231re in, you run a full system diagnostic. It\342\200\231s in fine shape, and eager to reply to your directions."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59e2d40d356564905f001a55:59e2d57c356564905f001af3"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_GM_Voice
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:rigger"
          }
          args {
            string_value: "RigJackIn"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_jackin_rigging"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59e2d601356564905f001b45"
  }
  index: 6
  text: "The console\342\200\231s plug slides easily into your jack, but the incoming stream of data feels bizarre and overwhelming, almost painful. You can FEEL your synapses firing, and the drone responds in kind, jerking and making noises that you\342\200\231re fairly certain it shouldn\342\200\231t."
  branches {
    responseText: ""
    nextNodeIndex: 4
    idRef {
      id: "59e2d40d356564905f001a55:59e2d695356564905f001b77"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_GM_Voice
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:decker"
          }
          args {
            string_value: "Matrix_DumpShock"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_jackin_rigging"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59e2d6d9356564905f001bd1"
  }
  index: 7
  text: "Oh, right!\n\n{{GM}}The grin on his face suggests that he had not, in fact, forgotten.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 9
    idRef {
      id: "59e2d40d356564905f001a55:59e2d6e7356564905f001bd3"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59e2d701356564905f001bf9"
  }
  index: 8
  text: "Suit yourself! I\342\200\231ll narrate for you."
  branches {
    responseText: ""
    nextNodeIndex: 9
    idRef {
      id: "59e2d40d356564905f001a55:59e2d703356564905f001bfb"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59e2d40d356564905f001a55:59e2d704356564905f001bfd"
  }
  index: 9
  text: "He activates his control console, sending his robot companion into a flurry of activity. Dividing his attention between the drone, his remote, and you, he maintains a steady chatter describing his activities."
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "59e2d40d356564905f001a55:59e2d704356564905f001bff"
    }
  }
  nodeType: ConversationNodeType_GM_Speaker_Voice
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:rigger"
          }
          args {
            string_value: "RigJackIn"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isMasato"
              }
            }
          }
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_jackin_rigging"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59e2d764356564905f001c7f"
  }
  index: 10
  text: "\342\200\246 but of course, that only matters during a firefight. What\342\200\231s really cool is this!\n\n{{GM}}His drone whirs, blinks, and rotates.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 11
    idRef {
      id: "59e2d40d356564905f001a55:59e2d766356564905f001c81"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:rigger"
          }
          args {
            string_value: "DroneRotors"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59e2d79e356564905f001cd8"
  }
  index: 11
  text: "Now, I can see you in front of me, of course: but I can ALSO see your readout through the console. Vital signs, supply count, armor integrity.\n\nThat\342\200\231s incredibly useful: even if you and I get separated, or if we\342\200\231re in a low-light situation, I\342\200\231ll still be able to track your position. So I can provide suppressing fire, or send in meds, whatever you need."
  branches {
    responseText: ""
    nextNodeIndex: 12
    idRef {
      id: "59e2d40d356564905f001a55:59e2d7a0356564905f001cda"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59e2d40d356564905f001a55:59e2d7a1356564905f001cdc"
  }
  index: 12
  text: "Here\342\200\231s another cool thing. Act like you\342\200\231re going to hit me, but don\342\200\231t actually do it. Just hold that pose for a second\342\200\246 okay, cool.\n\nSo, my drone here has calculated the offensive threat capability you\342\200\231re projecting, compared it to my own personal dexterity, and come to the conclusion that you have a\342\200\246 67% chance of successfully punching me.\n\nHeh, good to know! I\342\200\231ll try to avoid ticking you off."
  branches {
    responseText: "Presuming you usually use this on enemies, I can see how useful it would be."
    nextNodeIndex: 13
    idRef {
      id: "59e2d40d356564905f001a55:59e2d7a1356564905f001cde"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "That\342\200\231s a great way to help out the team!"
    nextNodeIndex: 13
    idRef {
      id: "59e2d40d356564905f001a55:59e2d806356564905f001d8c"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "The other 33% chance is that I\342\200\231ll successfully knee you in the nads."
    nextNodeIndex: 13
    idRef {
      id: "59e2d40d356564905f001a55:59e2d806356564905f001d8e"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_attack_unarmed_manafist"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59e2d817356564905f001d91"
  }
  index: 13
  text: "Of course, that\342\200\231s extremely useful information for me to know as well. I can decide whether it\342\200\231s worth going after someone with my cyberwhip, or if I\'d be better off flanking the foe with a drone.\n\n{{GM}}He frowns briefly.{{/GM}}\n\nThere does still seem to be a bug somewhere in the system, though. I\342\200\231ve noticed that I seem to often miss even when it calculates that I have a 99% chance of success."
  branches {
    responseText: ""
    nextNodeIndex: 14
    idRef {
      id: "59e2d40d356564905f001a55:59e2d819356564905f001d93"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59e2d81a356564905f001d96"
  }
  index: 14
  text: "Anyways, that\342\200\231s the life of a rigger! These little guys aren\342\200\231t just for good looks: they\342\200\231re a really helpful component of maintaining situational awareness. That was a big part of our success in the Marines, and I hope you appreciate what they do for you these days."
  nodeType: ConversationNodeType_Simple
}
roots {
  nextNodeIndex: 0
  idRef {
    id: "59e2d40d356564905f001a55:59e2d40d356564905f001a59"
  }
}
