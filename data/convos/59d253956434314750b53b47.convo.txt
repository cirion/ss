idRef {
  id: "59d253956434314750b53b47"
}
ui_name: "ss_a6_sutro_s1-Outside_TirSoldier"
nodes {
  idRef {
    id: "59d253ac6434314750b53b53"
  }
  index: 0
  text: "You!\n\n{{GM}}The soldier\342\200\231s anger is evident, even through his combat mask. A thick accent colors his speech, but his words are perfectly understandable.{{/GM}}\n\nOnce again you seek to thwart the actions of Tir Tairngire. You are an evil $(l.race). You must die!"
  branches {
    responseText: "Why don\342\200\231t you tell me what this is all about?"
    nextNodeIndex: 1
    idRef {
      id: "59d253956434314750b53b47:59d253ad6434314750b53b55"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Tir isn\342\200\231t my enemy. Walk away and nobody else needs to be hurt."
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Event_Influence_Arelia_Universal"
            }
          }
        }
      }
    }
    nextNodeIndex: 1
    idRef {
      id: "59d253956434314750b53b47:59d253e26434314750b53b5b"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Honey, you have way too high an opinion of yourself. I couldn\342\200\231t care less about who you are or what you\342\200\231re doing."
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Event_Influence_Arelia_Selfish"
            }
          }
        }
      }
    }
    nextNodeIndex: 1
    idRef {
      id: "59d253956434314750b53b47:59d253e36434314750b53b5d"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59d253fd6434314750b53b68"
  }
  index: 1
  text: "Atop Sweeney Ridge, a full squad of ghosts was killed. Your visage was captured and shared for all to see and mark."
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "58a09a016666641898001ad5"
            }
            args {
              string_value: "a4_Sweeney_s1-SavedDoorGuard"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 2
    idRef {
      id: "59d253956434314750b53b47:59d2543b6434314750b53b90"
    }
    comment: "Killed the door dude on Sweeney?"
  }
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59d253956434314750b53b47:59d2543b6434314750b53b92"
    }
    comment: "Default: He survived/escaped"
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59d254c96434314750b53bbc"
  }
  index: 2
  text: "You even killed Arathiel Goldenhair, who guarded the entrance. Arathiel was my kinsman, and I will avenge his death!"
  branches {
    responseText: ""
    nextNodeIndex: 4
    idRef {
      id: "59d253956434314750b53b47:59d254d66434314750b53bbe"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59d254e06434314750b53bc1"
  }
  index: 3
  text: "Arathiel Goldenhair escaped and brought news back to Tir. You did not save the soldiers from the novascorpions, and their blood lies on your hands. May your own loved ones know the agonizing death that comes from a novascorpion\342\200\231s venom!"
  branches {
    responseText: ""
    nextNodeIndex: 4
    idRef {
      id: "59d253956434314750b53b47:59d254ea6434314750b53bd3"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59d254ed6434314750b53bd6"
  }
  index: 4
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "58a09a016666641898001ad5"
            }
            args {
              string_value: "a4_Sweeney_s1-FiredMissiles"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 5
    idRef {
      id: "59d253956434314750b53b47:59d255086434314750b53bdb"
    }
    comment: "Yes"
  }
  branches {
    responseText: ""
    nextNodeIndex: 6
    idRef {
      id: "59d253956434314750b53b47:59d255356434314750b53be2"
    }
    comment: "No"
  }
  nodeType: ConversationNodeType_Simple
  comment: "Fired missiles?"
}
nodes {
  idRef {
    id: "59d2551d6434314750b53bde"
  }
  index: 5
  text: "We had great shame when you fired the missiles, attacking our ally\342\200\231s bases. Our prince lost much face, and he does not respond well to such disrespect."
  branches {
    responseText: ""
    nextNodeIndex: 7
    idRef {
      id: "59d253956434314750b53b47:59d2551e6434314750b53be0"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59d253956434314750b53b47:59d255356434314750b53be4"
  }
  index: 6
  text: "We had great shame when you stole the missiles, providing them to our enemy. Our prince lost much face, Saito accusing him of weakness."
  branches {
    responseText: ""
    nextNodeIndex: 7
    idRef {
      id: "59d253956434314750b53b47:59d255356434314750b53be6"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59d2554c6434314750b53c05"
  }
  index: 7
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isOriginalMasato"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "5956f8c9356564907e002593"
            }
          }
        }
      }
    }
    nextNodeIndex: 8
    idRef {
      id: "59d253956434314750b53b47:59d2555a6434314750b53c25"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 9
    idRef {
      id: "59d253956434314750b53b47:59d2555a6434314750b53c27"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59d2555c6434314750b53c2a"
  }
  index: 8
  text: "Well, good! I love it when lovers quarrel."
  branches {
    responseText: ""
    nextNodeIndex: 9
    idRef {
      id: "59d253956434314750b53b47:59d2555f6434314750b53c2c"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isOriginalMasato"
}
nodes {
  idRef {
    id: "59d2558c6434314750b53c4e"
  }
  index: 9
  text: "The prince was cold before, but now is furious. He lashes out, becoming deeper enmeshed in the affairs of the Protectorate. We are far from our home, unable to return until we bring him what he wants."
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "59d253956434314750b53b47:59d255e96434315454b53b3c"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59d255eb6434315454b53b3f"
  }
  index: 10
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isOriginalArelia"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "5956f8c9356564907e002593"
            }
          }
        }
      }
    }
    nextNodeIndex: 11
    onlyOnce: true
    idRef {
      id: "59d253956434314750b53b47:59d255f26434315454b53b64"
    }
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isOriginalKora"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "5956f8c9356564907e002593"
            }
          }
        }
      }
    }
    nextNodeIndex: 12
    onlyOnce: true
    idRef {
      id: "59d253956434314750b53b47:59d2563e6434317f54b53b9b"
    }
  }
  branches {
    responseText: "We want the same artifact as you. If we need to go through you to get it, so be it."
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Event_Influence_Isao_Revenge"
            }
          }
        }
      }
    }
    nextNodeIndex: 13
    idRef {
      id: "59d253956434314750b53b47:59d2565a6434317f54b53ba7"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "I wish it didn\342\200\231t have to come to fighting."
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Event_Influence_Isao_Forgiveness"
            }
          }
        }
      }
    }
    nextNodeIndex: 13
    idRef {
      id: "59d253956434314750b53b47:59d2565a6434317f54b53ba9"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Yaaaaaaaaa!"
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Event_Influence_Isao_Revenge"
            }
          }
        }
      }
    }
    nextNodeIndex: 13
    idRef {
      id: "59d253956434314750b53b47:59d2565a6434317f54b53bab"
    }
  }
  branches {
    responseText: "If you want death, I can gladly provide. {{GM}}Attack.{{/GM}}"
    nextNodeIndex: -1
    idRef {
      id: "59d253956434314750b53b47:59d26e846434317f54b53cb2"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Reactive loop"
}
nodes {
  idRef {
    id: "59d255f56434315454b53b67"
  }
  index: 11
  text: "You really shouldn\342\200\231t do that. Your prince sounds like a mean man."
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "59d253956434314750b53b47:59d255f76434315454b53b69"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isOriginalArelia"
}
nodes {
  idRef {
    id: "59d253956434314750b53b47:59d2563e6434317f54b53b9d"
  }
  index: 12
  text: "There\342\200\231s no way that the Council can approve of this. Sneaking around, backstabbing, stealing. Anyone tied to this rogue prince will be in trouble once he is deposed."
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "59d253956434314750b53b47:59d2563e6434317f54b53b9f"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isOriginalKora"
}
nodes {
  idRef {
    id: "59d26e376434317f54b53c66"
  }
  index: 13
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isOriginalIsao"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "5956f8c9356564907e002593"
            }
          }
        }
      }
    }
    nextNodeIndex: 14
    idRef {
      id: "59d253956434314750b53b47:59d26e486434317f54b53c6d"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 15
    idRef {
      id: "59d253956434314750b53b47:59d26e596434317f54b53c74"
    }
    comment: "Default: Not present"
  }
  nodeType: ConversationNodeType_Simple
  comment: "Isao present?"
}
nodes {
  idRef {
    id: "59d26e556434317f54b53c70"
  }
  index: 14
  text: "They with our enemy joined are. We them must stop."
  branches {
    responseText: ""
    nextNodeIndex: 15
    idRef {
      id: "59d253956434314750b53b47:59d26e576434317f54b53c72"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isOriginalIsao"
}
nodes {
  idRef {
    id: "59d26e606434317f54b53c77"
  }
  index: 15
  text: "Kill them all! We will avenge our fallen brothers!"
  nodeType: ConversationNodeType_Simple
}
roots {
  nextNodeIndex: 0
  idRef {
    id: "59d253956434314750b53b47:59d253956434314750b53b4b"
  }
}
