idRef {
  id: "598b17ba3565649c34006b78"
}
ui_name: "ss_a1_alameda_s1-Inside_DorbiSummit"
nodes {
  idRef {
    id: "598b17d83565649c34006b84"
  }
  index: 0
  text: "Welcome to the party!\n\n{{GM}}The dwarf woman shines a brilliant smile at everyone in the room, serenely surveying her guests.{{/GM}}"
  branches {
    nextNodeIndex: 1
    idRef {
      id: "598b17ba3565649c34006b78:598b17d93565649c34006b86"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "598b17ba3565649c34006b78:598b17d93565649c34006b88"
  }
  index: 1
  text: "Kora, darling, so good to see you again! We must catch up. I see you\342\200\231ve brought some friends along."
  branches {
    conditions {
      ops {
        functionName: "Compare Actor Race"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Race"
            }
            args {
              int_value: 2
            }
          }
        }
      }
    }
    nextNodeIndex: 2
    idRef {
      id: "598b17ba3565649c34006b78:598b17e33565649c34006b8c"
    }
    comment: "PC0 is an elf"
  }
  branches {
    conditions {
      ops {
        functionName: "Compare Actor Race"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Race"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 3
    idRef {
      id: "598b17ba3565649c34006b78:598b18003565649c34006b92"
    }
    comment: "PC0 is a dwarf"
  }
  branches {
    nextNodeIndex: 4
    idRef {
      id: "598b17ba3565649c34006b78:598b18033565649c34006b9b"
    }
    comment: "PC0 isn\'t an elf or dwarf"
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59891fc0356564845b00587b"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isKora"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Triggering Actor"
                }
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_interact"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "598b17ba3565649c34006b78:598b17e33565649c34006b8e"
  }
  index: 2
  text: "Tsk, tsk\342\200\246 FOUR elves?! It looks like Tir Tairngire has thoroughly infiltrated your little organization!"
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "598b17ba3565649c34006b78:598b17fe3565649c34006b90"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "598b17ba3565649c34006b78:598b18003565649c34006b94"
  }
  index: 3
  text: "Tsk, tsk\342\200\246 two dwarves and three elves?! Here I thought that the PU was supposed to represent all of metahumanity. Couldn\342\200\231t you scrounge up a single ork or troll for your little party? Otherwise, I\342\200\231m liable to think I\342\200\231m meeting with Tir Tairngire."
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "598b17ba3565649c34006b78:598b18003565649c34006b96"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "598b17ba3565649c34006b78:598b18033565649c34006b9d"
  }
  index: 4
  text: "Tsk, tsk\342\200\246 I see one dwarf, one $(l.race), and THREE elves. Remind me, am I meeting with the PU, or with Tir Tairngire?"
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "598b17ba3565649c34006b78:598b18033565649c34006b9f"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "598b18063565649c34006ba2"
  }
  index: 5
  text: "{{GM}}He laughs easily.{{/GM}}\n\nDorbi, I presume. Charmed to meet you. I can\342\200\231t claim to speak for Tir, but the other activists in the PU have been gracious enough to make me our emissary.\n\nWe can be a fractious lot, but we recognize the importance of an alliance. I hope to convince you to join forces with us."
  branches {
    responseText: ""
    nextNodeIndex: 6
    idRef {
      id: "598b17ba3565649c34006b78:598b18613565649c34006ba9"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isTassender"
}
nodes {
  idRef {
    id: "598b17ba3565649c34006b78:598b18613565649c34006bab"
  }
  index: 6
  text: "{{GM}}She locks eyes with you.{{/GM}}\n\nYour muscle, I assume? Hm. Interesting choice.\n\nI am Dorbi, mayor of Halferville and a damn fine short-order cook. Who are you, and what is your favorite breakfast cereal?"
  branches {
    responseText: "$(s.name), and I eat Cyber-Os."
    nextNodeIndex: 7
    idRef {
      id: "598b17ba3565649c34006b78:598b18653565649c34006baf"
    }
  }
  branches {
    responseText: "My name is $(s.first_name). I enjoy Froot Hyperloops."
    nextNodeIndex: 8
    idRef {
      id: "598b17ba3565649c34006b78:598b18a93565649c34006bcc"
    }
  }
  branches {
    responseText: "Never mind my name! I like SUPER FROSTED EXTRA FRUCTOSE ULTRA SWEETENED SUGAR FLAKES! I POUR MORE SUGAR ON TOP!! DO YOU HAVE SOME?!?!"
    nextNodeIndex: 9
    idRef {
      id: "598b17ba3565649c34006b78:598b18b03565649c34006bd5"
    }
  }
  branches {
    responseText: "You can call me $(s.name). I avoid gluten, so no breakfast cereal for me."
    nextNodeIndex: 10
    idRef {
      id: "598b17ba3565649c34006b78:598b18b03565649c34006bdb"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "598b17ba3565649c34006b78:598b18653565649c34006bb1"
  }
  index: 7
  text: "{{GM}}She rolls her eyes.{{/GM}}\n\nOf COURSE you do."
  branches {
    responseText: ""
    nextNodeIndex: 11
    idRef {
      id: "598b17ba3565649c34006b78:598b18a63565649c34006bca"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "598b17ba3565649c34006b78:598b18a93565649c34006bce"
  }
  index: 8
  text: "Wow\342\200\246 I know plenty of people who EAT Hyperloops. You\342\200\231re the first person who claims to actually ENJOY them. Weird."
  branches {
    responseText: ""
    nextNodeIndex: 11
    idRef {
      id: "598b17ba3565649c34006b78:598b18a93565649c34006bd0"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "598b17ba3565649c34006b78:598b18b03565649c34006bd7"
  }
  index: 9
  text: "{{GM}}She laughs.{{/GM}}\n\nTake it easy, $(l.guy)! Behave, and maybe you\342\200\231ll get a treat when the grown-ups are done talking."
  branches {
    responseText: ""
    nextNodeIndex: 11
    idRef {
      id: "598b17ba3565649c34006b78:598b18b03565649c34006bd9"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "598b17ba3565649c34006b78:598b18b03565649c34006bdd"
  }
  index: 10
  text: "Oh, come on, you should know better by now! Oats, quinoa, rice\342\200\246 there are plenty of cereals out there for a gluten-free diet!\n\n{{GM}}She sighs sadly.{{/GM}}\n\nTo think of all the delicious and nutritious breakfasts that you\342\200\231ve missed out on, never to recover! Such a tragedy."
  branches {
    responseText: ""
    nextNodeIndex: 11
    idRef {
      id: "598b17ba3565649c34006b78:598b18b03565649c34006bdf"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "598b18bf3565649c34006be2"
  }
  index: 11
  text: "{{GM}}He steps forward, slightly bowing his head.{{/GM}}\n\nMy name is Desorn, and I am honored to\342\200\246"
  branches {
    responseText: ""
    nextNodeIndex: 12
    idRef {
      id: "598b17ba3565649c34006b78:598b19b23565649c34006c10"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isDesorn"
}
nodes {
  idRef {
    id: "598b19b53565649c34006c13"
  }
  index: 12
  text: "I\342\200\231m bored now.\n\n{{GM}}She claps her hands.{{/GM}}\n\nTassender! Lead with your best shot. Why should I ally with the PU? What can your organization offer a woman lurking in an impregnable fortress, surrounded by legions of fanatically devoted followers and easy access to an endless supply of precious metals?"
  branches {
    responseText: ""
    nextNodeIndex: 13
    idRef {
      id: "598b17ba3565649c34006b78:598b19b63565649c34006c15"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_changeweapon"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "598b17ba3565649c34006b78:598b19b63565649c34006c17"
  }
  index: 13
  text: "The most enticing offer we have is probably priority access to the People\342\200\231s University Matrix node. It\342\200\231s the most secure and performant site free of any megacorp influence. It would get your deckers off of the SFBA LTG, and keep you from being\342\200\246"
  branches {
    responseText: ""
    nextNodeIndex: 14
    idRef {
      id: "598b17ba3565649c34006b78:598b19ba3565649c34006c1b"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5987df49356564484d0011f9"
  }
}
nodes {
  idRef {
    id: "598b17ba3565649c34006b78:598b19ba3565649c34006c1d"
  }
  index: 14
  text: "Agreed.\n\nIn return, you\342\200\231d probably enjoy access to the Halferville tunnels. They\342\200\231re fantastic for making quick get-aways or popping up where Saito least expects you. I\342\200\231ll grant you unlimited use, provided you consent to an escort. I can\342\200\231t have heavily-armed squads roaming through my territory willy-nilly."
  branches {
    responseText: ""
    nextNodeIndex: 15
    idRef {
      id: "598b17ba3565649c34006b78:598b19bd3565649c34006c1f"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "598b17ba3565649c34006b78:598b19bd3565649c34006c21"
  }
  index: 15
  text: "You are most gracious, mayor. Access to the tunnels will be a big help that could save us from being pinned down and wiped out some day.\n\nBut, I\342\200\231m afraid that tunnels and deckers alone won\342\200\231t be sufficient to topple Saito. He can only be deposed through force. Sooner or later, we\342\200\231ll need to combine our resources, and actually strike a blow against him."
  branches {
    responseText: ""
    nextNodeIndex: 16
    idRef {
      id: "598b17ba3565649c34006b78:598b19bf3565649c34006c23"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5987df49356564484d0011f9"
  }
}
nodes {
  idRef {
    id: "598b17ba3565649c34006b78:598b19bf3565649c34006c25"
  }
  index: 16
  text: "And then he\342\200\231ll strike back, and annihilate us. How will that help our situation?\n\nYou might be a little slow, so let me explain this clearly:\n\nWe. Cannot. Beat. Saito. \n\nEven if all of my shorties with shotguns line up alongside your orks with ordnance, he\342\200\231ll wipe us all out, then excavate Halferville and blow Berkeley into the Bay."
  branches {
    responseText: ""
    nextNodeIndex: 17
    idRef {
      id: "598b17ba3565649c34006b78:598b19c13565649c34006c27"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "598b17ba3565649c34006b78:598b19c13565649c34006c29"
  }
  index: 17
  text: "Who does Saito have on his side? An entire fucking army of JIS-trained soldiers. Renraku. Shiawase. Fuchi. Mitsuhama. And every human in this state who ever attended a Humanis policlub meeting.\n\nWhat do we have to oppose that? Some spaced-out feel-good earth-hugging Berkeley hippies and a few Tolkien rejects hiding in holes?"
  branches {
    responseText: "{{GM}}Remain silent.{{/GM}}"
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Event_Influence_Desorn_Peace"
            }
          }
        }
      }
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Event_Influence_Valiri_Caution"
            }
          }
        }
      }
      ops {
        functionName: "Add Camera Point of Interest (Actors)"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Nearest Tagged Actor to Actor"
                args {
                  call_value {
                    functionName: "Get Map Item (SenseTagList)"
                    args {
                      string_value: "isValiri"
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Triggering Actor"
                  }
                }
              }
            }
            args {
            }
          }
        }
        args {
          float_value: 2
        }
      }
      ops {
        functionName: "Add Camera Point of Interest (Actors)"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Nearest Tagged Actor to Actor"
                args {
                  call_value {
                    functionName: "Get Map Item (SenseTagList)"
                    args {
                      string_value: "isDesorn"
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Triggering Actor"
                  }
                }
              }
            }
            args {
            }
          }
        }
        args {
          float_value: 2
        }
      }
    }
    nextNodeIndex: 18
    idRef {
      id: "598b17ba3565649c34006b78:598bb8c73565646034006b69"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "We\342\200\231ll oppose him with whatever and whoever we can get."
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Event_Influence_Desorn_Violence"
            }
          }
        }
      }
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Event_Influence_Valiri_Speed"
            }
          }
        }
      }
      ops {
        functionName: "Add Camera Point of Interest (Actors)"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Nearest Tagged Actor to Actor"
                args {
                  call_value {
                    functionName: "Get Map Item (SenseTagList)"
                    args {
                      string_value: "isValiri"
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Triggering Actor"
                  }
                }
              }
            }
            args {
            }
          }
        }
        args {
          float_value: 2
        }
      }
      ops {
        functionName: "Add Camera Point of Interest (Actors)"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Nearest Tagged Actor to Actor"
                args {
                  call_value {
                    functionName: "Get Map Item (SenseTagList)"
                    args {
                      string_value: "isDesorn"
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Triggering Actor"
                  }
                }
              }
            }
            args {
            }
          }
        }
        args {
          float_value: 2
        }
      }
    }
    nextNodeIndex: 18
    idRef {
      id: "598b17ba3565649c34006b78:598bb8c73565646034006b6b"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Maybe we can scrounge up an Ent or two\342\200\246"
    actions {
      ops {
        functionName: "Add Camera Point of Interest (Actors)"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Nearest Tagged Actor to Actor"
                args {
                  call_value {
                    functionName: "Get Map Item (SenseTagList)"
                    args {
                      string_value: "isValiri"
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Triggering Actor"
                  }
                }
              }
            }
            args {
            }
          }
        }
        args {
          float_value: 2
        }
      }
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Event_Influence_Valiri_Caution"
            }
          }
        }
      }
    }
    nextNodeIndex: 18
    idRef {
      id: "598b17ba3565649c34006b78:598bb8c73565646034006b6d"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "598bb8f33565646034006b70"
  }
  index: 18
  text: "How about a dragon?\n\n{{GM}}He smiles serenely.{{/GM}}\n\nSurely that would help turn the scales."
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "598b17ba3565649c34006b78:598bb90d3565646034006bae"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isDesorn"
}
nodes {
  idRef {
    id: "598b17ba3565649c34006b78:598bb90e3565646034006bb0"
  }
  index: 19
  text: "Hm. Yes, it would at that.\n\nWhy? Do you have a dragon waiting in the wings to pounce on Saito? And if so, why the hell are you wasting your time with me?"
  branches {
    responseText: ""
    nextNodeIndex: 20
    idRef {
      id: "598b17ba3565649c34006b78:598bb90e3565646034006bb2"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "59891fc0356564845b00587b"
  }
}
nodes {
  idRef {
    id: "598b17ba3565649c34006b78:598bb9123565646034006bb6"
  }
  index: 20
  text: "Actually, that\342\200\231s where we thought you could come in. Desorn here has spent time in Shasta, and is able to call on Hestaby, but\342\200\246 well\342\200\246"
  branches {
    responseText: ""
    nextNodeIndex: 21
    idRef {
      id: "598b17ba3565649c34006b78:598bb9123565646034006bb8"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5987df49356564484d0011f9"
  }
}
nodes {
  idRef {
    id: "598b17ba3565649c34006b78:598bb9153565646034006bba"
  }
  index: 21
  text: "She has been distant lately. Distracted. She does not reply to cries for aid, now that she is needed more than ever before."
  branches {
    responseText: ""
    nextNodeIndex: 22
    idRef {
      id: "598b17ba3565649c34006b78:598bb9153565646034006bbc"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isDesorn"
}
nodes {
  idRef {
    id: "598b17ba3565649c34006b78:598bb9183565646034006bbe"
  }
  index: 22
  text: "We were hoping that you might be able to get through to her, Dorbi. You\342\200\231ve known her longer than just about anyone else alive.\n\nIf the rumors are true, she still owes you a favor, and we could all use a favor right about now."
  branches {
    responseText: ""
    nextNodeIndex: 23
    idRef {
      id: "598b17ba3565649c34006b78:598bb9183565646034006bc0"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isKora"
}
nodes {
  idRef {
    id: "598b17ba3565649c34006b78:598bb9183565646034006bc2"
  }
  index: 23
  text: "Well, that\342\200\231s all true. She basically owes me her life. Yeah. You could say I\342\200\231m a pretty big deal."
  branches {
    responseText: ""
    nextNodeIndex: 24
    idRef {
      id: "598b17ba3565649c34006b78:598bb9183565646034006bc4"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "598b17ba3565649c34006b78:598bb9183565646034006bc6"
  }
  index: 24
  text: "I brought an optic-interface Matrix endpoint. You can use this to\342\200\246"
  branches {
    responseText: ""
    nextNodeIndex: 25
    idRef {
      id: "598b17ba3565649c34006b78:598bb9183565646034006bc8"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isValiri"
}
nodes {
  idRef {
    id: "598b17ba3565649c34006b78:598bb9183565646034006bca"
  }
  index: 25
  text: "Yes, yes, communicate with her without sticking wires into my precious essence. I\342\200\231m not a child, you know.\n\n{{GM}}She beckons you.{{/GM}}\n\nWould you be a dear and go fetch some tungsten relays for me? These things give me an awful headache if the signal isn\342\200\231t sufficiently dampened first."
  branches {
    responseText: "I\342\200\231ll take care of it."
    nextNodeIndex: 26
    idRef {
      id: "598b17ba3565649c34006b78:598bb9183565646034006bcc"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Happy to help."
    nextNodeIndex: 26
    idRef {
      id: "598b17ba3565649c34006b78:598bbc5d3565646034006ca8"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Aw, do I hafta?"
    nextNodeIndex: 26
    idRef {
      id: "598b17ba3565649c34006b78:598bbc5d3565646034006caa"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "59891fc0356564845b00587b"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_interact"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "598bbc8f3565646034006cf5"
  }
  index: 26
  text: "Thanks for helping us out, $(l.name). We\342\200\231ll keep hashing out the details while you\342\200\231re working on that."
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5987df49356564484d0011f9"
  }
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5987df49356564484d0011f9"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5987df49356564484d0011f9"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Acquire Tungsten Relays"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
roots {
  nextNodeIndex: 0
  idRef {
    id: "598b17ba3565649c34006b78:598b17ba3565649c34006b7c"
  }
}
