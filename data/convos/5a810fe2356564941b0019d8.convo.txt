idRef {
  id: "5a810fe2356564941b0019d8"
}
ui_name: "ss_a4_sweeney_s1-Commentary_Crafting"
nodes {
  idRef {
    id: "5a810ff0356564941b0019e4"
  }
  index: 0
  text: "I started experimenting a little with custom items in The Caldecott Caper, and made them a more prominent feature in CalFree in Chains. I liked the idea of crafting items, and the introduction of a rare venom seemed like a good opportunity to create those options."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "5a810fe2356564941b0019d8:5ae7cb17356564c41c001a2d"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5ae7cb19356564c41c001a30"
  }
  index: 1
  text: "Novascorpions are a well-documented paracritter in the Sixth World, particularly active in southern California and renowned for their deadly poison. I re-used the existing Scorpyine enemy models, but updated the enemy stats to include a powerful damage-over-time venom attack."
  branches {
    nextNodeIndex: 2
    idRef {
      id: "5a810fe2356564941b0019d8:5a810ff1356564941b0019e6"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a810fe2356564941b0019d8:5a810ff1356564941b0019e8"
  }
  index: 2
  text: "The Shadowrun game engine supports classifying damage into different types, such as Fire, Shock, Magic, etc. Individual characters and enemies can then have varying levels of vulnerability to those damage types, like Immune to Fire or 2x Damage from Bleed.\n\nThe official campaigns almost never use this, except for the bug spirits at the climax of Dead Man\'s Switch, but the capabilities are still latent in the engine."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "5a810fe2356564941b0019d8:5ae7cb61356564c41c001a68"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5ae7cb63356564c41c001a6b"
  }
  index: 3
  text: "First, for the antivenom, I needed to update the scorpyine\'s attack. It visually looks like poison, but, like most attacks, it was originally coded to the default damage type."
  branches {
    responseText: ""
    nextNodeIndex: 4
    idRef {
      id: "5a810fe2356564941b0019d8:5ae7cb82356564c41c001a7d"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5ae7cb84356564c41c001a80"
  }
  index: 4
  text: "Then, once your character crafts the antivenom, I run a script that sets all members of your party to be immune to venom. This property will reset when your party respawns in future scenes, so I also add a Mission Item to your inventory for the long-lived version of the antivenom. On future scenes, I check to see whether you\'re carrying that item and, if so, run the script again to make everyone immune to poison."
  branches {
    nextNodeIndex: 5
    idRef {
      id: "5a810fe2356564941b0019d8:5a810ff3356564941b0019ec"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a810fe2356564941b0019d8:5a810ff3356564941b0019ee"
  }
  index: 5
  text: "I can\'t add new damage types to the engine, so I can\'t differentiate between Novascorpion Poison and Other Poison. But that\'s fine, since I never have other types of poison present in the same scenes as Novascorpions."
  branches {
    responseText: ""
    nextNodeIndex: 6
    idRef {
      id: "5a810fe2356564941b0019d8:5ae7cc47356564c41c001abc"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5ae7cc4a356564c41c001abf"
  }
  index: 6
  text: "The weapons were even more fun to make. I usually start by copying an existing weapon, like Hand Razors or a Grenade Launcher. These items can\'t be created or modified within the Shadowrun Editor, but you can fairly easily edit the underlying text files: give them a new name and they appear as a separate item, then modify the item to your desire."
  branches {
    nextNodeIndex: 7
    idRef {
      id: "5a810fe2356564941b0019d8:5a811188356564941b0019f1"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a810fe2356564941b0019d8:5a811188356564941b0019f3"
  }
  index: 7
  text: "You can easily modify item stats, such as the range, damage, or activation effects. It\'s trickier, but still possible, to switch to another animation or change the targeting mode (like AOE versus single-enemy versus wounded-ally). And there are a few things that you just can\'t do, like add a completely new 3D model or animation."
  branches {
    nextNodeIndex: 8
    idRef {
      id: "5a810fe2356564941b0019d8:5a81118b356564941b0019f7"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a810fe2356564941b0019d8:5a81118b356564941b0019f9"
  }
  index: 8
  text: "Once I had the concepts down and some rough versions of the items, I used a simple standalone test combat scene that was pre-loaded with a few friendly NPCs and a few Knight Errant enemies.\n\nThis allows me to quickly iterate, using the weapons over and over again to gauge whether they\'re working properly and whether they feel over- or under-powered."
  branches {
    nextNodeIndex: 9
    idRef {
      id: "5a810fe2356564941b0019d8:5a81118c356564941b0019fb"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5a810fe2356564941b0019d8:5a81118c356564941b0019fd"
  }
  index: 9
  text: "It\'s always difficult to decide how powerful to make an item: I want to reward players for selecting a one-time-only exclusive weapon like this, but I also don\'t want to lock best-in-slot items behind a choice that some players might not want to make for roleplaying purposes. So these items ended up being roughly tier 2.5: slightly better than the stuff currently available in shops, but not quite as good as what you can buy during the final missions."
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "5a810fe2356564941b0019d8:5ae7cca0356564c41c001afb"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5ae7cca2356564c41c001afe"
  }
  index: 10
  text: "However, I also didn\'t want the items to become obsolete, so I tried to give them unique abilities that could still be interesting in the endgame. Poison worked especially well for this: even though later items will do more damage up-front, these items will still have the greatest damage-over-time. So, for example, you might carry the Poison Grenade Launcher for a while, then after you upgrade give it to Masato or Isao as a hand-me-down."
  nodeType: ConversationNodeType_Simple
}
roots {
  nextNodeIndex: 0
  idRef {
    id: "5a810fe2356564941b0019d8:5a810fe2356564941b0019dc"
  }
}
