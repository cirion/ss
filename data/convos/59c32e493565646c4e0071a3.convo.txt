idRef {
  id: "59c32e493565646c4e0071a3"
}
ui_name: "ss_a5_mojave_s1-Barracks_DoorTerminal"
nodes {
  idRef {
    id: "59c33e1b3565646c4e0075e3"
  }
  index: 0
  text: "Blah blah blah."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59c32f4a3565646c4e0071af"
  }
  index: 1
  text: "This terminal has been left unlocked. Recent messages are still visible via the inbox."
  branches {
    responseText: ""
    nextNodeIndex: 2
    onlyOnce: true
    idRef {
      id: "59c32e493565646c4e0071a3:59c32f8b3565646c4e0071b1"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "59c32e493565646c4e0071a3:59c32f8b3565646c4e0071b3"
    }
  }
  nodeType: ConversationNodeType_GM_Voice
}
nodes {
  idRef {
    id: "59c32f8f3565646c4e0071b6"
  }
  index: 2
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isKora"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "594fe02e356564b444005eab"
            }
          }
        }
      }
    }
    nextNodeIndex: 3
    onlyOnce: true
    idRef {
      id: "59c32e493565646c4e0071a3:59c32f953565646c4e0071b8"
    }
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isMasato"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "594fe02e356564b444005eab"
            }
          }
        }
      }
    }
    nextNodeIndex: 4
    onlyOnce: true
    idRef {
      id: "59c32e493565646c4e0071a3:59c330053565646c4e0071ec"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "59c32e493565646c4e0071a3:59c330073565646c4e0071f8"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  comment: "Reactive crew check"
}
nodes {
  idRef {
    id: "59c32f973565646c4e0071bb"
  }
  index: 3
  text: "Let\342\200\231s see what else they\342\200\231re up to."
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "59c32e493565646c4e0071a3:59c32f983565646c4e0071bd"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isKora"
}
nodes {
  idRef {
    id: "59c32e493565646c4e0071a3:59c330053565646c4e0071ee"
  }
  index: 4
  text: "Ah, the typical bureaucracy of the military. They can\342\200\231t fart without producing an auditable trail of electronic records."
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "59c32e493565646c4e0071a3:59c330053565646c4e0071f0"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isMasato"
}
nodes {
  idRef {
    id: "59c3301d3565646c4e00720c"
  }
  index: 5
  text: ""
  branches {
    responseText: "{{GM}}Read message about realignment objectives.{{/GM}}"
    nextNodeIndex: 6
    onlyOnce: true
    idRef {
      id: "59c32e493565646c4e0071a3:59c6e8c3356564ec420057e2"
    }
  }
  branches {
    responseText: "{{GM}}Read research report.{{/GM}}"
    nextNodeIndex: 13
    onlyOnce: true
    idRef {
      id: "59c32e493565646c4e0071a3:59c6ea76356564ec420059a6"
    }
  }
  branches {
    responseText: "{{GM}}Read performance summary.{{/GM}}"
    nextNodeIndex: 21
    onlyOnce: true
    idRef {
      id: "59c32e493565646c4e0071a3:59c6ec39356564ec42005ab2"
    }
  }
  branches {
    responseText: "{{GM}}Open Door{{/GM}}"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "Barracks_isEastDoorUnlocked"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 24
    hideIfUnavailable: true
    idRef {
      id: "59c32e493565646c4e0071a3:59c330283565646c4e007224"
    }
  }
  branches {
    responseText: "{{GM}}Exit.{{/GM}}"
    nextNodeIndex: -1
    idRef {
      id: "59c32e493565646c4e0071a3:59c33d793565646c4e00759c"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Empty root"
}
nodes {
  idRef {
    id: "59c6e90f356564ec420057e5"
  }
  index: 6
  text: ">> TO: Operations [dist list]\n>> SUBJECT: Re: Re: Fiduciary realignment objectives\n> In light of CentCom\342\200\231s further delay of essential funding to expand MPC operations, without concomitant deferment of performance metrics in OMRAR, be advised that securing private financing will prove essential. Recommend Gavan Morgan as an initial contact, as he has already shown personal interest in accelerating performance outcomes."
  branches {
    responseText: ""
    nextNodeIndex: 7
    idRef {
      id: "59c32e493565646c4e0071a3:59c6e981356564ec420058b2"
    }
  }
  nodeType: ConversationNodeType_Simple
  speaker_override_id: "59c6e967356564ec42005865"
}
nodes {
  idRef {
    id: "59c6e984356564ec420058b5"
  }
  index: 7
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isIsas"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "594fe02e356564b444005eab"
            }
          }
        }
      }
    }
    nextNodeIndex: 8
    onlyOnce: true
    idRef {
      id: "59c32e493565646c4e0071a3:59c6e988356564ec420058b7"
    }
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isMasato"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "594fe02e356564b444005eab"
            }
          }
        }
      }
    }
    nextNodeIndex: 9
    onlyOnce: true
    idRef {
      id: "59c32e493565646c4e0071a3:59c6e994356564ec420058c7"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 10
    onlyOnce: true
    idRef {
      id: "59c32e493565646c4e0071a3:59c6e996356564ec420058d3"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Reactive loop"
}
nodes {
  idRef {
    id: "59c6e98a356564ec420058ba"
  }
  index: 8
  text: "This language me confuses. MPC to what refers?"
  branches {
    responseText: ""
    nextNodeIndex: 7
    idRef {
      id: "59c32e493565646c4e0071a3:59c6e98c356564ec420058bc"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isIsas"
}
nodes {
  idRef {
    id: "59c32e493565646c4e0071a3:59c6e994356564ec420058c9"
  }
  index: 9
  text: "MPC probably means Mojave Processing Center. The O in OMRAR is for Operation, but it must be a new initiative, because I\342\200\231ve never heard of it.\n\nI swear, the best thing about quitting the Marines was getting away from acronymic bullshit."
  branches {
    responseText: ""
    nextNodeIndex: 7
    idRef {
      id: "59c32e493565646c4e0071a3:59c6e994356564ec420058cb"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isMasato"
}
nodes {
  idRef {
    id: "59c32e493565646c4e0071a3:59c6e996356564ec420058d5"
  }
  index: 10
  text: "> Recommend recruiting additional troops, at an individual carrying cost of \302\2451200 ppm, as well as private contractors, at \302\2452000 ppm. A total investment of one million nuyen will allow us to switch to 24-hour operations here, with a predicted throughput increase of 38%."
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isArelia"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "594fe02e356564b444005eab"
            }
          }
        }
      }
    }
    nextNodeIndex: 11
    idRef {
      id: "59c32e493565646c4e0071a3:59c6e996356564ec420058d7"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 12
    idRef {
      id: "59c32e493565646c4e0071a3:59c6ea39356564ec42005918"
    }
  }
  nodeType: ConversationNodeType_Simple
  speaker_override_id: "59c6e967356564ec42005865"
}
nodes {
  idRef {
    id: "59c32e493565646c4e0071a3:59c6e9ea356564ec4200590e"
  }
  index: 11
  text: "How can they be so callous? To write about money in the midst of all this suffering?"
  branches {
    responseText: ""
    nextNodeIndex: 12
    idRef {
      id: "59c32e493565646c4e0071a3:59c6ea3b356564ec4200591a"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isArelia"
}
nodes {
  idRef {
    id: "59c6ea52356564ec4200591d"
  }
  index: 12
  text: "> Be advised that other commands are likely tapping Gavan as well, with the promise of establishing additional PCs in reclaimed territories. These overtures will appeal to his desire for swifter and more visible action. Be sure to emphasize the greater efficiency enabled by increasing capacity of existing PCs."
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "59c32e493565646c4e0071a3:59c6ea66356564ec42005922"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  speaker_override_id: "59c6e967356564ec42005865"
}
nodes {
  idRef {
    id: "59c6ea99356564ec420059a9"
  }
  index: 13
  text: ">> TO: Subsecretary Willis, MD, PhD\n>> SUBJECT: Preliminary results of DEOT R&D\n> I wish to emphasize yet again that this is a marathon, not a sprint. While we appreciate Saito\342\200\231s devotion to and investment in science, he must understand that pure research takes time, and practical applications are likely still years away.\n> Nonetheless, as requested, here is a very early and unreviewed summary of our findings thus far."
  branches {
    responseText: ""
    nextNodeIndex: 14
    idRef {
      id: "59c32e493565646c4e0071a3:59c6eb3e356564ec420059ab"
    }
  }
  nodeType: ConversationNodeType_Simple
  speaker_override_id: "59c6e967356564ec42005866"
}
nodes {
  idRef {
    id: "59c32e493565646c4e0071a3:59c6eb40356564ec420059ad"
  }
  index: 14
  text: "> As requested, we have focused on trog physiognomy. Repeated lacerations on ork skin shows only conventional scarring, of the type found in humans. Pain thresholds appear higher, but it remains an effective technique for intelligence acquisition.\n> Trolls, meanwhile, show only mild discomfort at even complete rupturing of their dermis-equivalent. The next phase will investigate alternative \342\200\234persuasion points\342\200\235 that can be targeted."
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isArelia"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "594fe02e356564b444005eab"
            }
          }
        }
      }
    }
    nextNodeIndex: 15
    idRef {
      id: "59c32e493565646c4e0071a3:59c6eb40356564ec420059af"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 16
    idRef {
      id: "59c32e493565646c4e0071a3:59c6eb63356564ec420059b8"
    }
  }
  nodeType: ConversationNodeType_Simple
  speaker_override_id: "59c6e967356564ec42005866"
}
nodes {
  idRef {
    id: "59c6eb5d356564ec420059b4"
  }
  index: 15
  text: "I think I\342\200\231m going to be ill."
  branches {
    responseText: ""
    nextNodeIndex: 16
    idRef {
      id: "59c32e493565646c4e0071a3:59c6eb5f356564ec420059b6"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isArelia"
}
nodes {
  idRef {
    id: "59c32e493565646c4e0071a3:59c6eb63356564ec420059ba"
  }
  index: 16
  text: "> We\342\200\231ve made much more progress with our dwarf subjects. We\342\200\231ve verified that their infravision abilities are, in fact, intrinsic to the orb of the eyeball, and not an interplay with the neural system. We are cautiously optimistic about the possibilities of adapting this ability for military use."
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isKora"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "594fe02e356564b444005eab"
            }
          }
        }
      }
    }
    nextNodeIndex: 17
    idRef {
      id: "59c32e493565646c4e0071a3:59c6eb63356564ec420059bc"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 18
    idRef {
      id: "59c32e493565646c4e0071a3:59c6ebba356564ec420059cb"
    }
  }
  nodeType: ConversationNodeType_Simple
  speaker_override_id: "59c6e967356564ec42005866"
}
nodes {
  idRef {
    id: "59c6eba5356564ec420059c7"
  }
  index: 17
  text: "That sounds ghoulish! What are they going to do, shove dwarf eyeballs into human faces?!"
  branches {
    responseText: ""
    nextNodeIndex: 18
    idRef {
      id: "59c32e493565646c4e0071a3:59c6eba6356564ec420059c9"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isKora"
}
nodes {
  idRef {
    id: "59c6ebbc356564ec420059ce"
  }
  index: 18
  text: "> Finally, constant low-level radiation exposure has produced mixed results on our elven subjects. Cancers appear at roughly the same rate as that found in human patients. This appears to disprove our hypothesis regarding elven longevity, but further analysis will be required before final conclusions can be drawn."
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isIsas"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "594fe02e356564b444005eab"
            }
          }
        }
      }
    }
    nextNodeIndex: 19
    idRef {
      id: "59c32e493565646c4e0071a3:59c6ebdb356564ec420059d3"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 20
    idRef {
      id: "59c32e493565646c4e0071a3:59c6ebfc356564ec420059df"
    }
  }
  nodeType: ConversationNodeType_Simple
  speaker_override_id: "59c6e967356564ec42005866"
}
nodes {
  idRef {
    id: "59c32e493565646c4e0071a3:59c6ebdb356564ec420059d5"
  }
  index: 19
  text: "{{GM}}He shakes his head in disgust.{{/GM}}\n\nThese scientists sick are. They harm cause, not people help."
  branches {
    responseText: ""
    nextNodeIndex: 20
    idRef {
      id: "59c32e493565646c4e0071a3:59c6ebdb356564ec420059d7"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isIsas"
}
nodes {
  idRef {
    id: "59c6ebfe356564ec420059e2"
  }
  index: 20
  text: "> If you wish to reap the benefits of our cutting-edge research, please maintain your high rate of test subject delivery. I understand that other military and political objectives are at play, but gaining a technological edge will allow you to achieve those other goals with greater ease.\n> I remain respectfully yours,\n> Dr. Anton Havlar, MD, PhD"
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "59c32e493565646c4e0071a3:59c6ec21356564ec420059e7"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  speaker_override_id: "59c6e967356564ec42005866"
}
nodes {
  idRef {
    id: "59c6ec53356564ec42005ab5"
  }
  index: 21
  text: ">> TO: [undisclosed-recipients]\n>> SUBJECT: Auto-Generated Performance Report\n> Summary report for January 17, 2062:\n> Assets dispatched: 1107\n> Assets arrived: 925\n> Asset integrity rate: 83%\n> Accepted."
  branches {
    responseText: ""
    nextNodeIndex: 22
    idRef {
      id: "59c32e493565646c4e0071a3:59c6ec5e356564ec42005ab7"
    }
  }
  nodeType: ConversationNodeType_Simple
  speaker_override_id: "59c6e967356564ec42005865"
}
nodes {
  idRef {
    id: "59c32e493565646c4e0071a3:59c6ec5f356564ec42005ab9"
  }
  index: 22
  text: "> Transferred: 613\n> Divested: 108\n> Waste: 932\n> Net: -728\n> Accepted."
  branches {
    responseText: ""
    nextNodeIndex: 23
    idRef {
      id: "59c32e493565646c4e0071a3:59c6ec5f356564ec42005abb"
    }
  }
  nodeType: ConversationNodeType_Simple
  speaker_override_id: "59c6e967356564ec42005865"
}
nodes {
  idRef {
    id: "59c32e493565646c4e0071a3:59c6ec66356564ec42005abf"
  }
  index: 23
  text: "> Centers online: 27\n> Centers offline: 2\n> Centers under construction: 43\n> Projected completion date for Target Zero: October 30, 2062"
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "59c32e493565646c4e0071a3:59c6ec66356564ec42005ac1"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  speaker_override_id: "59c6e967356564ec42005865"
}
nodes {
  idRef {
    id: "59c3307e3565646c4e007229"
  }
  index: 24
  text: "> ERROR: Checksum invalid.\n> Current time: 00:00:00\n> Please input correct time."
  branches {
    responseText: "10:10:00"
    nextNodeIndex: 25
    idRef {
      id: "59c32e493565646c4e0071a3:59c330a63565646c4e007255"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "2:50:00"
    nextNodeIndex: 25
    idRef {
      id: "59c32e493565646c4e0071a3:59c330b93565646c4e007257"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "02:50:00"
    nextNodeIndex: 25
    idRef {
      id: "59c32e493565646c4e0071a3:59c330c33565646c4e007259"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "22:10:00"
    nextNodeIndex: 25
    idRef {
      id: "59c32e493565646c4e0071a3:59c330d23565646c4e00725b"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "14:50:00"
    nextNodeIndex: 25
    idRef {
      id: "59c32e493565646c4e0071a3:59c330e33565646c4e00725d"
    }
  }
  branches {
    responseText: "10:10:30"
    nextNodeIndex: 25
    idRef {
      id: "59c32e493565646c4e0071a3:59c6ff09356564ec420072a8"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "2:50:30"
    nextNodeIndex: 25
    idRef {
      id: "59c32e493565646c4e0071a3:59c6ff17356564ec420072aa"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "02:50:30"
    nextNodeIndex: 25
    idRef {
      id: "59c32e493565646c4e0071a3:59c6ff17356564ec420072ac"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "22:10:30"
    nextNodeIndex: 25
    idRef {
      id: "59c32e493565646c4e0071a3:59c6ff17356564ec420072ae"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "14:50:30"
    nextNodeIndex: 25
    idRef {
      id: "59c32e493565646c4e0071a3:59c6ff18356564ec420072b0"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_InputKeyboard
}
nodes {
  idRef {
    id: "59c330f23565646c4e007260"
  }
  index: 25
  text: "> Checksum confirmed.\n> Camera online.\n> Door unlocked."
  branches {
    responseText: "{{GM}}View camera.{{/GM}}"
    actions {
      ops {
        functionName: "Enable/Disable Trigger"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Trigger)"
            args {
              string_value: "59c334063565646c4e00730f"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    idRef {
      id: "59c32e493565646c4e0071a3:59c3312a3565646c4e0072c4"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Barracks_isEastDoorUnlocked"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "59c26b1c356564c047005e1b"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59c334173565646c4e007310"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "isDebugging"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "59c26b1c356564c047005e1b"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "59c334063565646c4e00730f"
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "59c334173565646c4e007310"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  nextNodeIndex: 0
  hideIfUnavailable: true
  onlyOnce: true
  idRef {
    id: "59c32e493565646c4e0071a3:59c33e013565646c4e0075e0"
  }
}
roots {
  nextNodeIndex: 1
  idRef {
    id: "59c32e493565646c4e0071a3:59c32e493565646c4e0071a7"
  }
}
speaker_override_id: "55897a5a613464581a001ad8"
