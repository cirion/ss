idRef {
  id: "59a32c733565641cd300585f"
}
ui_name: "ss_a2_sacto_s1-Sacto_Hazmat"
nodes {
  idRef {
    id: "59a32c8b3565641cd300586f"
  }
  index: 0
  text: "HEY! This is a radioactive hot site! \n\nIf you plan on having children one day, best stay far away, or at least don some protective gear."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59a32c733565641cd300585f:59a32c8c3565641cd3005871"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59a32c9d3565641cd3005874"
  }
  index: 1
  text: "I don\342\200\231t know which is worse: worrying that stray rads will kill me, or crawling through shit. Lucky me, I get to experience both in one day."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59a32c733565641cd300585f:59a32c9e3565641cd3005876"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59a32cbb3565641cd3005879"
  }
  index: 2
  text: "I thought I warned you to steer clear."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59a32c733565641cd300585f:59a32cbd3565641cd300587b"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59a32cbe3565641cd300587e"
  }
  index: 3
  text: ""
  branches {
    responseText: "Why is this site radioactive?"
    nextNodeIndex: 4
    onlyOnce: true
    idRef {
      id: "59a32c733565641cd300585f:59a32cdb3565641cd3005885"
    }
  }
  branches {
    responseText: "Is the rest of Sacramento also at risk?"
    nextNodeIndex: 11
    idRef {
      id: "59a32c733565641cd300585f:59a32db33565641cd3005953"
    }
  }
  branches {
    responseText: "I could handle that sewage cleanup for you."
    conditions {
      ops {
        functionName: "Evaluate Goal"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "Plug the Sewage Pipe"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 17
    hideIfUnavailable: true
    idRef {
      id: "59a32c733565641cd300585f:59a32e523565641cd3005a38"
    }
  }
  branches {
    responseText: "See you around."
    nextNodeIndex: -1
    idRef {
      id: "59a32c733565641cd300585f:59a334a53565641cd3005c7c"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Empty root"
}
nodes {
  idRef {
    id: "59a32cdd3565641cd3005888"
  }
  index: 4
  text: "This used to be the California Rangers HQ, so it was considered a military target. Saito shelled it with radioactive rounds during the siege."
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isArelia"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "5941e457356564181c0060d6"
            }
          }
        }
      }
    }
    nextNodeIndex: 5
    idRef {
      id: "59a32c733565641cd300585f:59a32cde3565641cd300588a"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 6
    idRef {
      id: "59a32c733565641cd300585f:59a32cf63565641cd3005898"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59a32c733565641cd300585f:59a32cde3565641cd300588c"
  }
  index: 5
  text: "That\342\200\231s terrible! There\342\200\231s no justification for unconventional warfare, especially in an urban center!"
  branches {
    responseText: ""
    nextNodeIndex: 6
    idRef {
      id: "59a32c733565641cd300585f:59a32ce13565641cd3005890"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isArelia"
}
nodes {
  idRef {
    id: "59a32c733565641cd300585f:59a32ce13565641cd3005892"
  }
  index: 6
  text: "As radiation goes, it could be worse. It isn\342\200\231t like there was a meltdown on site. Once we\342\200\231ve cleaned the area, we should be able to get people back in here. The Protectorate army includes veteran riggers from the Imperial State who would love to get their hands on Ranger gear."
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isIsas"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "5941e457356564181c0060d6"
            }
          }
        }
      }
    }
    nextNodeIndex: 7
    idRef {
      id: "59a32c733565641cd300585f:59a32ce33565641cd3005894"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 8
    idRef {
      id: "59a32c733565641cd300585f:59a32d3e3565641cd30058a7"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59a32c733565641cd300585f:59a32ce33565641cd3005896"
  }
  index: 7
  text: "The grip of the  Imperial State tightens. They more of CalFree seize, the old legacy corrupt."
  branches {
    responseText: ""
    nextNodeIndex: 8
    idRef {
      id: "59a32c733565641cd300585f:59a32d403565641cd30058a9"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isIsas"
}
nodes {
  idRef {
    id: "59a32d433565641cd30058ac"
  }
  index: 8
  text: "I have to say, all things considered it was fairly sound strategy. He got the Rangers to decamp from Sacramento, between the damage to their base and the realization that the national guard couldn\342\200\231t hold up."
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isValiri"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "5941e457356564181c0060d6"
            }
          }
        }
      }
    }
    nextNodeIndex: 9
    idRef {
      id: "59a32c733565641cd300585f:59a32d703565641cd30058cd"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "59a32c733565641cd300585f:59a32d7e3565641cd30058d4"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59a32d733565641cd30058d0"
  }
  index: 9
  text: "More like they were fucking hung out to dry."
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "59a32c733565641cd300585f:59a32d753565641cd30058d2"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isValiri"
}
nodes {
  idRef {
    id: "59a32d923565641cd30058d7"
  }
  index: 10
  text: "Now the Rangers are out there, roaming around aimlessly, and Saito\342\200\231s reign in Sactown is uncontested."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59a32c733565641cd300585f:59a32dab3565641cd30058ff"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59a32dc13565641cd3005956"
  }
  index: 11
  text: "Less so than before. Our rad levels might have increased, but the Protectorate has finally cleared the metahumans out of this city, so in the long run we\342\200\231re much better off than before."
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isDesorn"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "5941e457356564181c0060d6"
            }
          }
        }
      }
    }
    nextNodeIndex: 12
    idRef {
      id: "59a32c733565641cd300585f:59a32dc33565641cd3005958"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 13
    idRef {
      id: "59a32c733565641cd300585f:59a32dc73565641cd300595a"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59a32ddf3565641cd300595d"
  }
  index: 12
  text: "What do you mean?"
  branches {
    responseText: ""
    nextNodeIndex: 13
    idRef {
      id: "59a32c733565641cd300585f:59a32de13565641cd300595f"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isDesorn"
}
nodes {
  idRef {
    id: "59a32def3565641cd3005962"
  }
  index: 13
  text: "My family has lived here for generations. This used to be a great city, until the Awakening and all the chaos that came with it. Suddenly our streets were swarming with dwarves, orks, monsters of all sorts."
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isDesorn"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "5941e457356564181c0060d6"
            }
          }
        }
      }
    }
    nextNodeIndex: 14
    idRef {
      id: "59a32c733565641cd300585f:59a32dfc3565641cd3005967"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 15
    idRef {
      id: "59a32c733565641cd300585f:59a32dfd3565641cd3005969"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59a32e063565641cd300596c"
  }
  index: 14
  text: "\342\200\234Monsters?\342\200\235"
  branches {
    responseText: ""
    nextNodeIndex: 15
    idRef {
      id: "59a32c733565641cd300585f:59a32e093565641cd300596e"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isKora"
}
nodes {
  idRef {
    id: "59a32e1c3565641cd3005971"
  }
  index: 15
  text: "They destroyed the character of this city, and turned it into a twisted version of their own creation. It\342\200\231s been impossible to get a decent career in this place: the metas look after their own kind, take work away from decent human folks, and have every advantage in life.\n\nMeanwhile we humans have been reduced to begging for scraps from the world we used to run."
  branches {
    responseText: ""
    nextNodeIndex: 16
    idRef {
      id: "59a32c733565641cd300585f:59a32e373565641cd30059a9"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59a32e3a3565641cd30059ac"
  }
  index: 16
  text: "Well, no more! Saito has restored the proper order of things. Humans are in charge once more, and soon Sactown will go back to the way things were before: no more gangers, a government that looks after the needs of true Californians, and humans once again able to take pride in their lot."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59a32c733565641cd300585f:59a32e3d3565641cd30059ae"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59a32e703565641cd3005a3b"
  }
  index: 17
  text: "No way! Mr. Banain called me personally. If I don\342\200\231t handle that cleanup ASAP, I\342\200\231ll get drafted into the armed forces, or worse."
  branches {
    responseText: "{{CC}}Etiquette: Socialite{{/CC}} Do you really think Mr. Banain cares in the slightest who answers his call? Men of his caliber have far more important matters to attend to."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 16
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 18
    idRef {
      id: "59a32c733565641cd300585f:59a32e773565641cd3005a3d"
    }
  }
  branches {
    responseText: "{{CC}}Body: $(story.Global-Skillcheck_Hard){{/CC}} Hey, I can stomach the grossest stuff anyone throws at me. I won\342\200\231t let you down."
    conditions {
      ops {
        functionName: "Compare Actor Attribute"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorAttributes"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "58a09a016666641898001ad5"
            }
            args {
              string_value: "Global-Skillcheck_Hard"
            }
          }
        }
      }
    }
    nextNodeIndex: 19
    idRef {
      id: "59a32c733565641cd300585f:59a32ea33565641cd3005a44"
    }
  }
  branches {
    responseText: "{{CC}}Biotech: $(story.Global-Skillcheck_Medium){{/CC}} You act like I\342\200\231m not intimately familiar with the importance of quarantine and triage when dealing with unknown pathogens."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 11
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "58a09a016666641898001ad5"
            }
            args {
              string_value: "Global-Skillcheck_Medium"
            }
          }
        }
      }
    }
    nextNodeIndex: 20
    idRef {
      id: "59a32c733565641cd300585f:59a32ea53565641cd3005a4d"
    }
  }
  branches {
    responseText: "But I LIKE dealing with raw sewage!"
    nextNodeIndex: 22
    idRef {
      id: "59a32c733565641cd300585f:59a32ea53565641cd3005a53"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59a32e913565641cd3005a40"
  }
  index: 18
  text: "I suppose that\342\200\231s true. Just because every true Californian knows Gavan Banain is doesn\342\200\231t mean that he knows all of us. And while I admire that guy, I must admit that the thought of interacting with him is rather intimidating."
  branches {
    responseText: ""
    nextNodeIndex: 21
    idRef {
      id: "59a32c733565641cd300585f:59a32e933565641cd3005a42"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59a32c733565641cd300585f:59a32ea33565641cd3005a46"
  }
  index: 19
  text: "Now that you mention it, you DO look like you could take some punishment."
  branches {
    responseText: ""
    nextNodeIndex: 21
    idRef {
      id: "59a32c733565641cd300585f:59a32ea33565641cd3005a48"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59a32c733565641cd300585f:59a32ea53565641cd3005a4f"
  }
  index: 20
  text: "Well, at the very least you speak a convincing dialect of bullshit. Maybe you can keep them occupied and alive while I wrap up my work here."
  branches {
    responseText: ""
    nextNodeIndex: 21
    idRef {
      id: "59a32c733565641cd300585f:59a32ea53565641cd3005a51"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59a32eff3565641cd3005a5a"
  }
  index: 21
  text: "Here, you\342\200\231ll need this ID to make it into the site. I can\'t wait until they finally add photos to these things, it\'s kind of ridiculous that they haven\'t already."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59a32c733565641cd300585f:59a32f013565641cd3005a5c"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59a32c733565641cd300585f:59a32ea53565641cd3005a55"
  }
  index: 22
  text: "Then you have bigger problems than I\342\200\231m equipped to deal with."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59a32c733565641cd300585f:59a32ea53565641cd3005a57"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  nextNodeIndex: 0
  onlyOnce: true
  idRef {
    id: "59a32c733565641cd300585f:59a32c733565641cd3005863"
  }
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Evaluate Goal"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Plug the Sewage Pipe"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 1
  onlyOnce: true
  idRef {
    id: "59a32c733565641cd300585f:59a32c843565641cd300586a"
  }
}
roots {
  responseText: ""
  nextNodeIndex: 2
  idRef {
    id: "59a32c733565641cd300585f:59a32c843565641cd300586c"
  }
}
