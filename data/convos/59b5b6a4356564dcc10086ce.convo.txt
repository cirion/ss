idRef {
  id: "59b5b6a4356564dcc10086ce"
}
ui_name: "ss_a4_fuchi_s1-Upstairs_BrianFiles"
nodes {
  idRef {
    id: "59b5b708356564dcc100872d"
  }
  index: 0
  text: "The files look daunting. Intimidating. You haven\342\200\231t seen this much paper in one place since\342\200\246 well, since the library, so not that long ago.\n\nStill, you would have thought that Fuchi Industrial Electronics would have moved to purely electronic records by now."
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "59b5b6a4356564dcc10086ce:59b5b721356564dcc100872f"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_GM_Voice
}
nodes {
  idRef {
    id: "59b5b72c356564dcc1008734"
  }
  index: 1
  text: "The files are still here."
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "59b5b6a4356564dcc10086ce:59b5b72e356564dcc1008736"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5b730356564dcc1008739"
  }
  index: 2
  text: ""
  branches {
    responseText: "{{GM}}Look through the files.{{/GM}}"
    nextNodeIndex: 3
    onlyOnce: true
    idRef {
      id: "59b5b6a4356564dcc10086ce:59b5b741356564dcc1008749"
    }
  }
  branches {
    responseText: "{{GM}}Search for a specific file.{{/GM}}"
    conditions {
      ops {
        functionName: "Evaluate Goal"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "Learn the File Sorting System"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Goal Status"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "Learn the File Sorting System"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 6
    idRef {
      id: "59b5b6a4356564dcc10086ce:59b5b798356564dcc1008790"
    }
    comment: "Don\'t know how to search"
  }
  branches {
    responseText: "{{GM}}Search for a specific file.{{/GM}}"
    nextNodeIndex: 7
    idRef {
      id: "59b5b6a4356564dcc10086ce:59b5b930356564dcc10087c7"
    }
    comment: "Know how to search"
  }
  branches {
    responseText: "{{GM}}Leave.{{/GM}}"
    nextNodeIndex: -1
    idRef {
      id: "59b5b6a4356564dcc10086ce:59b5bab9356564dcc1008819"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Root"
}
nodes {
  idRef {
    id: "59b5b745356564dcc100874c"
  }
  index: 3
  text: "It\342\200\231s hopeless. They\342\200\231re tidy, and you don\342\200\231t doubt that some system organizes them, but the nature of the system defies comprehension. "
  branches {
    responseText: ""
    nextNodeIndex: 4
    idRef {
      id: "59b5b6a4356564dcc10086ce:59b5b759356564dcc100874e"
    }
  }
  nodeType: ConversationNodeType_GM_Voice
}
nodes {
  idRef {
    id: "59b5b75a356564dcc1008751"
  }
  index: 4
  text: "You pick out a sheet of paper at random. It\342\200\231s a memorandum instructing employees to bring their own toilet tissue for use at work. Next to it is a certificate of accomplishment made out to one Maeve Terwilliger Satsumo for completing a kaizen training course. Behind these you find a glossy takeout menu from Hella Thai."
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "59b5b6a4356564dcc10086ce:59b5b763356564dcc1008753"
    }
  }
  nodeType: ConversationNodeType_GM_Voice
}
nodes {
  idRef {
    id: "59b5b764356564dcc1008756"
  }
  index: 5
  text: "You slowly return the files. Going through them all would take decades."
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "59b5b6a4356564dcc10086ce:59b5b766356564dcc1008758"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_GM_Voice
}
nodes {
  idRef {
    id: "59b5b906356564dcc1008793"
  }
  index: 6
  text: "You wouldn\342\200\231t know where to start. Perhaps Brian does?"
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "59b5b6a4356564dcc10086ce:59b5b908356564dcc1008795"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_GM_Voice
}
nodes {
  idRef {
    id: "59b5b945356564dcc10087ca"
  }
  index: 7
  text: "You recall Brian\342\200\231s convoluted instructions. The oddest and most pertinent factor is that people are filed under their middle names."
  branches {
    responseText: "{{GM}}Look up a name.{{/GM}}"
    nextNodeIndex: 8
    idRef {
      id: "59b5b6a4356564dcc10086ce:59b5ba8e356564dcc10087cc"
    }
  }
  branches {
    responseText: "{{GM}}Step away.{{/GM}}"
    nextNodeIndex: 1
    idRef {
      id: "59b5b6a4356564dcc10086ce:59b5ba8e356564dcc10087ce"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_GM_Voice
}
nodes {
  idRef {
    id: "59b5bac1356564dcc100881c"
  }
  index: 8
  text: "{{GM}}Look for file.{{/GM}}"
  branches {
    responseText: "Lindariel"
    nextNodeIndex: 9
    onlyOnce: true
    idRef {
      id: "59b5b6a4356564dcc10086ce:59b5bada356564dcc100881e"
    }
  }
  nodeType: ConversationNodeType_InputKeyboard
}
nodes {
  idRef {
    id: "59b5baea356564dcc1008821"
  }
  index: 9
  text: "> Full legal name: Vanya Lindariel Ikeda.\n> Birth name: Vanya Lindariel Tasarov\n> Relation: Mother of Sira Ikeda, current Director of Strategic Projects for Fuchi California.\n> Photo attached."
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "59b5b6a4356564dcc10086ce:59b5bb08356564dcc1008843"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b5bb0a356564dcc1008846"
  }
  index: 10
  text: "The attractive woman in the photo bears a marked resemblance to Sira, along with two pronounced ears."
  branches {
    responseText: ""
    nextNodeIndex: 11
    idRef {
      id: "59b5b6a4356564dcc10086ce:59b5bb9b356564dcc1008848"
    }
  }
  nodeType: ConversationNodeType_GM_Voice
  actions {
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "ss_a4_fuchi_s1-SiraPhoto"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59b5bba3356564dcc100886e"
  }
  index: 11
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Count of Alive Actors"
            args {
              call_value {
                functionName: "All Actors With Tag"
                args {
                  call_value {
                    functionName: "Get Map Item (SenseTagList)"
                    args {
                      string_value: "isArelia"
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "AllOrAny"
                    }
                    args {
                      int_value: 0
                    }
                  }
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 12
    onlyOnce: true
    idRef {
      id: "59b5b6a4356564dcc10086ce:59b5bbb1356564dcc1008870"
    }
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Count of Alive Actors"
            args {
              call_value {
                functionName: "All Actors With Tag"
                args {
                  call_value {
                    functionName: "Get Map Item (SenseTagList)"
                    args {
                      string_value: "isIsas"
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "AllOrAny"
                    }
                    args {
                      int_value: 0
                    }
                  }
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 13
    onlyOnce: true
    idRef {
      id: "59b5b6a4356564dcc10086ce:59b5bbf1356564dcc10088a8"
    }
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Count of Alive Actors"
            args {
              call_value {
                functionName: "All Actors With Tag"
                args {
                  call_value {
                    functionName: "Get Map Item (SenseTagList)"
                    args {
                      string_value: "isMasato"
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "AllOrAny"
                    }
                    args {
                      int_value: 0
                    }
                  }
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 14
    onlyOnce: true
    idRef {
      id: "59b5b6a4356564dcc10086ce:59b5bbf4356564dcc10088b4"
    }
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Count of Alive Actors"
            args {
              call_value {
                functionName: "All Actors With Tag"
                args {
                  call_value {
                    functionName: "Get Map Item (SenseTagList)"
                    args {
                      string_value: "isKora"
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "AllOrAny"
                    }
                    args {
                      int_value: 0
                    }
                  }
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 15
    onlyOnce: true
    idRef {
      id: "59b5b6a4356564dcc10086ce:59b5bbf4356564dcc10088bc"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "59b5b6a4356564dcc10086ce:59b5bbf6356564dcc10088c4"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  comment: "Reactive team check-in"
}
nodes {
  idRef {
    id: "59b5bbd2356564dcc1008873"
  }
  index: 12
  text: "That\342\200\246 isn\342\200\231t cosplay, right? Those are for real?"
  branches {
    responseText: ""
    nextNodeIndex: 11
    idRef {
      id: "59b5b6a4356564dcc10086ce:59b5bbd4356564dcc1008875"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isArelia"
}
nodes {
  idRef {
    id: "59b5b6a4356564dcc10086ce:59b5bbf1356564dcc10088aa"
  }
  index: 13
  text: "She an elf is. Back on Nippon, she a citizen could not be. The imperials her would imprison."
  branches {
    responseText: ""
    nextNodeIndex: 11
    idRef {
      id: "59b5b6a4356564dcc10086ce:59b5bbf1356564dcc10088ac"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isIsas"
}
nodes {
  idRef {
    id: "59b5b6a4356564dcc10086ce:59b5bbf4356564dcc10088b6"
  }
  index: 14
  text: "I mean, megacorps have always been free to do whatever they want. Extraterritoriality and all that. But the corps around Saito tend to be more careful. They at least make the pretense of honoring his human-only policies, no matter what they get up to behind closed doors."
  branches {
    responseText: ""
    nextNodeIndex: 11
    idRef {
      id: "59b5b6a4356564dcc10086ce:59b5bbf4356564dcc10088b8"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isMasato"
}
nodes {
  idRef {
    id: "59b5b6a4356564dcc10086ce:59b5bbf4356564dcc10088be"
  }
  index: 15
  text: "Hm. Since this was buried in the physical records, it probably doesn\342\200\231t exist in the central database and wouldn\342\200\231t show up in a search. Sira probably wants to keep it that way."
  branches {
    responseText: ""
    nextNodeIndex: 11
    idRef {
      id: "59b5b6a4356564dcc10086ce:59b5bbf4356564dcc10088c0"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isKora"
}
roots {
  nextNodeIndex: 0
  onlyOnce: true
  idRef {
    id: "59b5b6a4356564dcc10086ce:59b5b6a4356564dcc10086d2"
  }
}
roots {
  responseText: ""
  nextNodeIndex: 1
  idRef {
    id: "59b5b6a4356564dcc10086ce:59b5b723356564dcc1008731"
  }
}
