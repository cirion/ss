idRef {
  id: "59af76743565646068000f45"
}
ui_name: "ss_a4_catos_s1-Weetabrix"
nodes {
  idRef {
    id: "59af76ec3565646068000f55"
  }
  index: 0
  text: "{{GM}}He still looks dazed and slightly nauseated, but recognizes you and proffers a weak grin.{{/GM}}\n\n$(l.firstname)! Good to see you.\n\nGood to see anything\342\200\246 I was worried I was a goner."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "59af76743565646068000f45:59af79283565646068000f61"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59af792a3565646068000f64"
  }
  index: 1
  text: "How is $(story.mpa_leader)?"
  branches {
    responseText: "Dead."
    nextNodeIndex: 2
    idRef {
      id: "59af76743565646068000f45:59af79313565646068000f66"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "I have some bad news for you\342\200\246"
    nextNodeIndex: 2
    idRef {
      id: "59af76743565646068000f45:59af79313565646068000f68"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "A lot less chatty than before, I\342\200\231ll tell you that."
    nextNodeIndex: 2
    idRef {
      id: "59af76743565646068000f45:59af79313565646068000f6a"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59af795e3565646068000f6d"
  }
  index: 2
  text: "Oh, no!\n\n{{GM}}He shakes his head, more in sorrow than in disbelief.{{/GM}}\n\n$(story.mpa_leader) cared about the MPA more than anything. At least it was a good death: dying for the people you love most. I can\342\200\231t think of a better ending."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59af76743565646068000f45:59af797c3565646068000f81"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59af797d3565646068000f84"
  }
  index: 3
  text: "Hm. I suppose this means that I\342\200\231m in charge now? That\342\200\231s what $(story.mpa_leader) said, anyways.\n\nI feel a bit nervous, $(l.firstname). I\342\200\231m not a natural leader like you."
  branches {
    responseText: "You\342\200\231ll find a way."
    nextNodeIndex: 4
    idRef {
      id: "59af76743565646068000f45:59af798a3565646068000f95"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "I believe in you, Weetabrix."
    nextNodeIndex: 4
    idRef {
      id: "59af76743565646068000f45:59af79933565646068000f9a"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Oh, wow. No. No, you are not. Everyone is doomed."
    nextNodeIndex: 4
    idRef {
      id: "59af76743565646068000f45:59af79943565646068000f9c"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59af79a73565646068000f9f"
  }
  index: 4
  text: "{{GM}}He chews his lip absent-mindedly.{{/GM}}\n\nThe losses have been too great, between $(story.mpa_leader) and all the other fighters we\342\200\231ve lost to Humanis and the Protectorate.\n\nWe\342\200\231ll need to abandon Piedmont Ave. There\342\200\231s no way we can hold it any more."
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "59af76743565646068000f45:59af79b33565646068000fbb"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59af76743565646068000f45:59af79b53565646068000fbd"
  }
  index: 5
  text: "The remainder of the MPA will gather what we can carry and will join with the People\342\200\231s University in Berkeley. We\342\200\231ll help out however we can. First of all, by attacking Saito\342\200\231s troops in the Mojave to provide that distraction you need."
  branches {
    responseText: "Good."
    nextNodeIndex: 6
    idRef {
      id: "59af76743565646068000f45:59af79b53565646068000fbf"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "I really appreciate it. $(story.mpa_leader) would be proud."
    nextNodeIndex: 6
    idRef {
      id: "59af76743565646068000f45:59af79d43565646068000fdb"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "I came here to get cannon fodder, and I got cannon fodder. Mission accomplished."
    nextNodeIndex: 6
    idRef {
      id: "59af76743565646068000f45:59af79d43565646068000fdd"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59af79ef3565646068000fe0"
  }
  index: 6
  text: "Now, let\342\200\231s go rescue Tassender!"
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "59af7a003565646068001003"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59affffe356564306c005d6b"
  }
  index: 7
  text: "{{GM}}He looks cautiously around, lowering his voice to make sure nobody can overhear.{{/GM}}\n\nI heard what $(story.mpa_leader) said. Is it true? About you trying to negotiate with Amy and Humanis?"
  branches {
    responseText: "No."
    nextNodeIndex: 8
    idRef {
      id: "59af76743565646068000f45:59b00004356564306c005d6d"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "I\342\200\231m afraid so."
    nextNodeIndex: 8
    idRef {
      id: "59af76743565646068000f45:59b00031356564306c005d75"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Lotta people saying a lotta things around here."
    nextNodeIndex: 8
    idRef {
      id: "59af76743565646068000f45:59b00031356564306c005d77"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59af76743565646068000f45:59b00005356564306c005d6f"
  }
  index: 8
  text: "{{GM}}He looks disappointed, but presses on.{{/GM}}\n\nLook\342\200\246 you and I go way back. And even if we didn\342\200\231t, I know how important the struggle out there is. Beyond the borders of Piedmont Ave, even beyond Orkland. $(story.mpa_leader) can only care about this neighborhood, but that doesn\342\200\231t mean the rest of the world will just leave us alone."
  branches {
    responseText: ""
    nextNodeIndex: 9
    idRef {
      id: "59af76743565646068000f45:59b00005356564306c005d71"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b00066356564306c005da9"
  }
  index: 9
  text: "So, I\342\200\231ll do what I can. I have a few friends who have been feeling antsy, looking to move on to something new. I think I can convince them to attack the Mojave for you, keep your plan moving forwards."
  branches {
    responseText: "Good."
    nextNodeIndex: 10
    idRef {
      id: "59af76743565646068000f45:59b00074356564306c005dab"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "I really appreciate that. I promise that I\342\200\231ll look after everyone."
    nextNodeIndex: 10
    idRef {
      id: "59af76743565646068000f45:59b00074356564306c005dad"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "I came here to get cannon fodder, and I got cannon fodder. Mission accomplished."
    nextNodeIndex: 10
    idRef {
      id: "59af76743565646068000f45:59b00081356564306c005daf"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b00093356564306c005db2"
  }
  index: 10
  text: "I\342\200\231ll keep it on the down-low. You\342\200\231d better head back before $(story.mpa_leader) gets suspicious.\n\nTalk with you later!"
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "59af7a003565646068001003"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59b45029356564008b006bcf"
  }
  index: 11
  text: "{{GM}}The young troll stands bolt upright as you approach.{{/GM}}\n\n$(l.firstname)?! Holy shit\342\200\246 is that really you?"
  branches {
    responseText: "Yes."
    nextNodeIndex: 12
    idRef {
      id: "59af76743565646068000f45:59b4502b356564008b006bd1"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Nice to meet you."
    nextNodeIndex: 12
    idRef {
      id: "59af76743565646068000f45:59b45039356564008b006bd3"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Why, are you a cop? Because if you\342\200\231re a cop, you have to say so."
    nextNodeIndex: 12
    idRef {
      id: "59af76743565646068000f45:59b4503a356564008b006bd5"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_idle"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59b4505b356564008b006bd8"
  }
  index: 12
  text: "{{GM}}He eagerly sticks out his hand.{{/GM}}\n\nIt\342\200\231s me, Weetabrix!\n\nOh, I doubt you remember me, but\342\200\246 damn, it\342\200\231s great to see you again!"
  branches {
    responseText: "{{GM}}Shake his hand.{{/GM}}"
    nextNodeIndex: 13
    idRef {
      id: "59af76743565646068000f45:59b45072356564008b006c14"
    }
  }
  branches {
    responseText: "{{GM}}Leave him hanging.{{/GM}}"
    nextNodeIndex: 14
    idRef {
      id: "59af76743565646068000f45:59b45078356564008b006c1b"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b45074356564008b006c17"
  }
  index: 13
  text: "{{GM}}His face splits into a broad grin.{{/GM}}\n\nMy $(l.man)! Hell of a grip, just like I\342\200\231d expect!"
  branches {
    responseText: ""
    nextNodeIndex: 15
    idRef {
      id: "59af76743565646068000f45:59b45076356564008b006c19"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_interact"
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_interact"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59af76743565646068000f45:59b45078356564008b006c1d"
  }
  index: 14
  text: "{{GM}}He looks crestfallen, but tries to hide it, moving swiftly onward.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 15
    idRef {
      id: "59af76743565646068000f45:59b45078356564008b006c1f"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b450a1356564008b006c25"
  }
  index: 15
  text: "I grew up just a few blocks from you and Lina. When I was a little kid, I idolized the two of you! You always seemed so cool, like you knew exactly what you were doing, what you wanted.\n\nWe could tell back then that you were too big for our little hood, that you were going to move on and do great things."
  branches {
    responseText: "Good eye."
    nextNodeIndex: 16
    idRef {
      id: "59af76743565646068000f45:59b450bc356564008b006c67"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "That\342\200\231s very kind."
    nextNodeIndex: 16
    idRef {
      id: "59af76743565646068000f45:59b450bc356564008b006c69"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "I assure you, I had absolutely idea what the hell I was doing."
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Event_Influence_Masato_Self"
            }
          }
        }
      }
    }
    nextNodeIndex: 16
    idRef {
      id: "59af76743565646068000f45:59b450bd356564008b006c6b"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "I miss the old neighborhood."
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Event_Influence_Masato_Marines"
            }
          }
        }
      }
    }
    nextNodeIndex: 16
    idRef {
      id: "59af76743565646068000f45:59b450bd356564008b006c6d"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "We had a lot of good people back there."
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Event_Influence_Masato_Marines"
            }
          }
        }
      }
    }
    nextNodeIndex: 16
    idRef {
      id: "59af76743565646068000f45:59b450bd356564008b006c6f"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "You look like you turned out well yourself."
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Event_Influence_Masato_Self"
            }
          }
        }
      }
    }
    nextNodeIndex: 16
    idRef {
      id: "59af76743565646068000f45:59b450bd356564008b006c71"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b450e8356564008b006c74"
  }
  index: 16
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isMasato"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "593dd7f4356564d41f005e3c"
            }
          }
        }
      }
    }
    nextNodeIndex: 17
    idRef {
      id: "59af76743565646068000f45:59b45132356564008b006c83"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 18
    idRef {
      id: "59af76743565646068000f45:59b45132356564008b006c85"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b45145356564008b006c88"
  }
  index: 17
  text: "$(l.name), you didn\342\200\231t tell me that you were a celebrity!"
  branches {
    responseText: ""
    nextNodeIndex: 18
    idRef {
      id: "59af76743565646068000f45:59b45147356564008b006c8a"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isMasato"
}
nodes {
  idRef {
    id: "59b45158356564008b006c8d"
  }
  index: 18
  text: "I haven\342\200\231t seen you in\342\200\246 shit, it\342\200\231s been a decade at least. \n\nMy dad got jumped by some Humanis types, and ma got sick, but $(scene.mpa_leader_uncle) $(story.mpa_leader) was nice enough to take me in.\n\nSeeing you again makes me miss the old hood, though."
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "59af76743565646068000f45:59b4517b356564008b006c92"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b4517e356564008b006c95"
  }
  index: 19
  text: ""
  branches {
    responseText: "What are you doing now?"
    nextNodeIndex: 20
    onlyOnce: true
    idRef {
      id: "59af76743565646068000f45:59b45189356564008b006ce8"
    }
  }
  branches {
    responseText: "I haven\342\200\231t met many troll deckers."
    nextNodeIndex: 23
    onlyOnce: true
    idRef {
      id: "59af76743565646068000f45:59b45247356564008b006e43"
    }
  }
  branches {
    responseText: "What\342\200\231s life like in Orkland?"
    nextNodeIndex: 27
    onlyOnce: true
    idRef {
      id: "59af76743565646068000f45:59b4536c356564008b006fd1"
    }
  }
  branches {
    responseText: "Would you like to join us in Berkeley?"
    conditions {
      ops {
        functionName: "Evaluate Goal"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "Defend Pliny\'s"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 46
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "59af76743565646068000f45:59b458a1356564008b007503"
    }
  }
  branches {
    responseText: "I think you and your friends should stay here instead of coming to the Library."
    conditions {
      ops {
        functionName: "Evaluate Goal"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "Convince Weetabrix to Remain"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 50
    hideIfUnavailable: true
    idRef {
      id: "59af76743565646068000f45:59b4594c356564008b007753"
    }
  }
  branches {
    responseText: "See you later."
    nextNodeIndex: -1
    idRef {
      id: "59af76743565646068000f45:59b45b58356564008b007d48"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "59b48b29356564008b00a5b8"
          }
        }
      }
    }
  }
  comment: "Empty root"
}
nodes {
  idRef {
    id: "59b45192356564008b006ceb"
  }
  index: 20
  text: "Helping out $+(scene.mpa_leader_uncle) $(story.mpa_leader) however I can. These days, that means decking!\n\nDid you see all those turrets downstairs? They used to be light-activated, but that was unreliable and, uh, messy. I got them all wired into a local Matrix node running an off-the-shelf threat-detection system. Like, the way they didn\342\200\231t shoot you when you walked in the door? That means that it\342\200\231s working!"
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isKora"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "593dd7f4356564d41f005e3c"
            }
          }
        }
      }
    }
    nextNodeIndex: 21
    idRef {
      id: "59af76743565646068000f45:59b45195356564008b006ced"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 22
    idRef {
      id: "59af76743565646068000f45:59b45200356564008b006d4a"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59af76743565646068000f45:59b45195356564008b006cef"
  }
  index: 21
  text: "Nice work, kid! I\342\200\231m hella impressed, especially since you\342\200\231re running a solo operation. You should swing by the PU sometime and take some Matrix classes\342\200\246 or, hell, maybe teach a couple!"
  branches {
    responseText: ""
    nextNodeIndex: 22
    idRef {
      id: "59af76743565646068000f45:59b451fe356564008b006d48"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isKora"
}
nodes {
  idRef {
    id: "59b45210356564008b006d4d"
  }
  index: 22
  text: "I\342\200\231ve been dabbling in IC programming lately, making sure we can defend against any breeders who want to fuck with us.\n\nGotta say, it\342\200\231s been a lot of fun!"
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "59af76743565646068000f45:59b4522c356564008b006dab"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b45258356564008b006e46"
  }
  index: 23
  text: "{{GM}}He seems incredulous.{{/GM}}\n\nSeriously?! Everyone knows that the best deckers are trolls! What, haven\342\200\231t you met Sable?"
  branches {
    responseText: "No."
    nextNodeIndex: 24
    idRef {
      id: "59af76743565646068000f45:59b45264356564008b006e48"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "The name rings a bell."
    nextNodeIndex: 24
    idRef {
      id: "59af76743565646068000f45:59b45264356564008b006e4a"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Yes, but, uh, why don\342\200\231t you tell the rest of my team about who he is?"
    nextNodeIndex: 24
    idRef {
      id: "59af76743565646068000f45:59b45264356564008b006e4c"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b45280356564008b006e4f"
  }
  index: 24
  text: "Sable is only the hottest keyboard jockey ever to come through Orkland! He busted like five hundred OGs out of city lockup, without ever leaving his chair.\n\nBut folks around here mostly remember how he teamed up with the Hero of Halferville to take down a Shiawase train, and\342\200\246 well, a whole lot of shit went down. Look him up sometime!"
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isKora"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "593dd7f4356564d41f005e3c"
            }
          }
        }
      }
    }
    nextNodeIndex: 25
    idRef {
      id: "59af76743565646068000f45:59b45296356564008b006eb9"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 26
    idRef {
      id: "59af76743565646068000f45:59b45298356564008b006ebb"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b4529f356564008b006ebe"
  }
  index: 25
  text: "She smiles faintly but says nothing."
  branches {
    responseText: ""
    nextNodeIndex: 26
    idRef {
      id: "59af76743565646068000f45:59b452a3356564008b006ec0"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_GM_Speaker_Voice
  sourceWithTagInScene: "isKora"
}
nodes {
  idRef {
    id: "59b452b8356564008b006ec3"
  }
  index: 26
  text: "Anyways, Sable was the guy who gave me my first deck. It was a crappy Sony, but I don\342\200\231t care, it opened up a whole new world for me.\n\nI decided that I wanted to be just as cool as Sable and do whatever I could to help the people in Orkland.\n\n{{GM}}His eyes shine brightly with hero worship.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "59af76743565646068000f45:59b4535d356564008b006f9a"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b4537a356564008b007040"
  }
  index: 27
  text: "I like it here. WAY better than the other cities around here.\n\n{{GM}}He pulls a face.{{/GM}}\n\nWhenever I need to run an errand in Walnut Creek or San Mateo, it\342\200\246 well, people are constantly staring at me, everywhere I go, no matter what I\342\200\231m doing. They think that I\342\200\231m going to flip out and smash stuff up, just because I\342\200\231m tall and have horns!"
  branches {
    responseText: ""
    nextNodeIndex: 28
    idRef {
      id: "59af76743565646068000f45:59b4537e356564008b007042"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59af76743565646068000f45:59b4537e356564008b007044"
  }
  index: 28
  text: "The thing is\342\200\246 well, I want people to change and think better of trolls, right? So I feel like I need to CONSTANTLY put on a positive face and act extra-polite.\n\nBut it\342\200\231s EXHAUSTING. Walking around with a fuckin\342\200\231 stupid smile plastered on\342\200\246 And it doesn\342\200\231t seem to make a difference. If I play the part of the \342\200\234good troll\342\200\235, then they think I\342\200\231m the exception that proves the rule. If I get annoyed by traffic or bad service and let any irritation show, then they take that as proof that I was a \342\200\234bad troll\342\200\235 all along."
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isArelia"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "593dd7f4356564d41f005e3c"
            }
          }
        }
      }
    }
    nextNodeIndex: 29
    idRef {
      id: "59af76743565646068000f45:59b4537e356564008b007046"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 30
    idRef {
      id: "59af76743565646068000f45:59b453f4356564008b00704e"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59af76743565646068000f45:59b45382356564008b00704a"
  }
  index: 29
  text: "{{GM}}She nods in sympathy, smiling sadly.{{/GM}}\n\nI know EXACTLY how you feel, Weetabrix. I\342\200\231m proud of you for trying. It\342\200\231s\342\200\246 a heavy feeling in the heart, right?\n\nI wish I could take that from you. Hopefully one day things will get better."
  branches {
    responseText: ""
    nextNodeIndex: 30
    idRef {
      id: "59af76743565646068000f45:59b45382356564008b00704c"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isArelia"
}
nodes {
  idRef {
    id: "59b453f7356564008b007051"
  }
  index: 30
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isIsas"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "593dd7f4356564d41f005e3c"
            }
          }
        }
      }
    }
    nextNodeIndex: 31
    idRef {
      id: "59af76743565646068000f45:59b453fb356564008b007053"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 32
    idRef {
      id: "59af76743565646068000f45:59b45422356564008b007065"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Check for Isas"
}
nodes {
  idRef {
    id: "59af76743565646068000f45:59b453fb356564008b007055"
  }
  index: 31
  text: "Too much division there is. You the same soul as everyone else has. They their own fears cast onto you. They evil of you think, so they good themselves can believe.\n\nBut all the same are. All value have."
  branches {
    responseText: ""
    nextNodeIndex: 32
    idRef {
      id: "59af76743565646068000f45:59b453fb356564008b007057"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isIsas"
}
nodes {
  idRef {
    id: "59b45425356564008b007068"
  }
  index: 32
  text: "It just\342\200\246 it isn\342\200\231t fair! Why do I need to constantly prove myself when humans don\342\200\231t?"
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Compare Actor Race"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Race"
                }
                args {
                  int_value: 3
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Compare Actor Race"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Race"
                }
                args {
                  int_value: 4
                }
              }
            }
          }
        }
      }
    }
    nextNodeIndex: 33
    idRef {
      id: "59af76743565646068000f45:59b4543c356564008b0070e8"
    }
    comment: "PC0 is ork/troll"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Compare Actor Race"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Race"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Compare Actor Race"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Race"
                }
                args {
                  int_value: 2
                }
              }
            }
          }
        }
      }
    }
    nextNodeIndex: 36
    idRef {
      id: "59af76743565646068000f45:59b454d7356564008b0071fc"
    }
    comment: "PC0 is dwarf/elf"
  }
  branches {
    responseText: ""
    nextNodeIndex: 42
    idRef {
      id: "59af76743565646068000f45:59b454d9356564008b007220"
    }
    comment: "Default: PC0 is human"
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b45468356564008b0070eb"
  }
  index: 33
  text: "I mean, $(l.firstname), you\342\200\231ve been dealing with this shit for years more than me. Got any tips for a fellow trog?"
  branches {
    responseText: "You\342\200\231re on the right track. Keep your head down and don\342\200\231t let them get to you."
    nextNodeIndex: 34
    idRef {
      id: "59af76743565646068000f45:59b45472356564008b0070ed"
    }
  }
  branches {
    responseText: "It\342\200\231s tough for all of us. Spend time with friends and focus on your own happiness."
    nextNodeIndex: 34
    idRef {
      id: "59af76743565646068000f45:59b45488356564008b0070f4"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Whenever you think someone is giving you attitude, punch them in the face until they stay down."
    nextNodeIndex: 35
    idRef {
      id: "59af76743565646068000f45:59b4548a356564008b0070fd"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b45476356564008b0070f0"
  }
  index: 34
  text: "Okay, good to know that I wasn\342\200\231t overlooking some magical secret path to an easier life.\n\nHonestly, just knowing that I\342\200\231m walking your path makes it feel a lot better."
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "59af76743565646068000f45:59b45479356564008b0070f2"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59af76743565646068000f45:59b4548a356564008b0070ff"
  }
  index: 35
  text: "Hell yeah, that\342\200\231s the $(l.firstname) I remember!\n\nI mean, nerds like me aren\342\200\231t usually about physical violence\342\200\246 but as long as they act like I\342\200\231m a thug, maybe I should just own it!"
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "59af76743565646068000f45:59b4548a356564008b007101"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59af76743565646068000f45:59b454d7356564008b0071fe"
  }
  index: 36
  text: "Is it any better for $(l.race_plural) like you? Or do you have to play the game as well?"
  branches {
    responseText: "We get different reactions, but the round-ears will never treat us like one of them."
    nextNodeIndex: 37
    idRef {
      id: "59af76743565646068000f45:59b454d7356564008b007200"
    }
  }
  branches {
    responseText: "I\342\200\231ll be honest: trolls probably have it the worst in human-dominated society. I feel for you."
    nextNodeIndex: 38
    idRef {
      id: "59af76743565646068000f45:59b454d7356564008b007208"
    }
  }
  branches {
    responseText: "Yes, but in my case, \342\200\234the game\342\200\235 is \342\200\234kill the human\342\200\235."
    nextNodeIndex: 39
    idRef {
      id: "59af76743565646068000f45:59b454d7356564008b00720c"
    }
  }
  branches {
    responseText: "I don\342\200\231t really pay attention to that."
    nextNodeIndex: 41
    idRef {
      id: "59af76743565646068000f45:59b45835356564008b007435"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59af76743565646068000f45:59b454d7356564008b007202"
  }
  index: 37
  text: "{{GM}}He fist-bumps you.{{/GM}}\n\nSolidarity, $(story.brother). We\342\200\231ll get through this together."
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "59af76743565646068000f45:59b454d7356564008b007204"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59af76743565646068000f45:59b45521356564008b0072d7"
  }
  index: 38
  text: "I don\342\200\231t know whether to say \342\200\234thank you\342\200\235 or not. I appreciate you being straight with me, though."
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "59af76743565646068000f45:59b45521356564008b0072d9"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59af76743565646068000f45:59b454d7356564008b00720e"
  }
  index: 39
  text: "{{GM}}He grins.{{/GM}}\n\nI don\342\200\231t have much experience, but maybe you can show me sometime."
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isMasato"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "593dd7f4356564d41f005e3c"
            }
          }
        }
      }
    }
    nextNodeIndex: 40
    idRef {
      id: "59af76743565646068000f45:59b454d7356564008b007210"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "59af76743565646068000f45:59b4555a356564008b0072e5"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b45545356564008b0072e1"
  }
  index: 40
  text: "AHEM."
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "59af76743565646068000f45:59b45547356564008b0072e3"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isMasato"
}
nodes {
  idRef {
    id: "59af76743565646068000f45:59b45835356564008b007437"
  }
  index: 41
  text: "Lucky you. I wish I got to ignore this instead of live it."
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "59af76743565646068000f45:59b45835356564008b007439"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59af76743565646068000f45:59b454d9356564008b007222"
  }
  index: 42
  text: "Uh, no offense, $(l.firstname). I mean, obviously you don\342\200\231t have a problem with me\342\200\246 right?"
  branches {
    responseText: "No."
    nextNodeIndex: 43
    idRef {
      id: "59af76743565646068000f45:59b454d9356564008b007224"
    }
  }
  branches {
    responseText: "Of course not!"
    nextNodeIndex: 43
    idRef {
      id: "59af76743565646068000f45:59b454d9356564008b00722c"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Well, now that you bring it up\342\200\246"
    nextNodeIndex: 44
    idRef {
      id: "59af76743565646068000f45:59b454d9356564008b007230"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59af76743565646068000f45:59b454d9356564008b007226"
  }
  index: 43
  text: "Okay, good.\n\nIt\342\200\231s different with humans who I actually know, and who know me. They see a person. Not a troll."
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "59af76743565646068000f45:59b454d9356564008b007228"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59af76743565646068000f45:59b4587e356564008b007441"
  }
  index: 44
  text: "{{GM}}He rolls his eyes.{{/GM}}\n\nGREAT. And here I thought I\342\200\231d found the one decent human!"
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isMasato"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "593dd7f4356564d41f005e3c"
            }
          }
        }
      }
    }
    nextNodeIndex: 45
    idRef {
      id: "59af76743565646068000f45:59b4587e356564008b007443"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "59af76743565646068000f45:59b4587e356564008b00744b"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59af76743565646068000f45:59b4587e356564008b007445"
  }
  index: 45
  text: "Two!"
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "59af76743565646068000f45:59b4587e356564008b007447"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isMasato"
}
nodes {
  idRef {
    id: "59b458b2356564008b007506"
  }
  index: 46
  text: "Hell yes!\n\n{{GM}}He grows even more animated.{{/GM}}\n\nI mean, you\342\200\231re a fuckin\342\200\231 RUNNER! Do you have any idea how cool that is? We used to play at being runners in the alleys out back, and now you\342\200\231re actually doing it!"
  branches {
    responseText: ""
    nextNodeIndex: 47
    idRef {
      id: "59af76743565646068000f45:59b458b5356564008b007508"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59af76743565646068000f45:59b458b6356564008b00750a"
  }
  index: 47
  text: "And running out of an abandoned library, surrounded by metahumans with guns and computers\342\200\246 hell yeah I\342\200\231d like to get in on that!"
  branches {
    responseText: ""
    nextNodeIndex: 48
    idRef {
      id: "59af76743565646068000f45:59b458b6356564008b00750c"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59af76743565646068000f45:59b458ba356564008b007510"
  }
  index: 48
  text: "But there\342\200\231s a catch. $(story.mpa_leader) HATES the idea of anyone \342\200\234abandoning\342\200\235 the neighborhood here. Sees it as an \342\200\234all for one and one for all\342\200\235 situation."
  branches {
    responseText: ""
    nextNodeIndex: 49
    idRef {
      id: "59af76743565646068000f45:59b458ba356564008b007512"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59af76743565646068000f45:59b458bc356564008b007514"
  }
  index: 49
  text: "I know that a lot of the other folks around here would like to join forces, make one big anti-Saito union in the East Bay. But $(story.mpa_leader) won\342\200\231t hear of it.\n\nMaybe you can talk it over, try to convince $(scene.mpa_leader_him) to let us go?"
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "59af76743565646068000f45:59b458bc356564008b007516"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Persuade the MPA to Release Weetabrix"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59b4596b356564008b007756"
  }
  index: 50
  text: "Really?\n\n{{GM}}He looks crestfallen.{{/GM}}\n\nBut\342\200\246 why?! It\342\200\231s what I want! Shouldn\342\200\231t I follow my dreams?"
  branches {
    responseText: ""
    nextNodeIndex: 51
    idRef {
      id: "59af76743565646068000f45:59b45a93356564008b0078df"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b45aac356564008b0078e2"
  }
  index: 51
  text: ""
  branches {
    responseText: "{{CC}}Etiquette: Academic{{/CC}} You can learn anywhere. There\342\200\231s nothing special about a library. What\342\200\231s important is what you EXPERIENCE, and you can experience the most right here, in the heart of the action."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 18
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 52
    idRef {
      id: "59af76743565646068000f45:59b4596d356564008b007758"
    }
  }
  branches {
    responseText: "{{CC}}Charisma: $(story.Global-Skillcheck_Hard){{/CC}} I\342\200\231m really proud of you, Weetabrix. You\342\200\231re an honor to the old neighborhood. Lina and I are taking care of things up north. We need you to keep an eye on things down south. Can you do that for me, Weetabrix?"
    conditions {
      ops {
        functionName: "Compare Actor Attribute"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorAttributes"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "58a09a016666641898001ad5"
            }
            args {
              string_value: "Global-Skillcheck_Hard"
            }
          }
        }
      }
    }
    nextNodeIndex: 53
    idRef {
      id: "59af76743565646068000f45:59b459cf356564008b0078d5"
    }
  }
  branches {
    responseText: "Your $(scene.mpa_leader_uncle) needs you here."
    nextNodeIndex: 54
    onlyOnce: true
    idRef {
      id: "59af76743565646068000f45:59b45aca356564008b0079e3"
    }
  }
  branches {
    responseText: "It\342\200\231s too dangerous at the library."
    nextNodeIndex: 55
    onlyOnce: true
    idRef {
      id: "59af76743565646068000f45:59b45ad7356564008b007ac7"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 56
    idRef {
      id: "59af76743565646068000f45:59b45ae0356564008b007ad3"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Inner loop"
}
nodes {
  idRef {
    id: "59b45981356564008b007815"
  }
  index: 52
  text: "{{GM}}He looks slightly confused, but nods.{{/GM}}\n\nIf you say so\342\200\246 it would be fun to hang out with more people, but it isn\342\200\231t all about fun, is it? I\342\200\231ll be the best troll I can, right here in Orkland."
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "59af76743565646068000f45:59b45983356564008b007817"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "59b459e3356564008b0078dd"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59af76743565646068000f45:59b459cf356564008b0078d7"
  }
  index: 53
  text: "{{GM}}His chest swells with pride.{{/GM}}\n\nHell YES I can do that! I won\342\200\231t let you two down!"
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "59af76743565646068000f45:59b459cf356564008b0078d9"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "59b459e3356564008b0078dd"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59b45acf356564008b007aaa"
  }
  index: 54
  text: "I\342\200\231m a grown-ass man! And so is $(story.mpa_leader_he)! \n\n{{GM}}He sets his brow in a stubborn frown.{{/GM}}\n\nNo. Unless there\342\200\231s a much better reason, I\342\200\231m going to follow my dream."
  branches {
    responseText: ""
    nextNodeIndex: 51
    idRef {
      id: "59af76743565646068000f45:59b45ad1356564008b007aac"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59af76743565646068000f45:59b45ad7356564008b007ac9"
  }
  index: 55
  text: "Ha! No way in hell it\342\200\231s more dangerous there than it is down here. You aren\342\200\231t doing me any favors by keeping me here."
  branches {
    responseText: ""
    nextNodeIndex: 51
    idRef {
      id: "59af76743565646068000f45:59b45ad7356564008b007acb"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59af76743565646068000f45:59b45ae0356564008b007ad5"
  }
  index: 56
  text: "Never mind.Okay, good! Don\342\200\231t forget to talk with $(story.mpa_leader), this is important!"
  branches {
    responseText: ""
    nextNodeIndex: 51
    idRef {
      id: "59af76743565646068000f45:59b45ae0356564008b007ad7"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59b45b77356564008b007e1d"
  }
  index: 57
  text: "Hey, good to see you again!"
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "59af76743565646068000f45:59b45b79356564008b007e1f"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_idle"
          }
        }
      }
    }
  }
}
roots {
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "58a09a016666641898001ad5"
          }
          args {
            string_value: "a4_Catos_s1-LeaderDied"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 0
  idRef {
    id: "59af76743565646068000f45:59af76743565646068000f49"
  }
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Inside_ChewedOutByLeader"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 7
  idRef {
    id: "59af76743565646068000f45:59affff0356564306c005d68"
  }
}
roots {
  responseText: ""
  nextNodeIndex: 11
  onlyOnce: true
  idRef {
    id: "59af76743565646068000f45:59b4501c356564008b006bcc"
  }
  comment: "First visit"
}
roots {
  responseText: ""
  nextNodeIndex: 57
  idRef {
    id: "59af76743565646068000f45:59b45b6b356564008b007e1a"
  }
}
