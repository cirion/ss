idRef {
  id: "59d6fafa3565644842006e4c"
}
ui_name: "ss_a6_treasure_s1-Upstairs_Safe"
nodes {
  idRef {
    id: "59d6fb003565644842006e54"
  }
  index: 0
  text: "The safe is shut tight."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "59d6fafa3565644842006e4c:59d964633565644c47004810"
    }
  }
  nodeType: ConversationNodeType_GM_Voice
}
nodes {
  idRef {
    id: "59d964673565644c47004813"
  }
  index: 1
  text: ""
  branches {
    responseText: "{{GM}}Attempt to open the safe.{{/GM}}"
    nextNodeIndex: 2
    idRef {
      id: "59d6fafa3565644842006e4c:59d6fb1c3565644842006e5b"
    }
  }
  branches {
    responseText: "{{CC}}Spellcasting or Conjuration{{/CC}} {{GM}}Use Astral Perception to assense the safe.{{/GM}}"
    conditions {
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Compare Actor Skill"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "BaseOrCurrent"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "ActorSkills"
                }
                args {
                  int_value: 3
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 2
                }
              }
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Compare Actor Skill"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "BaseOrCurrent"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "ActorSkills"
                }
                args {
                  int_value: 7
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 2
                }
              }
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 3
    idRef {
      id: "59d6fafa3565644842006e4c:59d963fa3565644c470047ff"
    }
  }
  branches {
    responseText: "Arelia, can you assense this?"
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 7
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isArelia"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "59505a14356564f86e006023"
            }
          }
        }
      }
    }
    nextNodeIndex: 4
    hideIfUnavailable: true
    idRef {
      id: "59d6fafa3565644842006e4c:59d964c53565644c47004834"
    }
  }
  branches {
    responseText: "{{GM}}Leave.{{/GM}}"
    nextNodeIndex: -1
    idRef {
      id: "59d6fafa3565644842006e4c:59d6fb1c3565644842006e5d"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Empty root"
}
nodes {
  idRef {
    id: "59d6fb2d3565644842006e60"
  }
  index: 2
  text: "Enter code."
  branches {
    responseText: "2316"
    actions {
      ops {
        functionName: "Enable/Disable Trigger"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Trigger)"
            args {
              string_value: "59d6fbfc3565644842006e78"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    idRef {
      id: "59d6fafa3565644842006e4c:59d6fb3a3565644842006e62"
    }
  }
  nodeType: ConversationNodeType_InputNumpad
  inputMaxLength: 4
}
nodes {
  idRef {
    id: "59d964103565644c4700480c"
  }
  index: 3
  text: "The repetitive actions of human hands over the unliving steel have left traces in the astral plane. You cannot discern the exact combination, but you can tell that it includes the digits 1, 2, 3, and 6."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "59d6fafa3565644842006e4c:59d964123565644c4700480e"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_GM_Voice
}
nodes {
  idRef {
    id: "59d964d03565644c47004837"
  }
  index: 4
  text: "{{GM}}She frowns in concentration, then gives a slight shake of her head.{{/GM}}\n\nSort of.\n\n{{GM}}Her finger hovers above the digits on the safe\'s lock.{{/GM}}\n\nI\'m sensing... something from the numbers 1, 2, 3, and 6. I\'m not sure what order they would be used in, though. Sorry."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "59d6fafa3565644842006e4c:59d964d23565644c47004839"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isArelia"
}
roots {
  nextNodeIndex: 0
  idRef {
    id: "59d6fafa3565644842006e4c:59d6fafa3565644842006e50"
  }
}
