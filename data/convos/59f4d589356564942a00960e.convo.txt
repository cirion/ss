idRef {
  id: "59f4d589356564942a00960e"
}
ui_name: "ss_hub-LinaRehearsal"
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4d673356564942a0096ab"
  }
  index: 0
  text: "Okay! Masato and I will run through our lines. $(l.firstname), you keep that screen trained on us so we can check the framing and lighting."
  branches {
    responseText: "Fine."
    nextNodeIndex: 2
    idRef {
      id: "59f4d589356564942a00960e:59f4d673356564942a0096ac"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "You two look great!"
    nextNodeIndex: 2
    idRef {
      id: "59f4d589356564942a00960e:59f4d673356564942a0096ad"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Masato, keep your hands off my sister."
    nextNodeIndex: 1
    idRef {
      id: "59f4d589356564942a00960e:59f4d673356564942a0096ae"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4d673356564942a0096af"
  }
  index: 1
  text: "Ha! I think my husband would have more than a few questions for me if anything happened."
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "59f4d589356564942a00960e:59f4d673356564942a0096b0"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isMasato"
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4d673356564942a0096b1"
  }
  index: 2
  text: "Lights, tricorder\342\200\246 action!"
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
            }
            args {
              string_value: "commercial_genre"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
            }
            args {
              string_value: "Const-CommercialAction"
            }
          }
        }
      }
    }
    nextNodeIndex: 3
    idRef {
      id: "59f4d589356564942a00960e:59f4d673356564942a0096b2"
    }
    comment: "Action"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
            }
            args {
              string_value: "commercial_genre"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "58a09a016666641898001ad5"
            }
            args {
              string_value: "Const-CommercialDrama"
            }
          }
        }
      }
    }
    nextNodeIndex: 8
    idRef {
      id: "59f4d589356564942a00960e:59f4d673356564942a0096bd"
    }
    comment: "Drama"
  }
  branches {
    responseText: ""
    nextNodeIndex: 13
    idRef {
      id: "59f4d589356564942a00960e:59f4d673356564942a0096c8"
    }
    comment: "Comedy"
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Order Actor to Face Direction"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isMasato"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4d673356564942a0096b3"
  }
  index: 3
  text: "One people, one nation, one leader! All will bow before Protector-General Saito!"
  branches {
    responseText: ""
    nextNodeIndex: 4
    idRef {
      id: "59f4d589356564942a00960e:59f4d673356564942a0096b4"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Select Item on Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "AR 1 AK98"
          }
        }
      }
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isMasato"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isMasato"
              }
            }
          }
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_aiming_rifle"
          }
        }
      }
    }
    ops {
      functionName: "Play FX on Actor"
      args {
        string_value: "HongKong:General/standing_attack_rifle_fullauto"
      }
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isMasato"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4d673356564942a0096b5"
  }
  index: 4
  text: "{{GM}}She faces the camera, a finger over her lips, speaking quietly.{{/GM}}\n\nHe has the power, but we have the knowledge and skills to defeat him."
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "59f4d589356564942a00960e:59f4d673356564942a0096b6"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/crouch_idle"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isLina"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4d673356564942a0096b7"
  }
  index: 5
  text: "She sneaks up behind Masato and fakes a single powerful blow to the back of his neck. He crumples, unresisting."
  branches {
    responseText: ""
    nextNodeIndex: 6
    idRef {
      id: "59f4d589356564942a00960e:59f4d673356564942a0096b8"
    }
  }
  nodeType: ConversationNodeType_GM_Voice
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isLina"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isMasato"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Triggering Actor"
                }
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isLina"
              }
            }
          }
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_attack_killinghands_nervestrike"
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_MasatoFalls"
          }
        }
      }
      args {
        float_value: 1
      }
    }
  }
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4d673356564942a0096b9"
  }
  index: 6
  text: "Most of all, we have right on our side. We will triumph in the end, because our cause is just."
  branches {
    responseText: ""
    nextNodeIndex: 7
    idRef {
      id: "59f4d589356564942a00960e:59f4d673356564942a0096ba"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4d673356564942a0096bb"
  }
  index: 7
  text: "He regains his feet, no longer playing the part of a soldier, speaking earnestly to the camera."
  branches {
    responseText: ""
    nextNodeIndex: 22
    idRef {
      id: "59f4d589356564942a00960e:59f4d673356564942a0096bc"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_GM_Speaker_Voice
  sourceWithTagInScene: "isMasato"
  actions {
    ops {
      functionName: "Select Item on Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Fist"
          }
        }
      }
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isMasato"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isMasato"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4d673356564942a0096be"
  }
  index: 8
  text: "Where has Charlie gone? Anne, Deidre?\n\nI haven\342\200\231t seen my friends for months."
  branches {
    responseText: ""
    nextNodeIndex: 9
    idRef {
      id: "59f4d589356564942a00960e:59f4d673356564942a0096bf"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isMasato"
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isLina"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isMasato"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Triggering Actor"
                }
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isMasato"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isLina"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Triggering Actor"
                }
              }
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4d673356564942a0096c0"
  }
  index: 9
  text: "I\342\200\231ve got bad news for you. If they aren\342\200\231t humans, they\342\200\231ve been abducted by the Protectorate. "
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "59f4d589356564942a00960e:59f4d673356564942a0096c1"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4d673356564942a0096c2"
  }
  index: 10
  text: "What?! That isn\342\200\231t right! They\342\200\231re good people, dwarves and orks, just living their own lives.\n\nHow can I get them back?"
  branches {
    responseText: ""
    nextNodeIndex: 11
    idRef {
      id: "59f4d589356564942a00960e:59f4d673356564942a0096c3"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isMasato"
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4d673356564942a0096c4"
  }
  index: 11
  text: "The Protectorate won\342\200\231t just give them up, and the longer we wait, the more people they will take.\n\nIf you really care about your friends, you\342\200\231ll join the People\342\200\231s University. They\342\200\231re fighting to rescue those who have been arrested, to help ALL Californians."
  branches {
    responseText: ""
    nextNodeIndex: 12
    idRef {
      id: "59f4d589356564942a00960e:59f4d673356564942a0096c5"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4d673356564942a0096c6"
  }
  index: 12
  text: "He turns to face the camera, no longer playing a part."
  branches {
    responseText: ""
    nextNodeIndex: 22
    idRef {
      id: "59f4d589356564942a00960e:59f4d673356564942a0096c7"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_GM_Speaker_Voice
  sourceWithTagInScene: "isMasato"
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isMasato"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4d673356564942a0096c9"
  }
  index: 13
  text: "{{GM}}He assumes a haughty expression.{{/GM}}\n\nYou there, girl! I\342\200\231m General Saito, and I command you to fetch me my favorite food: miso, with a side-order of cultural oppression!"
  branches {
    responseText: ""
    nextNodeIndex: 14
    idRef {
      id: "59f4d589356564942a00960e:59f4d673356564942a0096ca"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isMasato"
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isLina"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isMasato"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Triggering Actor"
                }
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isMasato"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isLina"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Triggering Actor"
                }
              }
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4d673356564942a0096cb"
  }
  index: 14
  text: "{{GM}}She bows meekly towards him.{{/GM}}\n\nAs you say, most honored and revered and certainly respected conqueror. Nobody ever says nasty things behind your back."
  branches {
    responseText: ""
    nextNodeIndex: 15
    idRef {
      id: "59f4d589356564942a00960e:59f4d673356564942a0096cc"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Order Actor to Face Direction"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isMasato"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_cast_buff_chi"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4d673356564942a0096cd"
  }
  index: 15
  text: "{{GM}}She looks slyly at the camera and winks.{{/GM}}\n\nHe may be a general, but I\342\200\231m young, and clever, and actually give a shit about life in California."
  branches {
    responseText: ""
    nextNodeIndex: 16
    idRef {
      id: "59f4d589356564942a00960e:59f4d673356564942a0096ce"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isLina"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4d673356564942a0096cf"
  }
  index: 16
  text: "Here is your miso, sir."
  branches {
    responseText: ""
    nextNodeIndex: 17
    idRef {
      id: "59f4d589356564942a00960e:59f4d673356564942a0096d0"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isLina"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isMasato"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Triggering Actor"
                }
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isMasato"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isLina"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Triggering Actor"
                }
              }
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4d673356564942a0096d1"
  }
  index: 17
  text: "That\342\200\231s a good subject! Now I will feast upon.."
  branches {
    responseText: ""
    nextNodeIndex: 18
    idRef {
      id: "59f4d589356564942a00960e:59f4d673356564942a0096d2"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isMasato"
  actions {
    ops {
      functionName: "Order Actor to Face Direction"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isMasato"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4d673356564942a0096d3"
  }
  index: 18
  text: "Without warning, Lina sweeps his legs out from under him, sending him crashing to the ground. With the angle of the shot, it looks as if he has fallen off the edge of the roof."
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "59f4d589356564942a00960e:59f4d673356564942a0096d4"
    }
  }
  nodeType: ConversationNodeType_GM_Voice
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_attack_killinghands_kick"
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_MasatoFalls"
          }
        }
      }
      args {
        float_value: 0.5
      }
    }
  }
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4d673356564942a0096d5"
  }
  index: 19
  text: "Waaaaaaagh!"
  branches {
    responseText: ""
    nextNodeIndex: 20
    idRef {
      id: "59f4d589356564942a00960e:59f4d673356564942a0096d6"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isMasato"
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4d673356564942a0096d7"
  }
  index: 20
  text: "Looks like he\342\200\231s in the soup now."
  branches {
    responseText: ""
    nextNodeIndex: 21
    idRef {
      id: "59f4d589356564942a00960e:59f4d673356564942a0096d8"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isLina"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4d673356564942a0096d9"
  }
  index: 21
  text: "He bounds back to his feet, wiping the miso off his face and speaking earnestly into the camera."
  branches {
    responseText: ""
    nextNodeIndex: 22
    idRef {
      id: "59f4d589356564942a00960e:59f4d673356564942a0096da"
    }
  }
  nodeType: ConversationNodeType_GM_Speaker_Voice
  sourceWithTagInScene: "isMasato"
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isMasato"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4dd62356564942a0098c3"
  }
  index: 22
  text: "In these troubled times, we must all come together. Humans and metahumans, Japanese and Californians. Saito does not speak for the Imperial State, and he certainly does not speak for California."
  branches {
    responseText: ""
    nextNodeIndex: 23
    idRef {
      id: "59f4d589356564942a00960e:59f4dd62356564942a0098c5"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isMasato"
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4dd6c356564942a0098c9"
  }
  index: 23
  text: "Set California free once more. Throw off the chains of the Protectorate."
  branches {
    responseText: ""
    nextNodeIndex: 24
    idRef {
      id: "59f4d589356564942a00960e:59f4dd6c356564942a0098cb"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4dd6e356564942a0098cd"
  }
  index: 24
  text: "Support the People\342\200\231s University, or other organizations fighting the good fight in your local community."
  branches {
    responseText: ""
    nextNodeIndex: 25
    idRef {
      id: "59f4d589356564942a00960e:59f4dd6e356564942a0098cf"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isMasato"
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4dd70356564942a0098d1"
  }
  index: 25
  text: "Together we are strong. A united people can accomplish the impossible and create a better world for all of us, not just the rich and powerful."
  branches {
    responseText: ""
    nextNodeIndex: 26
    idRef {
      id: "59f4d589356564942a00960e:59f4dd70356564942a0098d3"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4dd72356564942a0098d5"
  }
  index: 26
  text: "And\342\200\246 cut!"
  branches {
    responseText: "I think we got all of that."
    nextNodeIndex: 27
    idRef {
      id: "59f4d589356564942a00960e:59f4dd72356564942a0098d7"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Great job, both of you!"
    nextNodeIndex: 27
    idRef {
      id: "59f4d589356564942a00960e:59f4f2a0356564942a00991d"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Wait\342\200\246 nobody told me this commercial was going to be *political*!"
    nextNodeIndex: 27
    idRef {
      id: "59f4d589356564942a00960e:59f4f2a1356564942a00991f"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4f29f356564942a009919"
  }
  index: 27
  text: "{{GM}}He rubs his hands together in glee.{{/GM}}\n\nThat felt GREAT! I think this is going to kill!"
  branches {
    responseText: ""
    nextNodeIndex: 28
    idRef {
      id: "59f4d589356564942a00960e:59f4f29f356564942a00991b"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isMasato"
}
nodes {
  idRef {
    id: "59f4d589356564942a00960e:59f4f2ab356564942a009923"
  }
  index: 28
  text: "Nice work, everyone! I\342\200\231ll start lining up the distribution for our livestream and prepare to handle follow-up responses.\n\nWe should be good to go by the time your next mission is done!"
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "59f544ae356564bc3b0080ac"
          }
        }
      }
    }
  }
}
roots {
  nextNodeIndex: 0
  idRef {
    id: "59f4d589356564942a00960e:59f4d673356564942a0096aa"
  }
}
