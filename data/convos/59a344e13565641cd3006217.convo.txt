idRef {
  id: "59a344e13565641cd3006217"
}
ui_name: "ss_a2_sacto_s1-Ground_Gavan"
nodes {
  idRef {
    id: "59a344f23565641cd3006223"
  }
  index: 0
  text: "The man in the office is having a heated conversation. You recognize the voice of Carli Atherford."
  branches {
    responseText: "{{CC}}Item: Voice Recorder{{/CC}} {{GM}}Record Gavan\342\200\231s voice.{{/GM}}"
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "ss_a2_sacto_s1-BlankVoiceRecorder"
            }
          }
        }
      }
    }
    nextNodeIndex: 1
    hideIfUnavailable: true
    idRef {
      id: "59a344e13565641cd3006217:59a344f33565641cd3006225"
    }
  }
  branches {
    responseText: "{{GM}}Quietly leave.{{/GM}}"
    nextNodeIndex: -1
    idRef {
      id: "59a344e13565641cd3006217:59a345053565641cd300622b"
    }
  }
  nodeType: ConversationNodeType_GM_Speaker_Voice
}
nodes {
  idRef {
    id: "59a344e13565641cd3006217:59a344f33565641cd3006227"
  }
  index: 1
  text: "Actually, since you spend all your time trying to acquire arcane artifacts, that means you aren\342\200\231t spending time wiping out the resistance. When we recruited you to do that job, we expected you to finish it."
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "59a344e13565641cd3006217:59a3451d3565641cd300622d"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Play Music"
      args {
        call_value {
          functionName: "Get Map Item (Music)"
          args {
            string_value: "HongKong_CombatGobbet"
          }
          args {
            string_value: "HongKong-Combat-Gobbet-WrapUp"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59a344e13565641cd3006217:59a3451f3565641cd300622f"
  }
  index: 2
  text: "Whatever! You should be grateful you have someone like me on your side. I\342\200\231m sure that Saito is awesome at, like, being all scowly and stuff, but his stuck-in-the-past ways are seriously cramping your guys\342\200\231 style."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59a344e13565641cd3006217:59a3451f3565641cd3006231"
    }
  }
  nodeType: ConversationNodeType_Simple
  speaker_override_id: "599a13be3565646c65003013"
}
nodes {
  idRef {
    id: "59a344e13565641cd3006217:59a345233565641cd3006235"
  }
  index: 3
  text: "It\342\200\231s just idiotic that Keiji isn\342\200\231t willing to use all the tools at his disposal. Magic is here, it\342\200\231s real, and if you leave it on the table, you\342\200\231re leaving yourself at a serious tactical disadvantage! "
  branches {
    responseText: ""
    nextNodeIndex: 4
    idRef {
      id: "59a344e13565641cd3006217:59a345233565641cd3006237"
    }
  }
  nodeType: ConversationNodeType_Simple
  speaker_override_id: "599a13be3565646c65003013"
}
nodes {
  idRef {
    id: "59a344e13565641cd3006217:59a345323565641cd3006239"
  }
  index: 4
  text: "The general knows exactly what sort of world he wishes to create, and magic does not have a role to play in it. We cannot construct a building upon a rotten foundation.\n\nThat is a metaphor. Are you familiar with those? By \342\200\234building\342\200\235, I mean our human civilization, and \342\200\234rotten foundation\342\200\235 refers to the practice of magic."
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "59a344e13565641cd3006217:59a345323565641cd300623b"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59a344e13565641cd3006217:59a345343565641cd300623d"
  }
  index: 5
  text: "The resources you wield are useful, but make no mistake: without a global Fuchi megacorp to back you up, you need us FAR more than we need you. I strongly recommend you get in line. In other words, follow our instructions."
  branches {
    responseText: ""
    nextNodeIndex: 6
    idRef {
      id: "59a344e13565641cd3006217:59a345343565641cd300623f"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59a344e13565641cd3006217:59a345353565641cd3006241"
  }
  index: 6
  text: "You should just care about results. You want to achieve absolute military supremacy, build a society of people who look like you? That\342\200\231s great! I can help you get that! Just stop nagging me about my methods. "
  branches {
    responseText: ""
    nextNodeIndex: 7
    idRef {
      id: "59a344e13565641cd3006217:59a345353565641cd3006243"
    }
  }
  nodeType: ConversationNodeType_Simple
  speaker_override_id: "599a13be3565646c65003013"
}
nodes {
  idRef {
    id: "59a344e13565641cd3006217:59a345373565641cd3006245"
  }
  index: 7
  text: "Well, I won\342\200\231t mention this to Saito, but do not mistake my silence for approval. We\342\200\231re getting off track, though."
  branches {
    responseText: ""
    nextNodeIndex: 8
    idRef {
      id: "59a344e13565641cd3006217:59a345373565641cd3006247"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59a344e13565641cd3006217:59a345383565641cd3006249"
  }
  index: 8
  text: "Right, right. The prisoner transfer. I have that high-value individual in custody. I can load him up as soon as\342\200\246"
  branches {
    responseText: ""
    nextNodeIndex: 9
    idRef {
      id: "59a344e13565641cd3006217:59a345383565641cd300624b"
    }
  }
  nodeType: ConversationNodeType_Simple
  speaker_override_id: "599a13be3565646c65003013"
}
nodes {
  idRef {
    id: "59a344e13565641cd3006217:59a3453a3565641cd300624d"
  }
  index: 9
  text: "{{GM}}A strange look crosses his face, and he cuts her off.{{/GM}}\n\nPardon me. I\342\200\231m receiving an urgent summons. We will continue this later."
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "59a344e13565641cd3006217:59a3453a3565641cd300624f"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59a344e13565641cd3006217:59a3453b3565641cd3006251"
  }
  index: 10
  text: "But don\342\200\231t you want to know\342\200\246"
  branches {
    responseText: ""
    nextNodeIndex: 11
    idRef {
      id: "59a344e13565641cd3006217:59a3453b3565641cd3006253"
    }
  }
  nodeType: ConversationNodeType_Simple
  speaker_override_id: "599a13be3565646c65003013"
}
nodes {
  idRef {
    id: "59a344e13565641cd3006217:59a3453d3565641cd3006255"
  }
  index: 11
  text: "He ends the call."
  branches {
    responseText: ""
    nextNodeIndex: 12
    idRef {
      id: "59a344e13565641cd3006217:59a3453d3565641cd3006257"
    }
  }
  nodeType: ConversationNodeType_GM_Speaker_Voice
  actions {
    ops {
      functionName: "Delete Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "59457bc3356564f03f000e44"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59a346033565641cd30062b1"
  }
  index: 12
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isValiri"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "59459bc5356564f03f000e68"
            }
          }
        }
      }
    }
    nextNodeIndex: 13
    onlyOnce: true
    idRef {
      id: "59a344e13565641cd3006217:59a346083565641cd30062b3"
    }
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isKora"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "59459bc5356564f03f000e68"
            }
          }
        }
      }
    }
    nextNodeIndex: 14
    onlyOnce: true
    idRef {
      id: "59a344e13565641cd3006217:59a3462d3565641cd30062c3"
    }
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isIsao"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "59459bc5356564f03f000e68"
            }
          }
        }
      }
    }
    nextNodeIndex: 15
    onlyOnce: true
    idRef {
      id: "59a344e13565641cd3006217:59a3462f3565641cd30062cf"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 16
    onlyOnce: true
    idRef {
      id: "59a344e13565641cd3006217:59a3462f3565641cd30062d7"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Reactive loop"
}
nodes {
  idRef {
    id: "59a3460a3565641cd30062b6"
  }
  index: 13
  text: "AAAAAARGH. We almost had it!"
  branches {
    responseText: ""
    nextNodeIndex: 12
    idRef {
      id: "59a344e13565641cd3006217:59a3460c3565641cd30062b8"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isValiri"
}
nodes {
  idRef {
    id: "59a344e13565641cd3006217:59a3462d3565641cd30062c5"
  }
  index: 14
  text: "Another few seconds and we might have heard the location where Tassender is being held."
  branches {
    responseText: ""
    nextNodeIndex: 12
    idRef {
      id: "59a344e13565641cd3006217:59a3462d3565641cd30062c7"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isKora"
}
nodes {
  idRef {
    id: "59a344e13565641cd3006217:59a3462f3565641cd30062d1"
  }
  index: 15
  text: "This frustrating is. But we the answer will find."
  branches {
    responseText: ""
    nextNodeIndex: 12
    idRef {
      id: "59a344e13565641cd3006217:59a3462f3565641cd30062d3"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isIsao"
}
nodes {
  idRef {
    id: "59a344e13565641cd3006217:59a3462f3565641cd30062d9"
  }
  index: 16
  text: "He appears focused, but you do not hear any other voice or see another active screen. Either he\342\200\231s unusually dedicated to blowing off Carli, or he\342\200\231s engaged in a non-vocal form of communication."
  branches {
    responseText: ""
    nextNodeIndex: 17
    idRef {
      id: "59a344e13565641cd3006217:59ab7c673565648c10006025"
    }
  }
  nodeType: ConversationNodeType_GM_Speaker_Voice
  actions {
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "59a3466c3565641cd300630a"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59ab7c6a3565648c10006028"
  }
  index: 17
  text: "You hear a notification from the voice recorder. It has successfully captured the conversation between Gavan and Carli."
  nodeType: ConversationNodeType_GM_Voice
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:ui"
          }
          args {
            string_value: "roundsuccess"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Stop Music"
    }
  }
}
roots {
  nextNodeIndex: 0
  idRef {
    id: "59a344e13565641cd3006217:59a344e13565641cd300621b"
  }
}
