idRef {
  id: "59d56f80643431810bc80e60"
}
ui_name: "ss_a7_space_s1-Command_Terminal"
nodes {
  idRef {
    id: "59d56f9c643431810bc80e6c"
  }
  index: 0
  text: "> Awaiting optical identification for manual override."
  branches {
    responseText: ""
    nextNodeIndex: 1
    onlyOnce: true
    idRef {
      id: "59d56f80643431810bc80e60:59d56fb6643431810bc80e73"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 6
    idRef {
      id: "59d56f80643431810bc80e60:59d56fb7643431810bc80e75"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59d56fba643431810bc80e78"
  }
  index: 1
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isArelia"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "5934d87635656440210023d7"
            }
          }
        }
      }
    }
    nextNodeIndex: 2
    onlyOnce: true
    idRef {
      id: "59d56f80643431810bc80e60:59d56fc8643431810bc80e82"
    }
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isKora"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "5934d87635656440210023d7"
            }
          }
        }
      }
    }
    nextNodeIndex: 3
    onlyOnce: true
    idRef {
      id: "59d56f80643431810bc80e60:59d56fd3643431810bc80e92"
    }
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isMasato"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "5934d87635656440210023d7"
            }
          }
        }
      }
    }
    nextNodeIndex: 4
    onlyOnce: true
    idRef {
      id: "59d56f80643431810bc80e60:59d56fd5643431810bc80e9e"
    }
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isIsas"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "5934d87635656440210023d7"
            }
          }
        }
      }
    }
    nextNodeIndex: 5
    onlyOnce: true
    idRef {
      id: "59d56f80643431810bc80e60:59d56fd5643431810bc80ea6"
    }
  }
  branches {
    responseText: ""
    actions {
      ops {
        functionName: "Set Goal Status"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "Acquire Optical Identification"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 6
    idRef {
      id: "59d56f80643431810bc80e60:59d56fd6643431810bc80eae"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  comment: "Crew reactions"
}
nodes {
  idRef {
    id: "59d56fc9643431810bc80e85"
  }
  index: 2
  text: "Optical? As in\342\200\246"
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "59d56f80643431810bc80e60:59d56fcb643431810bc80e87"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isArelia"
}
nodes {
  idRef {
    id: "59d56f80643431810bc80e60:59d56fd3643431810bc80e94"
  }
  index: 3
  text: "Oh, no\342\200\246"
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "59d56f80643431810bc80e60:59d56fd3643431810bc80e96"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isKora"
}
nodes {
  idRef {
    id: "59d56f80643431810bc80e60:59d56fd5643431810bc80ea0"
  }
  index: 4
  text: "Well, there\342\200\231s nothing else for it."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "59d56f80643431810bc80e60:59d56fd5643431810bc80ea2"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isMasato"
}
nodes {
  idRef {
    id: "59d56f80643431810bc80e60:59d56fd5643431810bc80ea8"
  }
  index: 5
  text: "We the head must retrieve. No other way exists."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "59d56f80643431810bc80e60:59d56fd5643431810bc80eaa"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isIsas"
}
nodes {
  idRef {
    id: "59d5702d643431810bc80eca"
  }
  index: 6
  text: ""
  branches {
    responseText: "{{GM}}Hold Gavan\342\200\231s head up to the sensors.{{/GM}}"
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "ss_a7_space_s1-GavanHead"
            }
          }
        }
      }
    }
    nextNodeIndex: 7
    hideIfUnavailable: true
    idRef {
      id: "59d56f80643431810bc80e60:59d571b2643431810bc8109a"
    }
  }
  branches {
    responseText: "{{GM}}Leave.{{/GM}}"
    nextNodeIndex: -1
    idRef {
      id: "59d56f80643431810bc80e60:59d571c7643431810bc8109c"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Root"
}
nodes {
  idRef {
    id: "59d571e4643431810bc810d9"
  }
  index: 7
  text: "> Override acknowledged.\n> Welcome back, Gavan Morgan.\n> Superuser access granted."
  branches {
    responseText: ""
    nextNodeIndex: 8
    idRef {
      id: "59d56f80643431810bc80e60:59d571e6643431810bc810db"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59d57218643431810bc81120"
  }
  index: 8
  text: ""
  branches {
    responseText: "{{GM}}Modify target.{{/GM}}"
    nextNodeIndex: 9
    onlyOnce: true
    idRef {
      id: "59d56f80643431810bc80e60:59d57236643431810bc81142"
    }
  }
  branches {
    responseText: "{{GM}}Disable self destruct sequence.{{/GM}}"
    nextNodeIndex: 12
    onlyOnce: true
    idRef {
      id: "59d56f80643431810bc80e60:59d572c3643431810bc8120b"
    }
  }
  branches {
    responseText: "{{GM}}Log off.{{/GM}}"
    nextNodeIndex: -1
    idRef {
      id: "59d56f80643431810bc80e60:59d57327643431810bc812dc"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Inner loop"
}
nodes {
  idRef {
    id: "59d57238643431810bc81145"
  }
  index: 9
  text: "> Current target: 41.408982, -122.194926.\n> Friendly name: Mount Shasta.\n> Enter new target."
  branches {
    responseText: "38.516103, -121.395801"
    nextNodeIndex: 10
    idRef {
      id: "59d56f80643431810bc80e60:59d5723a643431810bc81147"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59d57279643431810bc8116d"
  }
  index: 10
  text: "> Target accepted. Recalculating sequence\342\200\246"
  branches {
    responseText: ""
    nextNodeIndex: 11
    idRef {
      id: "59d56f80643431810bc80e60:59d5727b643431810bc8116f"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Redirect Launch Target"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "59d57304643431810bc812ae"
          }
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:ui"
          }
          args {
            string_value: "nextstage"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59d56f80643431810bc80e60:59d57299643431810bc811a4"
  }
  index: 11
  text: "> Launch trajectory will be reached in 10 minutes.\n> Maintain proximity during manual target override."
  branches {
    responseText: ""
    nextNodeIndex: 8
    idRef {
      id: "59d56f80643431810bc80e60:59d57299643431810bc811a6"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59d572c5643431810bc8120e"
  }
  index: 12
  text: "> Error: Destruct command is irreversible. Prepare for life-ending procedures."
  branches {
    responseText: ""
    nextNodeIndex: 8
    idRef {
      id: "59d56f80643431810bc80e60:59d572c7643431810bc81210"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  nextNodeIndex: 0
  idRef {
    id: "59d56f80643431810bc80e60:59d56f80643431810bc80e64"
  }
}
speaker_override_id: "55897a5a613464581a001ad8"
