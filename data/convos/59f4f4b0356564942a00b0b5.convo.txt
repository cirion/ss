idRef {
  id: "59f4f4b0356564942a00b0b5"
}
ui_name: "ss_hub-RickCommercial"
nodes {
  idRef {
    id: "59f4f4c1356564942a00b0c1"
  }
  index: 0
  text: "$(l.name)! We\342\200\231ve got a problem!"
  branches {
    responseText: "Of COURSE we do."
    nextNodeIndex: 1
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4f4cb356564942a00b0c3"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "I\342\200\231m sure we can solve it."
    nextNodeIndex: 1
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4f4ce356564942a00b0c9"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "I can stop taking BTLs any time I want to!"
    nextNodeIndex: 1
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4f4ce356564942a00b0cb"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59f4f4b0356564942a00b0b5:59f4f4cc356564942a00b0c5"
  }
  index: 1
  text: "A huge order for weapons just came in, to support a major action in Southern California. Lina is all tied up.\n\nBut we\342\200\231ve already started transmitting for the livestream. There\342\200\231s no time to waste!\n\n$(l.name), you need to take Lina\342\200\231s role!"
  branches {
    responseText: "Oh no."
    nextNodeIndex: 2
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4f4cc356564942a00b0c7"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Well, if you insist\342\200\246"
    nextNodeIndex: 2
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4f4dd356564942a00b0cf"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "I know how this goes. Soon my teeth will fall out, and I\342\200\231ll discover that I\342\200\231m naked in school\342\200\246"
    nextNodeIndex: 2
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4f4de356564942a00b0d1"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59f4f4b0356564942a00b0b5:59f4f4e0356564942a00b0d3"
  }
  index: 2
  text: "{{GM}}He flashes you a thumbs-up.{{/GM}}\n\nYou\342\200\231ll be great, $(l.name)! I believe in you."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4f4e0356564942a00b0d5"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isMasato"
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isMasato"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59f4f4b0356564942a00b0b5:59f4f4ff356564942a00b0ea"
  }
  index: 3
  text: "And: Action!"
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
            }
            args {
              string_value: "commercial_genre"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
            }
            args {
              string_value: "Const-CommercialAction"
            }
          }
        }
      }
    }
    nextNodeIndex: 4
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4f4ff356564942a00b0ec"
    }
    comment: "Action"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
            }
            args {
              string_value: "commercial_genre"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "58a09a016666641898001ad5"
            }
            args {
              string_value: "Const-CommercialDrama"
            }
          }
        }
      }
    }
    nextNodeIndex: 7
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4f694356564942a00b250"
    }
    comment: "Drama"
  }
  branches {
    responseText: ""
    nextNodeIndex: 9
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4f696356564942a00b259"
    }
    comment: "Default: Comedy"
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Order Actor to Face Direction"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isMasato"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59f4f4b0356564942a00b0b5:59f4f610356564942a00b123"
  }
  index: 4
  text: "One people, one nation, one leader! All will bow before Protector-General Saito!"
  branches {
    responseText: "\342\200\234He has the power, but we have the knowledge and skills to defeat him.\342\200\235"
    actions {
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "58a09a016666641898001ad5"
            }
            args {
              string_value: "Hub-QuestCommercialCorrectLines"
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 5
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4f610356564942a00b125"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "\342\200\234Guns may seem scary, but they\342\200\231re no match for the greatest weapon of all: Love.\342\200\235"
    nextNodeIndex: 5
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4f6e1356564942a00b27f"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "\342\200\234They have no chance to survive make their time.\342\200\235 "
    nextNodeIndex: 5
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4f6e1356564942a00b281"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isMasato"
  actions {
    ops {
      functionName: "Select Item on Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "AR 1 AK98"
          }
        }
      }
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isMasato"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isMasato"
              }
            }
          }
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_aiming_rifle"
          }
        }
      }
    }
    ops {
      functionName: "Play FX on Actor"
      args {
        string_value: "HongKong:General/standing_attack_rifle_fullauto"
      }
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isMasato"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isRick"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Triggering Actor"
                }
              }
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59f4f4b0356564942a00b0b5:59f4f6dc356564942a00b27b"
  }
  index: 5
  text: "You \342\200\234sneak\342\200\235 up behind Masato and pretend to\342\200\246"
  branches {
    responseText: "{{GM}}Stab him in the back.{{/GM}}"
    actions {
      ops {
        functionName: "Play Animation From Manifest"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Animation)"
            args {
              string_value: "HongKong:General/standing_attack_melee1h_handrazor"
            }
          }
        }
      }
    }
    nextNodeIndex: 6
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4f6dc356564942a00b27d"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "{{GM}}Knock him out with a jab to the neck.{{/GM}}"
    actions {
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "58a09a016666641898001ad5"
            }
            args {
              string_value: "Hub-QuestCommercialCorrectLines"
            }
          }
        }
        args {
          int_value: 1
        }
      }
      ops {
        functionName: "Play Animation From Manifest"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Animation)"
            args {
              string_value: "HongKong:General/standing_attack_killinghands_nervestrike"
            }
          }
        }
      }
    }
    nextNodeIndex: 6
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4f6eb356564942a00b285"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "{{GM}}Push him off the side of the building.{{/GM}}"
    actions {
      ops {
        functionName: "Play Animation From Manifest"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Animation)"
            args {
              string_value: "HongKong:General/standing_cast_fireball"
            }
          }
        }
      }
    }
    nextNodeIndex: 6
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4f6eb356564942a00b287"
    }
  }
  nodeType: ConversationNodeType_GM_Voice
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/crouch_idle"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isMasato"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Triggering Actor"
                }
              }
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59f4f4b0356564942a00b0b5:59f4f6f1356564942a00b289"
  }
  index: 6
  text: "He goes down. You turn to face the camera."
  branches {
    responseText: "\342\200\234All will fall before us. We\342\200\231re the People\342\200\231s University, and we\342\200\231re the worst nightmare of the Protectorate.\342\200\235"
    nextNodeIndex: 12
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4f6f1356564942a00b28b"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "\342\200\234We have right on our side. We will triumph in the end, because our cause is just.\342\200\235"
    actions {
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "58a09a016666641898001ad5"
            }
            args {
              string_value: "Hub-QuestCommercialCorrectLines"
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 12
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4f6f3356564942a00b28d"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "\342\200\234Oops!! Did I do that?!\342\200\235"
    nextNodeIndex: 12
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4f6f3356564942a00b28f"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_GM_Voice
  actions {
    ops {
      functionName: "Select Item on Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Fist"
          }
        }
      }
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isMasato"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_MasatoFalls"
          }
        }
      }
      args {
        float_value: 1
      }
    }
  }
}
nodes {
  idRef {
    id: "59f4f4b0356564942a00b0b5:59f4f694356564942a00b252"
  }
  index: 7
  text: "Where has Charlie gone? Anne, Deidre?\n\nI haven\342\200\231t seen my friends for months."
  branches {
    responseText: "They\342\200\231re probably lying dead in a ditch somewhere."
    nextNodeIndex: 8
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4f694356564942a00b254"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "I\342\200\231ve got bad news for you. If they aren\342\200\231t humans, they\342\200\231ve been abducted by the Protectorate. "
    actions {
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "58a09a016666641898001ad5"
            }
            args {
              string_value: "Hub-QuestCommercialCorrectLines"
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 8
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4fa3d356564942a00b4de"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "They went out to buy cigarettes."
    nextNodeIndex: 8
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4fa3d356564942a00b4e0"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "58a09a016666641898001ad5"
          }
          args {
            string_value: "Hub-QuestCommercialCorrectLines"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isMasato"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Triggering Actor"
                }
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isMasato"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
  comment: "Freebie point here for parity with the other commercial types"
}
nodes {
  idRef {
    id: "59f4f4b0356564942a00b0b5:59f4fa3b356564942a00b4da"
  }
  index: 8
  text: "What?! That isn\342\200\231t right! They\342\200\231re good people, dwarves and orks, just living their own lives.\n\nHow can I get them back?"
  branches {
    responseText: "The Protectorate won\342\200\231t just give them up, and the longer we wait, the more people they will take. If you really care about your friends, you\342\200\231ll join the People\342\200\231s University. They\342\200\231re fighting to rescue those who have been arrested, to help ALL Californians."
    actions {
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "58a09a016666641898001ad5"
            }
            args {
              string_value: "Hub-QuestCommercialCorrectLines"
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 12
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4fa3b356564942a00b4dc"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "When tragedy strikes, we need to offer up our thoughts and prayers. Accept the horrible things that have happened, express our sorrow to those who have been harmed, and hope that nothing so bad ever occurs again."
    nextNodeIndex: 12
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4fa41356564942a00b4e4"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "There\342\200\231s only one realistic solution: cloning. The technology is in its infancy, but the People\342\200\231s University stands at the threshold of creating copies of your lost loved ones. Come join them and help advance their important research."
    nextNodeIndex: 12
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4fa41356564942a00b4e6"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59f4f4b0356564942a00b0b5:59f4f696356564942a00b25b"
  }
  index: 9
  text: "{{GM}}He assumes a haughty expression.{{/GM}}\n\nYou there, $(story.boy)! I\342\200\231m General Saito, and I command you to fetch me my favorite food: miso, with a side-order of cultural oppression!"
  branches {
    responseText: "{{GM}}Silently bring him the soup.{{/GM}}"
    nextNodeIndex: 10
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4f696356564942a00b25d"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "{{GM}}Respectfully bring him the soup.{{/GM}}"
    nextNodeIndex: 10
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4faef356564942a00b525"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "{{GM}}Subversively bring him the soup.{{/GM}}"
    actions {
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "58a09a016666641898001ad5"
            }
            args {
              string_value: "Hub-QuestCommercialCorrectLines"
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 10
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4faef356564942a00b527"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isMasato"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Triggering Actor"
                }
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isMasato"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59f4f4b0356564942a00b0b5:59f4fa64356564942a00b4e8"
  }
  index: 10
  text: "That\342\200\231s a good subject! Now I will feast upon.."
  branches {
    responseText: "{{GM}}Sucker-punch him in the face.{{/GM}}"
    actions {
      ops {
        functionName: "Play Animation From Manifest"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Animation)"
            args {
              string_value: "HongKong:General/standing_attack_unarmed_magicpunch"
            }
          }
        }
      }
    }
    nextNodeIndex: 11
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4fa64356564942a00b4ea"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "{{GM}}Sweep his legs out from under him.{{/GM}}"
    actions {
      ops {
        functionName: "Play Animation From Manifest"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Animation)"
            args {
              string_value: "HongKong:General/standing_attack_killinghands_kick"
            }
          }
        }
      }
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "58a09a016666641898001ad5"
            }
            args {
              string_value: "Hub-QuestCommercialCorrectLines"
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 11
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4fa64356564942a00b4ec"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "{{GM}}Dump the bowl of soup over his head.{{/GM}}"
    nextNodeIndex: 11
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4fa64356564942a00b4ee"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Order Actor to Face Direction"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isMasato"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59f4f4b0356564942a00b0b5:59f4fafa356564942a00b52d"
  }
  index: 11
  text: "Waaaaaaagh!"
  branches {
    responseText: "And so all of our enemies shall fall."
    nextNodeIndex: 12
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4fafa356564942a00b52f"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Kids, don\342\200\231t try this at home."
    nextNodeIndex: 12
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4fafa356564942a00b531"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Looks like he\342\200\231s in the soup now."
    actions {
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "58a09a016666641898001ad5"
            }
            args {
              string_value: "Hub-QuestCommercialCorrectLines"
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 12
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4fafa356564942a00b533"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Event_MasatoFalls"
          }
        }
      }
      args {
        float_value: 0.5
      }
    }
  }
}
nodes {
  idRef {
    id: "59f4fc5c356564942a00b688"
  }
  index: 12
  text: "{{GM}}No longer playing a role, Masato looks into the camera.{{/GM}}\n\nIn these troubled times, we must all come together. Humans and metahumans, Japanese and Californians. Saito does not speak for the Imperial State, and he certainly does not speak for California."
  branches {
    responseText: "\342\200\234Set California free once more. Throw off the chains of the Protectorate.\342\200\235"
    actions {
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "58a09a016666641898001ad5"
            }
            args {
              string_value: "Hub-QuestCommercialCorrectLines"
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 13
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4fc5e356564942a00b68a"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "\342\200\234We should all cooperate. It\342\200\231s the right thing to do.\342\200\235"
    nextNodeIndex: 13
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4fc6d356564942a00b6d2"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "\342\200\234I mean, have you seen the other side? They\342\200\231re awful!\342\200\235"
    nextNodeIndex: 13
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4fc6d356564942a00b6d4"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isMasato"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isRick"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Triggering Actor"
                }
              }
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59f4f4b0356564942a00b0b5:59f4fc5f356564942a00b68c"
  }
  index: 13
  text: "Support the People\342\200\231s University, or other organizations fighting the good fight in your local community."
  branches {
    responseText: "\342\200\234An avalanche starts with a single stone. We will start a landslide that will wipe Saito from the face of the planet.\342\200\235"
    nextNodeIndex: 14
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4fc5f356564942a00b68e"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "\342\200\234Together we are strong. A united people can accomplish the impossible and create a better world for all of us, not just the rich and powerful.\342\200\235"
    actions {
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "58a09a016666641898001ad5"
            }
            args {
              string_value: "Hub-QuestCommercialCorrectLines"
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 14
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4fc75356564942a00b6d8"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "\342\200\234But mostly the People\342\200\231s University. I mean, just look at us! Have you seen two better-looking people in your life? I know you want to get with this. Aw yeah.\342\200\235"
    nextNodeIndex: 14
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4fc76356564942a00b6da"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isRick"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Triggering Actor"
                }
              }
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59f4f4b0356564942a00b0b5:59f4fc78356564942a00b6dc"
  }
  index: 14
  text: "And\342\200\246 cut!"
  branches {
    responseText: ""
    nextNodeIndex: 15
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4fc78356564942a00b6de"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59f4f4b0356564942a00b0b5:59f4fc7f356564942a00b6e0"
  }
  index: 15
  text: "Nice working with you in another venue, $(l.name)! I think that went pretty well, considering the circumstances."
  branches {
    responseText: ""
    nextNodeIndex: 16
    idRef {
      id: "59f4f4b0356564942a00b0b5:59f4fc7f356564942a00b6e2"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isMasato"
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isMasato"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59f4f4b0356564942a00b0b5:59f4fc80356564942a00b6e4"
  }
  index: 16
  text: "Wow, traffic is off the charts! Decent audience on the initial livestream, and it looks like people are picking it up and rebroadcasting. You might have a hit on your hands here, $(l.name)."
  nodeType: ConversationNodeType_Simple
  comment: "TODO: Trigger to wrap up."
}
roots {
  nextNodeIndex: 0
  idRef {
    id: "59f4f4b0356564942a00b0b5:59f4f4b0356564942a00b0b9"
  }
}
