idRef {
  id: "5998fac3356564248b002e59"
}
ui_name: "ss_a2_piedmont_s1-Shavarus_Greeting"
nodes {
  idRef {
    id: "5998fb1d356564248b002e65"
  }
  index: 0
  text: "So the timid have come once more.\n\n{{GM}}The figure stares at you balefully.{{/GM}}\n\nThere will be no place for weak $(l.race_plural) like you in the future to come. You must be cleansed to make way for the worthy."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "5998fac3356564248b002e59:5998fb1f356564248b002e67"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5998fb21356564248b002e6a"
  }
  index: 1
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isArelia"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "593cb854356564141a003685"
            }
          }
        }
      }
    }
    nextNodeIndex: 2
    onlyOnce: true
    idRef {
      id: "5998fac3356564248b002e59:5998fb3c356564248b002e6c"
    }
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isDesorn"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "593cb854356564141a003685"
            }
          }
        }
      }
    }
    nextNodeIndex: 4
    onlyOnce: true
    idRef {
      id: "5998fac3356564248b002e59:5998fb47356564248b002e86"
    }
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isKora"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "593cb854356564141a003685"
            }
          }
        }
      }
    }
    nextNodeIndex: 6
    onlyOnce: true
    idRef {
      id: "5998fac3356564248b002e59:5998fb4b356564248b002e98"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 9
    idRef {
      id: "5998fac3356564248b002e59:5998fb56356564248b002ea4"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Reactive loop."
}
nodes {
  idRef {
    id: "5998fb3d356564248b002e6f"
  }
  index: 2
  text: "There\342\200\231s been too much cleansing already!"
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "5998fac3356564248b002e59:5998fb3f356564248b002e71"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isArelia"
}
nodes {
  idRef {
    id: "5998fac3356564248b002e59:5998fb3f356564248b002e73"
  }
  index: 3
  text: "And you are even weaker. Such a shame.\n\nYou have the potential for greatness, but you squander your gifts, bestowing them on the unworthy.\n\nKilling you will significantly aid our cause."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "5998fac3356564248b002e59:5998fb42356564248b002e77"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isArelia"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Triggering Actor"
                }
              }
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5998fac3356564248b002e59:5998fb47356564248b002e88"
  }
  index: 4
  text: "All of your attacks failed to stop Saito, and they won\'t stop us. Violence isn\342\200\231t the answer."
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "5998fac3356564248b002e59:5998fb47356564248b002e8a"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isDesorn"
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isDesorn"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Triggering Actor"
                }
              }
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5998fac3356564248b002e59:5998fb47356564248b002e8c"
  }
  index: 5
  text: "Violence is the ONLY answer. It is the only way to end the argument, for who can reply after death?"
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "5998fac3356564248b002e59:5998fb47356564248b002e8e"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5998fac3356564248b002e59:5998fb4b356564248b002e9a"
  }
  index: 6
  text: "I thought you were dead?"
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isMasato"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "593cb854356564141a003685"
            }
          }
        }
      }
    }
    nextNodeIndex: 7
    idRef {
      id: "5998fac3356564248b002e59:5998fb4b356564248b002e9c"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 8
    idRef {
      id: "5998fac3356564248b002e59:5998fc0b356564248b002ebc"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isKora"
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isKora"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Triggering Actor"
                }
              }
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5998fac3356564248b002e59:5998fb4b356564248b002e9e"
  }
  index: 7
  text: "I could have sworn that somebody killed you years ago."
  branches {
    responseText: ""
    nextNodeIndex: 8
    idRef {
      id: "5998fac3356564248b002e59:5998fb4b356564248b002ea0"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isMasato"
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Nearest Tagged Actor to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isMasato"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Triggering Actor"
                }
              }
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5998fc11356564248b002ebf"
  }
  index: 8
  text: "He smiles menacingly but makes no reply."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "5998fac3356564248b002e59:5998fc21356564248b002ec4"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_GM_Speaker_Voice
}
nodes {
  idRef {
    id: "5998fac3356564248b002e59:5998fb56356564248b002ea6"
  }
  index: 9
  text: ""
  branches {
    responseText: "Who are you? Why are you here?"
    nextNodeIndex: 10
    onlyOnce: true
    idRef {
      id: "5998fac3356564248b002e59:5998fb56356564248b002ea8"
    }
  }
  branches {
    responseText: "We just want Wilco\342\200\231s credentials."
    nextNodeIndex: 12
    onlyOnce: true
    idRef {
      id: "5998fac3356564248b002e59:5998fcc2356564248b002f44"
    }
  }
  branches {
    responseText: "This doesn\342\200\231t need to end in bloodshed."
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Event_Influence_Arelia_Universal"
            }
          }
        }
      }
    }
    nextNodeIndex: 13
    idRef {
      id: "5998fac3356564248b002e59:5998fcf2356564248b002f86"
    }
  }
  branches {
    responseText: "All right, let\342\200\231s do this! {{GM}}Attack.{{/GM}}"
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "Event_Influence_Arelia_Universal"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    idRef {
      id: "5998fac3356564248b002e59:5998fcf4356564248b002f88"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
        }
      }
    }
  }
  comment: "Empty interrogation loop"
}
nodes {
  idRef {
    id: "5998fac3356564248b002e59:5998fb56356564248b002eaa"
  }
  index: 10
  text: "I was the first. I saw the light, long before Saito\342\200\231s troops struck. I alone stood against the tide, I alone fought while they were still vulnerable."
  branches {
    responseText: ""
    nextNodeIndex: 11
    idRef {
      id: "5998fac3356564248b002e59:5998fb56356564248b002eac"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5998fac3356564248b002e59:5998fc90356564248b002f31"
  }
  index: 11
  text: "For my efforts, I was killed, martyred to the cause.\n\nBut now, in the hour of greatest need, I have returned.\n\nI will finish the work I started, wipe Saito from the earth, and ensure that the strongest of the metahumans will survive."
  branches {
    responseText: ""
    nextNodeIndex: 9
    idRef {
      id: "5998fac3356564248b002e59:5998fc90356564248b002f33"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5998fcd5356564248b002f6d"
  }
  index: 12
  text: "You rats. You scurry, and infiltrate, and gnaw at the edges. You do not stand tall and face your enemy, accept the blows he sends your way.\n\nYou are not worthy to live."
  branches {
    responseText: ""
    nextNodeIndex: 9
    idRef {
      id: "5998fac3356564248b002e59:5998fcd7356564248b002f6f"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5998fcfe356564248b002f8b"
  }
  index: 13
  text: "It always ends in bloodshed. It is the only ending."
  nodeType: ConversationNodeType_Simple
}
roots {
  nextNodeIndex: 0
  idRef {
    id: "5998fac3356564248b002e59:5998fac3356564248b002e5d"
  }
}
