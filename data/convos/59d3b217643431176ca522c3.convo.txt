idRef {
  id: "59d3b217643431176ca522c3"
}
ui_name: "ss_a7_space_s1-Cargo_Arrival"
nodes {
  idRef {
    id: "59d3b55d643431176ca522cf"
  }
  index: 0
  text: "Your feet find their footing as you adjust to the centrifugal force of the rotating station. Taking a deep breath, you survey the surroundings."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "59d3b217643431176ca522c3:59d3b572643431176ca522d6"
    }
  }
  nodeType: ConversationNodeType_GM_Voice
}
nodes {
  idRef {
    id: "59d3b574643431176ca522d9"
  }
  index: 1
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isIsao"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "59592f0b356564e833005f89"
            }
          }
        }
      }
    }
    nextNodeIndex: 2
    onlyOnce: true
    idRef {
      id: "59d3b217643431176ca522c3:59d3b57a643431176ca522db"
    }
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isMasato"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "59592f0b356564e833005f89"
            }
          }
        }
      }
    }
    nextNodeIndex: 3
    onlyOnce: true
    idRef {
      id: "59d3b217643431176ca522c3:59d3b583643431176ca522eb"
    }
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isKora"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "59592f0b356564e833005f89"
            }
          }
        }
      }
    }
    nextNodeIndex: 4
    onlyOnce: true
    idRef {
      id: "59d3b217643431176ca522c3:59d3b585643431176ca522f7"
    }
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isArelia"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "59592f0b356564e833005f89"
            }
          }
        }
      }
    }
    nextNodeIndex: 5
    onlyOnce: true
    idRef {
      id: "59d3b217643431176ca522c3:59d3b585643431176ca522ff"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 6
    idRef {
      id: "59d3b217643431176ca522c3:59d4054a643431176ca5237a"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59d3b57c643431176ca522de"
  }
  index: 2
  text: "This amazing is. I such a sight never thought to see."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "59d3b217643431176ca522c3:59d3b57d643431176ca522e0"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isIsao"
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isIsao"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59d3b217643431176ca522c3:59d3b583643431176ca522ed"
  }
  index: 3
  text: "Well: here\342\200\231s another item I can check off my bucket list! Hopefully I have time to snap some pics and grab a couple of souvenirs before we head home."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "59d3b217643431176ca522c3:59d3b583643431176ca522ef"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isMasato"
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isMasato"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59d3b217643431176ca522c3:59d3b585643431176ca522f9"
  }
  index: 4
  text: "Thank goodness we made it. We\342\200\231re near the end, now. Just need to stay focused."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "59d3b217643431176ca522c3:59d3b585643431176ca522fb"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isKora"
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isKora"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59d3b217643431176ca522c3:59d3b585643431176ca52301"
  }
  index: 5
  text: "{{GM}}She has been quiet on the trip up, and her breathing has grown increasingly ragged. She stumbles on her way out of the shuttle, seeming disoriented and ill.{{/GM}}\n\nI\342\200\246 this place, I cannot\342\200\246 no more mana, the blackness\342\200\246"
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "59d3b217643431176ca522c3:59d3b585643431176ca52303"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isArelia"
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isArelia"
              }
            }
          }
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_hitreaction_bigbehind"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59d40556643431176ca5237d"
  }
  index: 6
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Compare Actor Specialization"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "BaseOrCurrent"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "ActorSpecializations"
                }
                args {
                  int_value: 7
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 2
                }
              }
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "OR"
            args {
              call_value {
                functionName: "Compare Actor Skill"
                args {
                  call_value {
                    functionName: "Triggering Actor"
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "BaseOrCurrent"
                    }
                    args {
                      int_value: 1
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "ActorSkills"
                    }
                    args {
                      int_value: 7
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "Comparison Ops"
                    }
                    args {
                      int_value: 2
                    }
                  }
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Compare Actor Skill"
                args {
                  call_value {
                    functionName: "Triggering Actor"
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "BaseOrCurrent"
                    }
                    args {
                      int_value: 1
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "ActorSkills"
                    }
                    args {
                      int_value: 3
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "Comparison Ops"
                    }
                    args {
                      int_value: 2
                    }
                  }
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
      }
    }
    nextNodeIndex: 7
    idRef {
      id: "59d3b217643431176ca522c3:59d40559643431176ca5237f"
    }
    comment: "PC0 spellcaster"
  }
  branches {
    responseText: ""
    nextNodeIndex: 9
    idRef {
      id: "59d3b217643431176ca522c3:59d40566643431176ca5238b"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59d40562643431176ca52387"
  }
  index: 7
  text: "You feel your heart constrict. An unpleasant sensation washes over you.\n\nIt feels like you are at the bottom of a swimming pool, unable to breathe. The astral plane, always so comfortably adjacent that you never noticed it, has abruptly vanished, leaving you alone and adrift.\n\nDark and dangerous thoughts begin to crawl at the edge of your thoughts, like spiders entering an abandoned warehouse."
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "ss_a6_sutro_s1-ManaMill"
            }
          }
        }
      }
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isArelia"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "59592f0b356564e833005f89"
            }
          }
        }
      }
    }
    nextNodeIndex: 8
    idRef {
      id: "59d3b217643431176ca522c3:59d40564643431176ca52389"
    }
  }
  branches {
    responseText: ""
    nextNodeIndex: 9
    idRef {
      id: "59d3b217643431176ca522c3:59d4069f643431176ca524db"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_GM_Speaker_Voice
  sourceInSceneRef {
    id: "5934d87635656440210023e5"
  }
}
nodes {
  idRef {
    id: "59d406a7643431176ca524de"
  }
  index: 8
  text: "Quick, the mana mill! Only one of us can use it. We\342\200\231ll need to protect the other, whoever it is."
  branches {
    responseText: ""
    nextNodeIndex: 9
    idRef {
      id: "59d3b217643431176ca522c3:59d406a9643431176ca524e0"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isArelia"
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isArelia"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59d3b217643431176ca522c3:59d40566643431176ca5238d"
  }
  index: 9
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "ss_a6_sutro_s1-ManaMill"
            }
          }
        }
      }
    }
    nextNodeIndex: 17
    idRef {
      id: "59d3b217643431176ca522c3:59d40566643431176ca5238f"
    }
    auxiliaryLink: true
    comment: "No - apply penalties"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "Cargo_SomeShadowrunnerMagic"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 10
    idRef {
      id: "59d3b217643431176ca522c3:59d40756643431886da52357"
    }
    comment: "No spellcasters on team - done"
  }
  branches {
    responseText: ""
    nextNodeIndex: 11
    idRef {
      id: "59d3b217643431176ca522c3:59d4067a643431176ca524b2"
    }
    comment: "Have mana mill and at least one spellcaster"
  }
  nodeType: ConversationNodeType_Simple
  comment: "Have the mana mill?"
}
nodes {
  idRef {
    id: "59da5b503565643406002c7f"
  }
  index: 10
  text: "Your breathing steadies. The atmosphere and gravity may be artificial, but they\'re close enough to the real thing for your needs."
  nodeType: ConversationNodeType_GM_Voice
}
nodes {
  idRef {
    id: "59d40682643431176ca524b5"
  }
  index: 11
  text: "You pull out the carved box and open it. Inside rests a torc, simple and elegant. A few small buds emerge from the smooth redwood. Even here you can sense its lifeforce, pulsing out mana into the inky void of space."
  branches {
    responseText: "{{GM}}Put on the torc.{{/GM}}"
    conditions {
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Compare Actor Specialization"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "BaseOrCurrent"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "ActorSpecializations"
                }
                args {
                  int_value: 7
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 2
                }
              }
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "OR"
            args {
              call_value {
                functionName: "Compare Actor Skill"
                args {
                  call_value {
                    functionName: "Triggering Actor"
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "BaseOrCurrent"
                    }
                    args {
                      int_value: 1
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "ActorSkills"
                    }
                    args {
                      int_value: 7
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "Comparison Ops"
                    }
                    args {
                      int_value: 2
                    }
                  }
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Compare Actor Skill"
                args {
                  call_value {
                    functionName: "Triggering Actor"
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "BaseOrCurrent"
                    }
                    args {
                      int_value: 1
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "ActorSkills"
                    }
                    args {
                      int_value: 3
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "Comparison Ops"
                    }
                    args {
                      int_value: 2
                    }
                  }
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Add Tag to Actor"
        args {
          call_value {
            functionName: "Get Map Item (SenseTagList)"
            args {
              string_value: "isWearingTorc"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
      }
    }
    nextNodeIndex: 12
    hideIfUnavailable: true
    idRef {
      id: "59d3b217643431176ca522c3:59d40688643431176ca524d9"
    }
  }
  branches {
    responseText: "Arelia, take this."
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isArelia"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "59592f0b356564e833005f89"
            }
          }
        }
      }
    }
    nextNodeIndex: 13
    hideIfUnavailable: true
    idRef {
      id: "59d3b217643431176ca522c3:59d40a47643431216ea5232f"
    }
  }
  branches {
    responseText: "Brent Shirkey, you should wear this."
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isBrentShirkey"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "59592f0b356564e833005f89"
            }
          }
        }
      }
    }
    nextNodeIndex: 14
    hideIfUnavailable: true
    idRef {
      id: "59d3b217643431176ca522c3:5a109f9a356564a83a001952"
    }
  }
  branches {
    responseText: "Opti, you should wear this."
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isOpti"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "59592f0b356564e833005f89"
            }
          }
        }
      }
    }
    nextNodeIndex: 15
    hideIfUnavailable: true
    idRef {
      id: "59d3b217643431176ca522c3:59d41175643431216ea52364"
    }
  }
  branches {
    responseText: "{{GM}}Discard the torc.{{/GM}}"
    nextNodeIndex: 16
    idRef {
      id: "59d3b217643431176ca522c3:59d411c2643431216ea52397"
    }
  }
  nodeType: ConversationNodeType_GM_Voice
  sourceInSceneRef {
    id: "5934d87635656440210023e5"
  }
}
nodes {
  idRef {
    id: "59d409b0643431096ea522dd"
  }
  index: 12
  text: "The instant the redwood encircles your neck, a wave of mana engulfs you. You stagger momentarily, adjusting to the sudden return of that which used to always be present.\n\nIt feels different from what you experienced on Earth: more potent but somehow thinner. Nonetheless, you feel confident that you will adapt to this new source and regain your powers."
  branches {
    responseText: ""
    nextNodeIndex: 17
    idRef {
      id: "59d3b217643431176ca522c3:59d411fa643431216ea52410"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_GM_Speaker_Voice
  sourceInSceneRef {
    id: "5934d87635656440210023e5"
  }
  actions {
    ops {
      functionName: "Add Tag to Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isWearingTorc"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_hitreaction_smallfront"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59d3b217643431176ca522c3:59d40a47643431216ea52331"
  }
  index: 13
  text: "{{GM}}She gratefully accepts the torc. Too small for her neck, she slides it up her arm like a bracelet. A look of relief abruptly crosses her face. She closes her eyes and murmurs softly.{{/GM}}\n\nOh. That is good. Thank you. Thank you. I am myself again. "
  branches {
    responseText: ""
    nextNodeIndex: 17
    idRef {
      id: "59d3b217643431176ca522c3:59d411f7643431216ea5240a"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isArelia"
  actions {
    ops {
      functionName: "Add Tag to Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isWearingTorc"
          }
        }
      }
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isArelia"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isArelia"
              }
            }
          }
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_hitreaction_smallfront"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59d3b217643431176ca522c3:5a109f9a356564a83a001954"
  }
  index: 14
  text: "{{GM}}$+(s.he) secures the torc, then takes a deep breath.{{/GM}}\n\nMuch better. You are wise to protect your investment."
  branches {
    responseText: ""
    nextNodeIndex: 17
    idRef {
      id: "59d3b217643431176ca522c3:5a109f9a356564a83a001956"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isBrentShirkey"
  actions {
    ops {
      functionName: "Add Tag to Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isWearingTorc"
          }
        }
      }
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isBrentShirkey"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59d3b217643431176ca522c3:59d41175643431216ea52366"
  }
  index: 15
  text: "{{GM}}He smiles at you and secures the torc, then flashes you a thumbs-up sign.{{/GM}}\n\nGood to go! I\342\200\231ll be much more useful to you now."
  branches {
    responseText: ""
    nextNodeIndex: 17
    idRef {
      id: "59d3b217643431176ca522c3:59d411f4643431216ea52407"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isOpti"
  actions {
    ops {
      functionName: "Add Tag to Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isWearingTorc"
          }
        }
      }
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isOpti"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59d411c5643431216ea5239a"
  }
  index: 16
  text: "It seems a waste after all the effort to bring it up here, but you return the torc back to its box and toss it back into the shuttle."
  branches {
    responseText: ""
    nextNodeIndex: 17
    idRef {
      id: "59d3b217643431176ca522c3:59d411d5643431216ea523cb"
    }
  }
  nodeType: ConversationNodeType_GM_Voice
  actions {
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "ss_a6_sutro_s1-ManaMill"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59d411d8643431216ea523ce"
  }
  index: 17
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isArelia"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "59592f0b356564e833005f89"
            }
          }
        }
      }
      ops {
        functionName: "Evaluate Tag for Actor"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isArelia"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SenseTagList)"
            args {
              string_value: "isWearingTorc"
            }
          }
        }
      }
    }
    nextNodeIndex: 18
    onlyOnce: true
    idRef {
      id: "59d3b217643431176ca522c3:59d412a6643431216ea524ca"
    }
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate Tag for Actor"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SenseTagList)"
            args {
              string_value: "isWearingTorc"
            }
          }
        }
      }
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Compare Actor Specialization"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "BaseOrCurrent"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "ActorSpecializations"
                }
                args {
                  int_value: 7
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 2
                }
              }
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "OR"
            args {
              call_value {
                functionName: "Compare Actor Skill"
                args {
                  call_value {
                    functionName: "Triggering Actor"
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "BaseOrCurrent"
                    }
                    args {
                      int_value: 1
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "ActorSkills"
                    }
                    args {
                      int_value: 7
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "Comparison Ops"
                    }
                    args {
                      int_value: 2
                    }
                  }
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Compare Actor Skill"
                args {
                  call_value {
                    functionName: "Triggering Actor"
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "BaseOrCurrent"
                    }
                    args {
                      int_value: 1
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "ActorSkills"
                    }
                    args {
                      int_value: 3
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "Comparison Ops"
                    }
                    args {
                      int_value: 2
                    }
                  }
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
      }
    }
    nextNodeIndex: 20
    onlyOnce: true
    idRef {
      id: "59d3b217643431176ca522c3:59d411f0643431216ea52401"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "59e220513565647039006c25"
          }
        }
      }
    }
  }
  comment: "Reactions to not having the torc"
}
nodes {
  idRef {
    id: "59d3b217643431176ca522c3:59d412a6643431216ea524cc"
  }
  index: 18
  text: "Her smile falters. Taking a deep breath, she shudders and clutches her head between her hands. After a long pause, she looks back up at you."
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "59d3b217643431176ca522c3:59d412eb643431216ea52517"
    }
  }
  nodeType: ConversationNodeType_GM_Speaker_Voice
  sourceWithTagInScene: "isArelia"
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isArelia"
              }
            }
          }
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_idle_headCradle"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59d412ef643431216ea5251a"
  }
  index: 19
  text: "I\342\200\231m with you. Don\342\200\231t know how much use I\342\200\231ll be, but whatever modest gifts I may have apart from my magic are at your disposal."
  branches {
    responseText: ""
    nextNodeIndex: 17
    idRef {
      id: "59d3b217643431176ca522c3:59d412a6643431216ea524ce"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isArelia"
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isArelia"
              }
            }
          }
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_idle"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59d41291643431216ea524bd"
  }
  index: 20
  text: "The crawling sensation grows worse. Gritting your jaw, you will it to pass.\n\nLong moments pass. The discomfort remains, but you are now accustomed to it. But you know that, until you return to Earth, your magic abilities will be useless."
  branches {
    responseText: ""
    nextNodeIndex: 17
    idRef {
      id: "59d3b217643431176ca522c3:59d41294643431216ea524bf"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_GM_Speaker_Voice
  sourceInSceneRef {
    id: "5934d87635656440210023e5"
  }
}
roots {
  nextNodeIndex: 0
  idRef {
    id: "59d3b217643431176ca522c3:59d3b217643431176ca522c7"
  }
}
