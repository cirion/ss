idRef {
  id: "59c48a26356564243e00776d"
}
ui_name: "ss_a5_mojave_s1-Conference_DorbiMidFight"
nodes {
  idRef {
    id: "59c48a30356564243e007775"
  }
  index: 0
  text: "You enjoying the show, Hansel?"
  branches {
    nextNodeIndex: 1
    idRef {
      id: "59c48a26356564243e00776d:59c48a34356564243e007777"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "59c48120356564c449003b4b"
              }
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59c48a26356564243e00776d:59c48a34356564243e007779"
  }
  index: 1
  text: "{{GM}}He roars, his composure finally gone.{{/GM}}\n\nYou fool! Why would you join with Saito, and then throw away everything he gave you?"
  branches {
    responseText: "I\342\200\231m also interested in hearing the answer to this question."
    nextNodeIndex: 2
    idRef {
      id: "59c48a26356564243e00776d:59c48a5f356564243e007784"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "She made the right decision in the end. That\342\200\231s what matters."
    nextNodeIndex: 2
    idRef {
      id: "59c48a26356564243e00776d:59c48a60356564243e007786"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "It\342\200\231s so hard to find reliable help these days."
    nextNodeIndex: 2
    idRef {
      id: "59c48a26356564243e00776d:59c48a60356564243e007788"
    }
  }
  nodeType: ConversationNodeType_Simple
  speaker_override_id: "59c48a92356564243e0077f7"
}
nodes {
  idRef {
    id: "59c48a75356564243e00778b"
  }
  index: 2
  text: "Aw, poor widdle Hansy is so confused! His tiny bwain can\342\200\231t understand, things are happening so fast! Wah, wah!\n\n{{GM}}She winks at you.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "59c48a26356564243e00776d:59c48aff356564243e007806"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "59c48b01356564243e007809"
  }
  index: 3
  text: "I\342\200\231ve been playing Saito from the start. That unimaginative, uptight shithead seriously thought that a dwarf would willingly support him! Fuckin\342\200\231 moron.\n\nI carried water for that asshole and kept my ears and eyes open. Along the way, I\342\200\231ve learned all I need to know about how he operates, what he\342\200\231s up to, and acquired the tools I need to cripple him."
  branches {
    responseText: ""
    nextNodeIndex: 4
    idRef {
      id: "59c48a26356564243e00776d:59c48b20356564243e00782d"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59c48b22356564243e007830"
  }
  index: 4
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isKora"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "594fe02e356564b444005eab"
            }
          }
        }
      }
    }
    nextNodeIndex: 5
    onlyOnce: true
    idRef {
      id: "59c48a26356564243e00776d:59c48b29356564243e007832"
    }
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isArelia"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "594fe02e356564b444005eab"
            }
          }
        }
      }
    }
    nextNodeIndex: 6
    onlyOnce: true
    idRef {
      id: "59c48a26356564243e00776d:59c48b4b356564243e007842"
    }
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isMasato"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "594fe02e356564b444005eab"
            }
          }
        }
      }
    }
    nextNodeIndex: 7
    onlyOnce: true
    idRef {
      id: "59c48a26356564243e00776d:59c48b4d356564243e00784e"
    }
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isIsas"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "594fe02e356564b444005eab"
            }
          }
        }
      }
    }
    nextNodeIndex: 8
    onlyOnce: true
    idRef {
      id: "59c48a26356564243e00776d:59c48b4d356564243e007856"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Reactive crew check-in"
}
nodes {
  idRef {
    id: "59c48b2c356564243e007835"
  }
  index: 5
  text: "I may have misjudged you, Dorbi.\n\nSomewhat."
  branches {
    responseText: ""
    nextNodeIndex: 4
    idRef {
      id: "59c48a26356564243e00776d:59c48b2d356564243e007837"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isKora"
}
nodes {
  idRef {
    id: "59c48a26356564243e00776d:59c48b4b356564243e007844"
  }
  index: 6
  text: "You\342\200\231d better aid us in rolling back all the problems you\342\200\231ve helped create."
  branches {
    responseText: ""
    nextNodeIndex: 4
    idRef {
      id: "59c48a26356564243e00776d:59c48b4b356564243e007846"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isArelia"
}
nodes {
  idRef {
    id: "59c48a26356564243e00776d:59c48b4d356564243e007850"
  }
  index: 7
  text: "Oh, man. Saito is going to be PISSED.\n\n{{GM}}He grins widely.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 4
    idRef {
      id: "59c48a26356564243e00776d:59c48b4d356564243e007852"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isMasato"
}
nodes {
  idRef {
    id: "59c48a26356564243e00776d:59c48b4d356564243e007858"
  }
  index: 8
  text: "You with us will join! Excellent. Together, we this wickedness can stop."
  branches {
    responseText: ""
    nextNodeIndex: 4
    idRef {
      id: "59c48a26356564243e00776d:59c48b4d356564243e00785a"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isIsas"
}
roots {
  nextNodeIndex: 0
  idRef {
    id: "59c48a26356564243e00776d:59c48a26356564243e007771"
  }
}
